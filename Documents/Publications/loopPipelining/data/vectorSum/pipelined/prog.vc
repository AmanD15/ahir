// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  in_data_pipe : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [in_data_pipe] 32 $depth 1
// $pipe  out_data_pipe : $float<8,23>  $depth 1 
// can point into 
// in scope  top-level
$pipe [out_data_pipe] 32 $depth 1
// load store constants for object A
$constant $W[A_base_address] : $int<7> := _b0000000
$constant $W[ADDOP] : $int<8> := _b00000000// 0
// load store constants for object B
$constant $W[B_base_address] : $int<7> := _b0000000
// load store constants for object C
$constant $W[C_base_address] : $int<7> := _b0000000
$constant $W[MULOP] : $int<8> := _b00000010// 2
$constant $W[SUBOP] : $int<8> := _b00000001// 1
$memoryspace [memory_space_0] 
{
  $capacity 64
  $datawidth 32
  $addrwidth 7
  $maxaccesswidth 32
  // $storage  A : $array[64] $of $float<8,23> // memory space index = 0  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [A] : $array[64] $of $float<8,23>
}
$memoryspace [memory_space_1] 
{
  $capacity 64
  $datawidth 32
  $addrwidth 7
  $maxaccesswidth 32
  // $storage  B : $array[64] $of $float<8,23> // memory space index = 1  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [B] : $array[64] $of $float<8,23>
}
$memoryspace [memory_space_2] 
{
  $capacity 64
  $datawidth 32
  $addrwidth 7
  $maxaccesswidth 32
  // $storage  C : $array[64] $of $float<8,23> // memory space index = 2  base address = 0  word size = 32
  // can point into 
  // in scope  top-level
  $object [C] : $array[64] $of $float<8,23>
}
$module [fpadd32] 
{
  $in L:$float<8,23>
  // can point into  foreign( $void )
  R:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val_x_x:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpadd32
  //  file prog.linked.opt.aa, line 14
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_26] 
    {
      // 	ret_val_x_x := (L + R)
      //  file prog.linked.opt.aa, line 19
      $T[assign_stmt_26_trigger_] 
      $T[assign_stmt_26_active_] 
      $T[assign_stmt_26_completed_] 
      assign_stmt_26_active_ <-& (assign_stmt_26_trigger_)
      // (L + R)
      $T[binary_25_trigger_] 
      $T[binary_25_active_] 
      $T[binary_25_completed_] 
      $T[binary_25_sample_start_] 
      $T[binary_25_sample_completed_] 
      $T[binary_25_update_start_] 
      $T[binary_25_update_completed_] 
      binary_25_sample_start_ <-& (binary_25_trigger_)
      binary_25_update_start_ <-& (binary_25_trigger_)
      binary_25_completed_ <-& (binary_25_update_completed_)
      binary_25_completed_ <-& (binary_25_sample_completed_)
      // L
      $T[simple_obj_ref_23_trigger_] 
      $T[simple_obj_ref_23_active_] 
      $T[simple_obj_ref_23_completed_] 
      // reference to interface object
      simple_obj_ref_23_completed_ <-& (simple_obj_ref_23_active_)
      simple_obj_ref_23_active_ <-& (simple_obj_ref_23_trigger_)
      // R
      $T[simple_obj_ref_24_trigger_] 
      $T[simple_obj_ref_24_active_] 
      $T[simple_obj_ref_24_completed_] 
      // reference to interface object
      simple_obj_ref_24_completed_ <-& (simple_obj_ref_24_active_)
      simple_obj_ref_24_active_ <-& (simple_obj_ref_24_trigger_)
      binary_25_trigger_ <-& (simple_obj_ref_23_completed_)
      binary_25_trigger_ <-& (simple_obj_ref_24_completed_)
      ;;[binary_25_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[binary_25_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      binary_25_sample_start_ &-> (binary_25_Sample)
      binary_25_sample_completed_ <-& (binary_25_Sample)
      binary_25_update_start_ &-> (binary_25_Update)
      binary_25_update_completed_ <-& (binary_25_Update)
      assign_stmt_26_trigger_ <-& (binary_25_completed_)
      // ret_val_x_x
      // implicit reference
      assign_stmt_26_completed_ <-& (assign_stmt_26_active_)
      // load-store dependencies..
    }
    // assign_stmt_26
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpadd32
    //  file prog.linked.opt.aa, line 14
    // 	ret_val_x_x := (L + R)
    //  file prog.linked.opt.aa, line 19
    // ret_val_x_x
    // 	ret_val_x_x := (L + R)
    //  file prog.linked.opt.aa, line 19
    // (L + R)
    +[binary_25_inst] (L R) (ret_val_x_x) 
  }
  // end data-path
  // 	ret_val_x_x := (L + R)
  //  file prog.linked.opt.aa, line 19
  // (L + R)
  binary_25_inst <=> (assign_stmt_26/binary_25_Sample/rr assign_stmt_26/binary_25_Update/cr) (assign_stmt_26/binary_25_Sample/ra assign_stmt_26/binary_25_Update/ca)
}
$module [fpadd64] 
{
  $in L:$float<11,52>
  // can point into  foreign( $void )
  R:$float<11,52>
  // can point into  foreign( $void )
  $out ret_val_x_x:$float<11,52>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpadd64
  //  file prog.linked.opt.aa, line 21
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_37] 
    {
      // 	ret_val_x_x := (L + R)
      //  file prog.linked.opt.aa, line 26
      $T[assign_stmt_37_trigger_] 
      $T[assign_stmt_37_active_] 
      $T[assign_stmt_37_completed_] 
      assign_stmt_37_active_ <-& (assign_stmt_37_trigger_)
      // (L + R)
      $T[binary_36_trigger_] 
      $T[binary_36_active_] 
      $T[binary_36_completed_] 
      $T[binary_36_sample_start_] 
      $T[binary_36_sample_completed_] 
      $T[binary_36_update_start_] 
      $T[binary_36_update_completed_] 
      binary_36_sample_start_ <-& (binary_36_trigger_)
      binary_36_update_start_ <-& (binary_36_trigger_)
      binary_36_completed_ <-& (binary_36_update_completed_)
      binary_36_completed_ <-& (binary_36_sample_completed_)
      // L
      $T[simple_obj_ref_34_trigger_] 
      $T[simple_obj_ref_34_active_] 
      $T[simple_obj_ref_34_completed_] 
      // reference to interface object
      simple_obj_ref_34_completed_ <-& (simple_obj_ref_34_active_)
      simple_obj_ref_34_active_ <-& (simple_obj_ref_34_trigger_)
      // R
      $T[simple_obj_ref_35_trigger_] 
      $T[simple_obj_ref_35_active_] 
      $T[simple_obj_ref_35_completed_] 
      // reference to interface object
      simple_obj_ref_35_completed_ <-& (simple_obj_ref_35_active_)
      simple_obj_ref_35_active_ <-& (simple_obj_ref_35_trigger_)
      binary_36_trigger_ <-& (simple_obj_ref_34_completed_)
      binary_36_trigger_ <-& (simple_obj_ref_35_completed_)
      ;;[binary_36_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[binary_36_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      binary_36_sample_start_ &-> (binary_36_Sample)
      binary_36_sample_completed_ <-& (binary_36_Sample)
      binary_36_update_start_ &-> (binary_36_Update)
      binary_36_update_completed_ <-& (binary_36_Update)
      assign_stmt_37_trigger_ <-& (binary_36_completed_)
      // ret_val_x_x
      // implicit reference
      assign_stmt_37_completed_ <-& (assign_stmt_37_active_)
      // load-store dependencies..
    }
    // assign_stmt_37
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpadd64
    //  file prog.linked.opt.aa, line 21
    // 	ret_val_x_x := (L + R)
    //  file prog.linked.opt.aa, line 26
    // ret_val_x_x
    // 	ret_val_x_x := (L + R)
    //  file prog.linked.opt.aa, line 26
    // (L + R)
    +[binary_36_inst] (L R) (ret_val_x_x) 
  }
  // end data-path
  // 	ret_val_x_x := (L + R)
  //  file prog.linked.opt.aa, line 26
  // (L + R)
  binary_36_inst <=> (assign_stmt_37/binary_36_Sample/rr assign_stmt_37/binary_36_Update/cr) (assign_stmt_37/binary_36_Sample/ra assign_stmt_37/binary_36_Update/ca)
}
$module [fpmul32] 
{
  $in L:$float<8,23>
  // can point into  foreign( $void )
  R:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val_x_x:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpmul32
  //  file prog.linked.opt.aa, line 28
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_47] 
    {
      // 	ret_val_x_x := (L * R)
      //  file prog.linked.opt.aa, line 33
      $T[assign_stmt_47_trigger_] 
      $T[assign_stmt_47_active_] 
      $T[assign_stmt_47_completed_] 
      assign_stmt_47_active_ <-& (assign_stmt_47_trigger_)
      // (L * R)
      $T[binary_46_trigger_] 
      $T[binary_46_active_] 
      $T[binary_46_completed_] 
      $T[binary_46_sample_start_] 
      $T[binary_46_sample_completed_] 
      $T[binary_46_update_start_] 
      $T[binary_46_update_completed_] 
      binary_46_sample_start_ <-& (binary_46_trigger_)
      binary_46_update_start_ <-& (binary_46_trigger_)
      binary_46_completed_ <-& (binary_46_update_completed_)
      binary_46_completed_ <-& (binary_46_sample_completed_)
      // L
      $T[simple_obj_ref_44_trigger_] 
      $T[simple_obj_ref_44_active_] 
      $T[simple_obj_ref_44_completed_] 
      // reference to interface object
      simple_obj_ref_44_completed_ <-& (simple_obj_ref_44_active_)
      simple_obj_ref_44_active_ <-& (simple_obj_ref_44_trigger_)
      // R
      $T[simple_obj_ref_45_trigger_] 
      $T[simple_obj_ref_45_active_] 
      $T[simple_obj_ref_45_completed_] 
      // reference to interface object
      simple_obj_ref_45_completed_ <-& (simple_obj_ref_45_active_)
      simple_obj_ref_45_active_ <-& (simple_obj_ref_45_trigger_)
      binary_46_trigger_ <-& (simple_obj_ref_44_completed_)
      binary_46_trigger_ <-& (simple_obj_ref_45_completed_)
      ;;[binary_46_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[binary_46_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      binary_46_sample_start_ &-> (binary_46_Sample)
      binary_46_sample_completed_ <-& (binary_46_Sample)
      binary_46_update_start_ &-> (binary_46_Update)
      binary_46_update_completed_ <-& (binary_46_Update)
      assign_stmt_47_trigger_ <-& (binary_46_completed_)
      // ret_val_x_x
      // implicit reference
      assign_stmt_47_completed_ <-& (assign_stmt_47_active_)
      // load-store dependencies..
    }
    // assign_stmt_47
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpmul32
    //  file prog.linked.opt.aa, line 28
    // 	ret_val_x_x := (L * R)
    //  file prog.linked.opt.aa, line 33
    // ret_val_x_x
    // 	ret_val_x_x := (L * R)
    //  file prog.linked.opt.aa, line 33
    // (L * R)
    *[binary_46_inst] (L R) (ret_val_x_x) 
  }
  // end data-path
  // 	ret_val_x_x := (L * R)
  //  file prog.linked.opt.aa, line 33
  // (L * R)
  binary_46_inst <=> (assign_stmt_47/binary_46_Sample/rr assign_stmt_47/binary_46_Update/cr) (assign_stmt_47/binary_46_Sample/ra assign_stmt_47/binary_46_Update/ca)
}
$module [fpmul64] 
{
  $in L:$float<11,52>
  // can point into  foreign( $void )
  R:$float<11,52>
  // can point into  foreign( $void )
  $out ret_val_x_x:$float<11,52>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpmul64
  //  file prog.linked.opt.aa, line 35
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_57] 
    {
      // 	ret_val_x_x := (L * R)
      //  file prog.linked.opt.aa, line 40
      $T[assign_stmt_57_trigger_] 
      $T[assign_stmt_57_active_] 
      $T[assign_stmt_57_completed_] 
      assign_stmt_57_active_ <-& (assign_stmt_57_trigger_)
      // (L * R)
      $T[binary_56_trigger_] 
      $T[binary_56_active_] 
      $T[binary_56_completed_] 
      $T[binary_56_sample_start_] 
      $T[binary_56_sample_completed_] 
      $T[binary_56_update_start_] 
      $T[binary_56_update_completed_] 
      binary_56_sample_start_ <-& (binary_56_trigger_)
      binary_56_update_start_ <-& (binary_56_trigger_)
      binary_56_completed_ <-& (binary_56_update_completed_)
      binary_56_completed_ <-& (binary_56_sample_completed_)
      // L
      $T[simple_obj_ref_54_trigger_] 
      $T[simple_obj_ref_54_active_] 
      $T[simple_obj_ref_54_completed_] 
      // reference to interface object
      simple_obj_ref_54_completed_ <-& (simple_obj_ref_54_active_)
      simple_obj_ref_54_active_ <-& (simple_obj_ref_54_trigger_)
      // R
      $T[simple_obj_ref_55_trigger_] 
      $T[simple_obj_ref_55_active_] 
      $T[simple_obj_ref_55_completed_] 
      // reference to interface object
      simple_obj_ref_55_completed_ <-& (simple_obj_ref_55_active_)
      simple_obj_ref_55_active_ <-& (simple_obj_ref_55_trigger_)
      binary_56_trigger_ <-& (simple_obj_ref_54_completed_)
      binary_56_trigger_ <-& (simple_obj_ref_55_completed_)
      ;;[binary_56_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[binary_56_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      binary_56_sample_start_ &-> (binary_56_Sample)
      binary_56_sample_completed_ <-& (binary_56_Sample)
      binary_56_update_start_ &-> (binary_56_Update)
      binary_56_update_completed_ <-& (binary_56_Update)
      assign_stmt_57_trigger_ <-& (binary_56_completed_)
      // ret_val_x_x
      // implicit reference
      assign_stmt_57_completed_ <-& (assign_stmt_57_active_)
      // load-store dependencies..
    }
    // assign_stmt_57
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpmul64
    //  file prog.linked.opt.aa, line 35
    // 	ret_val_x_x := (L * R)
    //  file prog.linked.opt.aa, line 40
    // ret_val_x_x
    // 	ret_val_x_x := (L * R)
    //  file prog.linked.opt.aa, line 40
    // (L * R)
    *[binary_56_inst] (L R) (ret_val_x_x) 
  }
  // end data-path
  // 	ret_val_x_x := (L * R)
  //  file prog.linked.opt.aa, line 40
  // (L * R)
  binary_56_inst <=> (assign_stmt_57/binary_56_Sample/rr assign_stmt_57/binary_56_Update/cr) (assign_stmt_57/binary_56_Sample/ra assign_stmt_57/binary_56_Update/ca)
}
$module [fpsub32] 
{
  $in L:$float<8,23>
  // can point into  foreign( $void )
  R:$float<8,23>
  // can point into  foreign( $void )
  $out ret_val_x_x:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpsub32
  //  file prog.linked.opt.aa, line 42
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_67] 
    {
      // 	ret_val_x_x := (L - R)
      //  file prog.linked.opt.aa, line 47
      $T[assign_stmt_67_trigger_] 
      $T[assign_stmt_67_active_] 
      $T[assign_stmt_67_completed_] 
      assign_stmt_67_active_ <-& (assign_stmt_67_trigger_)
      // (L - R)
      $T[binary_66_trigger_] 
      $T[binary_66_active_] 
      $T[binary_66_completed_] 
      $T[binary_66_sample_start_] 
      $T[binary_66_sample_completed_] 
      $T[binary_66_update_start_] 
      $T[binary_66_update_completed_] 
      binary_66_sample_start_ <-& (binary_66_trigger_)
      binary_66_update_start_ <-& (binary_66_trigger_)
      binary_66_completed_ <-& (binary_66_update_completed_)
      binary_66_completed_ <-& (binary_66_sample_completed_)
      // L
      $T[simple_obj_ref_64_trigger_] 
      $T[simple_obj_ref_64_active_] 
      $T[simple_obj_ref_64_completed_] 
      // reference to interface object
      simple_obj_ref_64_completed_ <-& (simple_obj_ref_64_active_)
      simple_obj_ref_64_active_ <-& (simple_obj_ref_64_trigger_)
      // R
      $T[simple_obj_ref_65_trigger_] 
      $T[simple_obj_ref_65_active_] 
      $T[simple_obj_ref_65_completed_] 
      // reference to interface object
      simple_obj_ref_65_completed_ <-& (simple_obj_ref_65_active_)
      simple_obj_ref_65_active_ <-& (simple_obj_ref_65_trigger_)
      binary_66_trigger_ <-& (simple_obj_ref_64_completed_)
      binary_66_trigger_ <-& (simple_obj_ref_65_completed_)
      ;;[binary_66_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[binary_66_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      binary_66_sample_start_ &-> (binary_66_Sample)
      binary_66_sample_completed_ <-& (binary_66_Sample)
      binary_66_update_start_ &-> (binary_66_Update)
      binary_66_update_completed_ <-& (binary_66_Update)
      assign_stmt_67_trigger_ <-& (binary_66_completed_)
      // ret_val_x_x
      // implicit reference
      assign_stmt_67_completed_ <-& (assign_stmt_67_active_)
      // load-store dependencies..
    }
    // assign_stmt_67
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpsub32
    //  file prog.linked.opt.aa, line 42
    // 	ret_val_x_x := (L - R)
    //  file prog.linked.opt.aa, line 47
    // ret_val_x_x
    // 	ret_val_x_x := (L - R)
    //  file prog.linked.opt.aa, line 47
    // (L - R)
    -[binary_66_inst] (L R) (ret_val_x_x) 
  }
  // end data-path
  // 	ret_val_x_x := (L - R)
  //  file prog.linked.opt.aa, line 47
  // (L - R)
  binary_66_inst <=> (assign_stmt_67/binary_66_Sample/rr assign_stmt_67/binary_66_Update/cr) (assign_stmt_67/binary_66_Sample/ra assign_stmt_67/binary_66_Update/ca)
}
$module [fpsub64] 
{
  $in L:$float<11,52>
  // can point into  foreign( $void )
  R:$float<11,52>
  // can point into  foreign( $void )
  $out ret_val_x_x:$float<11,52>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpsub64
  //  file prog.linked.opt.aa, line 49
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_77] 
    {
      // 	ret_val_x_x := (L - R)
      //  file prog.linked.opt.aa, line 54
      $T[assign_stmt_77_trigger_] 
      $T[assign_stmt_77_active_] 
      $T[assign_stmt_77_completed_] 
      assign_stmt_77_active_ <-& (assign_stmt_77_trigger_)
      // (L - R)
      $T[binary_76_trigger_] 
      $T[binary_76_active_] 
      $T[binary_76_completed_] 
      $T[binary_76_sample_start_] 
      $T[binary_76_sample_completed_] 
      $T[binary_76_update_start_] 
      $T[binary_76_update_completed_] 
      binary_76_sample_start_ <-& (binary_76_trigger_)
      binary_76_update_start_ <-& (binary_76_trigger_)
      binary_76_completed_ <-& (binary_76_update_completed_)
      binary_76_completed_ <-& (binary_76_sample_completed_)
      // L
      $T[simple_obj_ref_74_trigger_] 
      $T[simple_obj_ref_74_active_] 
      $T[simple_obj_ref_74_completed_] 
      // reference to interface object
      simple_obj_ref_74_completed_ <-& (simple_obj_ref_74_active_)
      simple_obj_ref_74_active_ <-& (simple_obj_ref_74_trigger_)
      // R
      $T[simple_obj_ref_75_trigger_] 
      $T[simple_obj_ref_75_active_] 
      $T[simple_obj_ref_75_completed_] 
      // reference to interface object
      simple_obj_ref_75_completed_ <-& (simple_obj_ref_75_active_)
      simple_obj_ref_75_active_ <-& (simple_obj_ref_75_trigger_)
      binary_76_trigger_ <-& (simple_obj_ref_74_completed_)
      binary_76_trigger_ <-& (simple_obj_ref_75_completed_)
      ;;[binary_76_Sample] 
      {
        // binary expression 
        $T [rr] $T [ra]  // (split) binary operation 
      }
      ;;[binary_76_Update] 
      {
        // binary expression 
        $T [cr] $T [ca] // (split) binary operation 
      }
      binary_76_sample_start_ &-> (binary_76_Sample)
      binary_76_sample_completed_ <-& (binary_76_Sample)
      binary_76_update_start_ &-> (binary_76_Update)
      binary_76_update_completed_ <-& (binary_76_Update)
      assign_stmt_77_trigger_ <-& (binary_76_completed_)
      // ret_val_x_x
      // implicit reference
      assign_stmt_77_completed_ <-& (assign_stmt_77_active_)
      // load-store dependencies..
    }
    // assign_stmt_77
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpsub64
    //  file prog.linked.opt.aa, line 49
    // 	ret_val_x_x := (L - R)
    //  file prog.linked.opt.aa, line 54
    // ret_val_x_x
    // 	ret_val_x_x := (L - R)
    //  file prog.linked.opt.aa, line 54
    // (L - R)
    -[binary_76_inst] (L R) (ret_val_x_x) 
  }
  // end data-path
  // 	ret_val_x_x := (L - R)
  //  file prog.linked.opt.aa, line 54
  // (L - R)
  binary_76_inst <=> (assign_stmt_77/binary_76_Sample/rr assign_stmt_77/binary_76_Update/cr) (assign_stmt_77/binary_76_Sample/ra assign_stmt_77/binary_76_Update/ca)
}
$module [fpu32] 
{
  $in L:$float<8,23>
  // can point into  foreign( $void )
  R:$float<8,23>
  // can point into  foreign( $void )
  OP_ID:$int<8>
  // can point into  foreign( $void )
  $out ret_val_x_x:$float<8,23>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpu32
  //  file prog.linked.opt.aa, line 56
  // pipe-declarations for block %fpu32%Sw
  //  file prog.linked.opt.aa, line 61
  // pipe-declarations for block %fpu32%Sw%
  //  file prog.linked.opt.aa, line 76
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_84] // Branch Block  file prog.linked.opt.aa, line 61
    {
      $P [branch_block_stmt_84__entry__]
      branch_block_stmt_84__entry__ <-| ($entry)
      $P [branch_block_stmt_84__exit__]
      branch_block_stmt_84__exit__ |-> ($exit)
      $P [switch_stmt_85__entry__] 
      $P [switch_stmt_85__exit__] 
      $P [merge_stmt_113__entry__] 
      $P [merge_stmt_113__exit__] 
      // control-path for switch  
      //  file prog.linked.opt.aa, line 63
      ;;[switch_stmt_85_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_85__entry__ |-> (switch_stmt_85_dead_link)
      switch_stmt_85__exit__ <-| (switch_stmt_85_dead_link)
      //---------------------    switch statement  file prog.linked.opt.aa, line 63  --------------------------
      $P [switch_stmt_85__condition_check_place__] 
      switch_stmt_85__entry__ |-> (switch_stmt_85__condition_check_place__)
      ||[switch_stmt_85__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_2] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_85__condition_check_place__ |-> (switch_stmt_85__condition_check__)
      $P [switch_stmt_85__select__] 
      switch_stmt_85__select__ <-| (switch_stmt_85__condition_check__)
      // switch choice 0
      ;;[switch_stmt_85_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_92__entry__] 
      $P [assign_stmt_92__exit__] 
      $P [a]
      ::[assign_stmt_92] 
      {
        // 			oadd := (L + R)
        //  file prog.linked.opt.aa, line 65
        $T[assign_stmt_92_trigger_] 
        $T[assign_stmt_92_active_] 
        $T[assign_stmt_92_completed_] 
        assign_stmt_92_active_ <-& (assign_stmt_92_trigger_)
        // (L + R)
        $T[binary_91_trigger_] 
        $T[binary_91_active_] 
        $T[binary_91_completed_] 
        $T[binary_91_sample_start_] 
        $T[binary_91_sample_completed_] 
        $T[binary_91_update_start_] 
        $T[binary_91_update_completed_] 
        binary_91_sample_start_ <-& (binary_91_trigger_)
        binary_91_update_start_ <-& (binary_91_trigger_)
        binary_91_completed_ <-& (binary_91_update_completed_)
        binary_91_completed_ <-& (binary_91_sample_completed_)
        // L
        $T[simple_obj_ref_89_trigger_] 
        $T[simple_obj_ref_89_active_] 
        $T[simple_obj_ref_89_completed_] 
        // reference to interface object
        simple_obj_ref_89_completed_ <-& (simple_obj_ref_89_active_)
        simple_obj_ref_89_active_ <-& (simple_obj_ref_89_trigger_)
        // R
        $T[simple_obj_ref_90_trigger_] 
        $T[simple_obj_ref_90_active_] 
        $T[simple_obj_ref_90_completed_] 
        // reference to interface object
        simple_obj_ref_90_completed_ <-& (simple_obj_ref_90_active_)
        simple_obj_ref_90_active_ <-& (simple_obj_ref_90_trigger_)
        binary_91_trigger_ <-& (simple_obj_ref_89_completed_)
        binary_91_trigger_ <-& (simple_obj_ref_90_completed_)
        ;;[binary_91_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_91_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_91_sample_start_ &-> (binary_91_Sample)
        binary_91_sample_completed_ <-& (binary_91_Sample)
        binary_91_update_start_ &-> (binary_91_Update)
        binary_91_update_completed_ <-& (binary_91_Update)
        assign_stmt_92_trigger_ <-& (binary_91_completed_)
        // oadd
        // implicit reference
        assign_stmt_92_completed_ <-& (assign_stmt_92_active_)
        // load-store dependencies..
      }
      // assign_stmt_92
      assign_stmt_92__entry__ |-> (assign_stmt_92)
      assign_stmt_92__exit__ <-| (assign_stmt_92)
      assign_stmt_92__entry__ <-| (switch_stmt_85_choice_0)
      a <-| (assign_stmt_92__exit__)
      // switch choice 1
      ;;[switch_stmt_85_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_100__entry__] 
      $P [assign_stmt_100__exit__] 
      $P [s]
      ::[assign_stmt_100] 
      {
        // 			osub := (L - R)
        //  file prog.linked.opt.aa, line 68
        $T[assign_stmt_100_trigger_] 
        $T[assign_stmt_100_active_] 
        $T[assign_stmt_100_completed_] 
        assign_stmt_100_active_ <-& (assign_stmt_100_trigger_)
        // (L - R)
        $T[binary_99_trigger_] 
        $T[binary_99_active_] 
        $T[binary_99_completed_] 
        $T[binary_99_sample_start_] 
        $T[binary_99_sample_completed_] 
        $T[binary_99_update_start_] 
        $T[binary_99_update_completed_] 
        binary_99_sample_start_ <-& (binary_99_trigger_)
        binary_99_update_start_ <-& (binary_99_trigger_)
        binary_99_completed_ <-& (binary_99_update_completed_)
        binary_99_completed_ <-& (binary_99_sample_completed_)
        // L
        $T[simple_obj_ref_97_trigger_] 
        $T[simple_obj_ref_97_active_] 
        $T[simple_obj_ref_97_completed_] 
        // reference to interface object
        simple_obj_ref_97_completed_ <-& (simple_obj_ref_97_active_)
        simple_obj_ref_97_active_ <-& (simple_obj_ref_97_trigger_)
        // R
        $T[simple_obj_ref_98_trigger_] 
        $T[simple_obj_ref_98_active_] 
        $T[simple_obj_ref_98_completed_] 
        // reference to interface object
        simple_obj_ref_98_completed_ <-& (simple_obj_ref_98_active_)
        simple_obj_ref_98_active_ <-& (simple_obj_ref_98_trigger_)
        binary_99_trigger_ <-& (simple_obj_ref_97_completed_)
        binary_99_trigger_ <-& (simple_obj_ref_98_completed_)
        ;;[binary_99_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_99_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_99_sample_start_ &-> (binary_99_Sample)
        binary_99_sample_completed_ <-& (binary_99_Sample)
        binary_99_update_start_ &-> (binary_99_Update)
        binary_99_update_completed_ <-& (binary_99_Update)
        assign_stmt_100_trigger_ <-& (binary_99_completed_)
        // osub
        // implicit reference
        assign_stmt_100_completed_ <-& (assign_stmt_100_active_)
        // load-store dependencies..
      }
      // assign_stmt_100
      assign_stmt_100__entry__ |-> (assign_stmt_100)
      assign_stmt_100__exit__ <-| (assign_stmt_100)
      assign_stmt_100__entry__ <-| (switch_stmt_85_choice_1)
      s <-| (assign_stmt_100__exit__)
      // switch choice 2
      ;;[switch_stmt_85_choice_2] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_108__entry__] 
      $P [assign_stmt_108__exit__] 
      $P [m]
      ::[assign_stmt_108] 
      {
        // 			omul := (L * R)
        //  file prog.linked.opt.aa, line 71
        $T[assign_stmt_108_trigger_] 
        $T[assign_stmt_108_active_] 
        $T[assign_stmt_108_completed_] 
        assign_stmt_108_active_ <-& (assign_stmt_108_trigger_)
        // (L * R)
        $T[binary_107_trigger_] 
        $T[binary_107_active_] 
        $T[binary_107_completed_] 
        $T[binary_107_sample_start_] 
        $T[binary_107_sample_completed_] 
        $T[binary_107_update_start_] 
        $T[binary_107_update_completed_] 
        binary_107_sample_start_ <-& (binary_107_trigger_)
        binary_107_update_start_ <-& (binary_107_trigger_)
        binary_107_completed_ <-& (binary_107_update_completed_)
        binary_107_completed_ <-& (binary_107_sample_completed_)
        // L
        $T[simple_obj_ref_105_trigger_] 
        $T[simple_obj_ref_105_active_] 
        $T[simple_obj_ref_105_completed_] 
        // reference to interface object
        simple_obj_ref_105_completed_ <-& (simple_obj_ref_105_active_)
        simple_obj_ref_105_active_ <-& (simple_obj_ref_105_trigger_)
        // R
        $T[simple_obj_ref_106_trigger_] 
        $T[simple_obj_ref_106_active_] 
        $T[simple_obj_ref_106_completed_] 
        // reference to interface object
        simple_obj_ref_106_completed_ <-& (simple_obj_ref_106_active_)
        simple_obj_ref_106_active_ <-& (simple_obj_ref_106_trigger_)
        binary_107_trigger_ <-& (simple_obj_ref_105_completed_)
        binary_107_trigger_ <-& (simple_obj_ref_106_completed_)
        ;;[binary_107_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_107_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_107_sample_start_ &-> (binary_107_Sample)
        binary_107_sample_completed_ <-& (binary_107_Sample)
        binary_107_update_start_ &-> (binary_107_Update)
        binary_107_update_completed_ <-& (binary_107_Update)
        assign_stmt_108_trigger_ <-& (binary_107_completed_)
        // omul
        // implicit reference
        assign_stmt_108_completed_ <-& (assign_stmt_108_active_)
        // load-store dependencies..
      }
      // assign_stmt_108
      assign_stmt_108__entry__ |-> (assign_stmt_108)
      assign_stmt_108__exit__ <-| (assign_stmt_108)
      assign_stmt_108__entry__ <-| (switch_stmt_85_choice_2)
      m <-| (assign_stmt_108__exit__)
      ;;[switch_stmt_85_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [nop]
      nop <-| (switch_stmt_85_choice_default)
      switch_stmt_85__select__ |-> (switch_stmt_85_choice_0 switch_stmt_85_choice_1 switch_stmt_85_choice_2 switch_stmt_85_choice_default)
      //---------------------   end of switch statement  file prog.linked.opt.aa, line 63  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 76
      ;;[merge_stmt_113_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_113__entry__ |-> (merge_stmt_113_dead_link)
      merge_stmt_113__exit__ <-| (merge_stmt_113_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 76  --------------------------
      ||[a_PhiReq] 
      {
        ;;[phi_stmt_114] 
        {
          ||[phi_stmt_114_sources] 
          {
            // sources for 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<8,23>
          }
          $T [phi_stmt_114_req] 
        }
      }
      a |-> (a_PhiReq)
      ||[m_PhiReq] 
      {
        ;;[phi_stmt_114] 
        {
          ||[phi_stmt_114_sources] 
          {
            // sources for 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<8,23>
          }
          $T [phi_stmt_114_req] 
        }
      }
      m |-> (m_PhiReq)
      ||[nop_PhiReq] 
      {
        ;;[phi_stmt_114] 
        {
          ||[phi_stmt_114_sources] 
          {
            // sources for 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<8,23>
          }
          $T [phi_stmt_114_req] 
        }
      }
      nop |-> (nop_PhiReq)
      ||[s_PhiReq] 
      {
        ;;[phi_stmt_114] 
        {
          ||[phi_stmt_114_sources] 
          {
            // sources for 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<8,23>
          }
          $T [phi_stmt_114_req] 
        }
      }
      s |-> (s_PhiReq)
      $P [merge_stmt_113_PhiReqMerge] 
      merge_stmt_113_PhiReqMerge <-| ( a_PhiReq  m_PhiReq  nop_PhiReq  s_PhiReq )
      ||[merge_stmt_113_PhiAck] 
      {
        $T [phi_stmt_114_ack] 
      }
      merge_stmt_113_PhiReqMerge |-> (merge_stmt_113_PhiAck)
      merge_stmt_113__exit__  <-| (merge_stmt_113_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 76  --------------------------
      switch_stmt_85__entry__ <-| (branch_block_stmt_84__entry__)
      merge_stmt_113__entry__ <-| (switch_stmt_85__exit__)
      merge_stmt_113__exit__ |-> (branch_block_stmt_84__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpu32%Sw%
    //  file prog.linked.opt.aa, line 76
    // constant-object-declarations for block %fpu32%Sw
    //  file prog.linked.opt.aa, line 61
    // constant-object-declarations for block %fpu32
    //  file prog.linked.opt.aa, line 56
    // constant-declarations for block %fpu32%Sw
    //  file prog.linked.opt.aa, line 61
    // constant-declarations  for switch  
    //  file prog.linked.opt.aa, line 63
    // ADDOP
    $constant $W[simple_obj_ref_87_wire_constant] : $int<8> := _b00000000// 0
    // SUBOP
    $constant $W[simple_obj_ref_95_wire_constant] : $int<8> := _b00000001// 1
    // MULOP
    $constant $W[simple_obj_ref_103_wire_constant] : $int<8> := _b00000010// 2
    // constant-declarations for block %fpu32%Sw%
    //  file prog.linked.opt.aa, line 76
    // constant-declarations for phi:  			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 77
    // _f0.0e+0
    $constant $W[expr_119_wire_constant] : $float<8,23> := _b00000000000000000000000000000000// 0.000000e+00
    // block %fpu32%Sw
    //  file prog.linked.opt.aa, line 61
    // switch-statement  
    //  file prog.linked.opt.aa, line 63
    $W[simple_obj_ref_87_wire_constant_cmp] : $int<1>
    // 			oadd := (L + R)
    //  file prog.linked.opt.aa, line 65
    // oadd
    $W[oadd_92] : $float<8,23>
    $W[simple_obj_ref_95_wire_constant_cmp] : $int<1>
    // 			osub := (L - R)
    //  file prog.linked.opt.aa, line 68
    // osub
    $W[osub_100] : $float<8,23>
    $W[simple_obj_ref_103_wire_constant_cmp] : $int<1>
    // 			omul := (L * R)
    //  file prog.linked.opt.aa, line 71
    // omul
    $W[omul_108] : $float<8,23>
    // merge-statement  
    //  file prog.linked.opt.aa, line 76
    // 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 77
    // ret_val_x_x
    // datapath-instances for block %fpu32%Sw
    //  file prog.linked.opt.aa, line 61
    // datapath-instances  for switch  
    //  file prog.linked.opt.aa, line 63
    ==[switch_stmt_85_select_expr_0] (OP_ID simple_obj_ref_87_wire_constant) (simple_obj_ref_87_wire_constant_cmp) 
    ==0? [switch_stmt_85_branch_0] (simple_obj_ref_87_wire_constant_cmp)
    // 			oadd := (L + R)
    //  file prog.linked.opt.aa, line 65
    // (L + R)
    +[binary_91_inst] (L R) (oadd_92) 
    ==[switch_stmt_85_select_expr_1] (OP_ID simple_obj_ref_95_wire_constant) (simple_obj_ref_95_wire_constant_cmp) 
    ==0? [switch_stmt_85_branch_1] (simple_obj_ref_95_wire_constant_cmp)
    // 			osub := (L - R)
    //  file prog.linked.opt.aa, line 68
    // (L - R)
    -[binary_99_inst] (L R) (osub_100) 
    ==[switch_stmt_85_select_expr_2] (OP_ID simple_obj_ref_103_wire_constant) (simple_obj_ref_103_wire_constant_cmp) 
    ==0? [switch_stmt_85_branch_2] (simple_obj_ref_103_wire_constant_cmp)
    // 			omul := (L * R)
    //  file prog.linked.opt.aa, line 71
    // (L * R)
    *[binary_107_inst] (L R) (omul_108) 
    ==0? [switch_stmt_85_branch_default] (simple_obj_ref_87_wire_constant_cmp simple_obj_ref_95_wire_constant_cmp simple_obj_ref_103_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 76
    // 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<8,23>
    //  file prog.linked.opt.aa, line 77
    $phi [phi_stmt_114] (oadd_92 osub_100 omul_108 expr_119_wire_constant) ( ret_val_x_x )
  }
  // end data-path
  // CP-DP links for switch  
  //  file prog.linked.opt.aa, line 63
  switch_stmt_85_select_expr_0 <=> (branch_block_stmt_84/switch_stmt_85__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_84/switch_stmt_85__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_84/switch_stmt_85__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_84/switch_stmt_85__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_85_branch_0 <=> (branch_block_stmt_84/switch_stmt_85__condition_check__/condition_0/cmp) ($open branch_block_stmt_84/switch_stmt_85_choice_0/ack1)
  // 			oadd := (L + R)
  //  file prog.linked.opt.aa, line 65
  // (L + R)
  binary_91_inst <=> (branch_block_stmt_84/assign_stmt_92/binary_91_Sample/rr branch_block_stmt_84/assign_stmt_92/binary_91_Update/cr) (branch_block_stmt_84/assign_stmt_92/binary_91_Sample/ra branch_block_stmt_84/assign_stmt_92/binary_91_Update/ca)
  switch_stmt_85_select_expr_1 <=> (branch_block_stmt_84/switch_stmt_85__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_84/switch_stmt_85__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_84/switch_stmt_85__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_84/switch_stmt_85__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_85_branch_1 <=> (branch_block_stmt_84/switch_stmt_85__condition_check__/condition_1/cmp) ($open branch_block_stmt_84/switch_stmt_85_choice_1/ack1)
  // 			osub := (L - R)
  //  file prog.linked.opt.aa, line 68
  // (L - R)
  binary_99_inst <=> (branch_block_stmt_84/assign_stmt_100/binary_99_Sample/rr branch_block_stmt_84/assign_stmt_100/binary_99_Update/cr) (branch_block_stmt_84/assign_stmt_100/binary_99_Sample/ra branch_block_stmt_84/assign_stmt_100/binary_99_Update/ca)
  switch_stmt_85_select_expr_2 <=> (branch_block_stmt_84/switch_stmt_85__condition_check__/condition_2/SplitProtocol/Sample/rr branch_block_stmt_84/switch_stmt_85__condition_check__/condition_2/SplitProtocol/Update/cr) (branch_block_stmt_84/switch_stmt_85__condition_check__/condition_2/SplitProtocol/Sample/ra branch_block_stmt_84/switch_stmt_85__condition_check__/condition_2/SplitProtocol/Update/ca)
  switch_stmt_85_branch_2 <=> (branch_block_stmt_84/switch_stmt_85__condition_check__/condition_2/cmp) ($open branch_block_stmt_84/switch_stmt_85_choice_2/ack1)
  // 			omul := (L * R)
  //  file prog.linked.opt.aa, line 71
  // (L * R)
  binary_107_inst <=> (branch_block_stmt_84/assign_stmt_108/binary_107_Sample/rr branch_block_stmt_84/assign_stmt_108/binary_107_Update/cr) (branch_block_stmt_84/assign_stmt_108/binary_107_Sample/ra branch_block_stmt_84/assign_stmt_108/binary_107_Update/ca)
  switch_stmt_85_branch_default <=> (branch_block_stmt_84/switch_stmt_85__condition_check__/$exit) (branch_block_stmt_84/switch_stmt_85_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 76
  phi_stmt_114 <=> (branch_block_stmt_84/a_PhiReq/phi_stmt_114/phi_stmt_114_req branch_block_stmt_84/s_PhiReq/phi_stmt_114/phi_stmt_114_req branch_block_stmt_84/m_PhiReq/phi_stmt_114/phi_stmt_114_req branch_block_stmt_84/nop_PhiReq/phi_stmt_114/phi_stmt_114_req) (branch_block_stmt_84/merge_stmt_113_PhiAck/phi_stmt_114_ack)
}
$module [fpu64] 
{
  $in L:$float<11,52>
  // can point into  foreign( $void )
  R:$float<11,52>
  // can point into  foreign( $void )
  OP_ID:$int<11>
  // can point into  foreign( $void )
  $out ret_val_x_x:$float<11,52>
  // can point into  foreign( $void )
  // pipe-declarations for block %fpu64
  //  file prog.linked.opt.aa, line 81
  // pipe-declarations for block %fpu64%Sw
  //  file prog.linked.opt.aa, line 86
  // pipe-declarations for block %fpu64%Sw%
  //  file prog.linked.opt.aa, line 101
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_129] // Branch Block  file prog.linked.opt.aa, line 86
    {
      $P [branch_block_stmt_129__entry__]
      branch_block_stmt_129__entry__ <-| ($entry)
      $P [branch_block_stmt_129__exit__]
      branch_block_stmt_129__exit__ |-> ($exit)
      $P [switch_stmt_130__entry__] 
      $P [switch_stmt_130__exit__] 
      $P [merge_stmt_158__entry__] 
      $P [merge_stmt_158__exit__] 
      // control-path for switch  
      //  file prog.linked.opt.aa, line 88
      ;;[switch_stmt_130_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_130__entry__ |-> (switch_stmt_130_dead_link)
      switch_stmt_130__exit__ <-| (switch_stmt_130_dead_link)
      //---------------------    switch statement  file prog.linked.opt.aa, line 88  --------------------------
      $P [switch_stmt_130__condition_check_place__] 
      switch_stmt_130__entry__ |-> (switch_stmt_130__condition_check_place__)
      ||[switch_stmt_130__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_2] 
        {
          || [SplitProtocol] 
          {
            ;; [Sample] 
            {
              $T[rr] $T[ra]
            }
            ;; [Update] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_130__condition_check_place__ |-> (switch_stmt_130__condition_check__)
      $P [switch_stmt_130__select__] 
      switch_stmt_130__select__ <-| (switch_stmt_130__condition_check__)
      // switch choice 0
      ;;[switch_stmt_130_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_137__entry__] 
      $P [assign_stmt_137__exit__] 
      $P [a]
      ::[assign_stmt_137] 
      {
        // 			oadd := (L + R)
        //  file prog.linked.opt.aa, line 90
        $T[assign_stmt_137_trigger_] 
        $T[assign_stmt_137_active_] 
        $T[assign_stmt_137_completed_] 
        assign_stmt_137_active_ <-& (assign_stmt_137_trigger_)
        // (L + R)
        $T[binary_136_trigger_] 
        $T[binary_136_active_] 
        $T[binary_136_completed_] 
        $T[binary_136_sample_start_] 
        $T[binary_136_sample_completed_] 
        $T[binary_136_update_start_] 
        $T[binary_136_update_completed_] 
        binary_136_sample_start_ <-& (binary_136_trigger_)
        binary_136_update_start_ <-& (binary_136_trigger_)
        binary_136_completed_ <-& (binary_136_update_completed_)
        binary_136_completed_ <-& (binary_136_sample_completed_)
        // L
        $T[simple_obj_ref_134_trigger_] 
        $T[simple_obj_ref_134_active_] 
        $T[simple_obj_ref_134_completed_] 
        // reference to interface object
        simple_obj_ref_134_completed_ <-& (simple_obj_ref_134_active_)
        simple_obj_ref_134_active_ <-& (simple_obj_ref_134_trigger_)
        // R
        $T[simple_obj_ref_135_trigger_] 
        $T[simple_obj_ref_135_active_] 
        $T[simple_obj_ref_135_completed_] 
        // reference to interface object
        simple_obj_ref_135_completed_ <-& (simple_obj_ref_135_active_)
        simple_obj_ref_135_active_ <-& (simple_obj_ref_135_trigger_)
        binary_136_trigger_ <-& (simple_obj_ref_134_completed_)
        binary_136_trigger_ <-& (simple_obj_ref_135_completed_)
        ;;[binary_136_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_136_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_136_sample_start_ &-> (binary_136_Sample)
        binary_136_sample_completed_ <-& (binary_136_Sample)
        binary_136_update_start_ &-> (binary_136_Update)
        binary_136_update_completed_ <-& (binary_136_Update)
        assign_stmt_137_trigger_ <-& (binary_136_completed_)
        // oadd
        // implicit reference
        assign_stmt_137_completed_ <-& (assign_stmt_137_active_)
        // load-store dependencies..
      }
      // assign_stmt_137
      assign_stmt_137__entry__ |-> (assign_stmt_137)
      assign_stmt_137__exit__ <-| (assign_stmt_137)
      assign_stmt_137__entry__ <-| (switch_stmt_130_choice_0)
      a <-| (assign_stmt_137__exit__)
      // switch choice 1
      ;;[switch_stmt_130_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_145__entry__] 
      $P [assign_stmt_145__exit__] 
      $P [s]
      ::[assign_stmt_145] 
      {
        // 			osub := (L - R)
        //  file prog.linked.opt.aa, line 93
        $T[assign_stmt_145_trigger_] 
        $T[assign_stmt_145_active_] 
        $T[assign_stmt_145_completed_] 
        assign_stmt_145_active_ <-& (assign_stmt_145_trigger_)
        // (L - R)
        $T[binary_144_trigger_] 
        $T[binary_144_active_] 
        $T[binary_144_completed_] 
        $T[binary_144_sample_start_] 
        $T[binary_144_sample_completed_] 
        $T[binary_144_update_start_] 
        $T[binary_144_update_completed_] 
        binary_144_sample_start_ <-& (binary_144_trigger_)
        binary_144_update_start_ <-& (binary_144_trigger_)
        binary_144_completed_ <-& (binary_144_update_completed_)
        binary_144_completed_ <-& (binary_144_sample_completed_)
        // L
        $T[simple_obj_ref_142_trigger_] 
        $T[simple_obj_ref_142_active_] 
        $T[simple_obj_ref_142_completed_] 
        // reference to interface object
        simple_obj_ref_142_completed_ <-& (simple_obj_ref_142_active_)
        simple_obj_ref_142_active_ <-& (simple_obj_ref_142_trigger_)
        // R
        $T[simple_obj_ref_143_trigger_] 
        $T[simple_obj_ref_143_active_] 
        $T[simple_obj_ref_143_completed_] 
        // reference to interface object
        simple_obj_ref_143_completed_ <-& (simple_obj_ref_143_active_)
        simple_obj_ref_143_active_ <-& (simple_obj_ref_143_trigger_)
        binary_144_trigger_ <-& (simple_obj_ref_142_completed_)
        binary_144_trigger_ <-& (simple_obj_ref_143_completed_)
        ;;[binary_144_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_144_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_144_sample_start_ &-> (binary_144_Sample)
        binary_144_sample_completed_ <-& (binary_144_Sample)
        binary_144_update_start_ &-> (binary_144_Update)
        binary_144_update_completed_ <-& (binary_144_Update)
        assign_stmt_145_trigger_ <-& (binary_144_completed_)
        // osub
        // implicit reference
        assign_stmt_145_completed_ <-& (assign_stmt_145_active_)
        // load-store dependencies..
      }
      // assign_stmt_145
      assign_stmt_145__entry__ |-> (assign_stmt_145)
      assign_stmt_145__exit__ <-| (assign_stmt_145)
      assign_stmt_145__entry__ <-| (switch_stmt_130_choice_1)
      s <-| (assign_stmt_145__exit__)
      // switch choice 2
      ;;[switch_stmt_130_choice_2] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [assign_stmt_153__entry__] 
      $P [assign_stmt_153__exit__] 
      $P [m]
      ::[assign_stmt_153] 
      {
        // 			omul := (L * R)
        //  file prog.linked.opt.aa, line 96
        $T[assign_stmt_153_trigger_] 
        $T[assign_stmt_153_active_] 
        $T[assign_stmt_153_completed_] 
        assign_stmt_153_active_ <-& (assign_stmt_153_trigger_)
        // (L * R)
        $T[binary_152_trigger_] 
        $T[binary_152_active_] 
        $T[binary_152_completed_] 
        $T[binary_152_sample_start_] 
        $T[binary_152_sample_completed_] 
        $T[binary_152_update_start_] 
        $T[binary_152_update_completed_] 
        binary_152_sample_start_ <-& (binary_152_trigger_)
        binary_152_update_start_ <-& (binary_152_trigger_)
        binary_152_completed_ <-& (binary_152_update_completed_)
        binary_152_completed_ <-& (binary_152_sample_completed_)
        // L
        $T[simple_obj_ref_150_trigger_] 
        $T[simple_obj_ref_150_active_] 
        $T[simple_obj_ref_150_completed_] 
        // reference to interface object
        simple_obj_ref_150_completed_ <-& (simple_obj_ref_150_active_)
        simple_obj_ref_150_active_ <-& (simple_obj_ref_150_trigger_)
        // R
        $T[simple_obj_ref_151_trigger_] 
        $T[simple_obj_ref_151_active_] 
        $T[simple_obj_ref_151_completed_] 
        // reference to interface object
        simple_obj_ref_151_completed_ <-& (simple_obj_ref_151_active_)
        simple_obj_ref_151_active_ <-& (simple_obj_ref_151_trigger_)
        binary_152_trigger_ <-& (simple_obj_ref_150_completed_)
        binary_152_trigger_ <-& (simple_obj_ref_151_completed_)
        ;;[binary_152_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_152_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_152_sample_start_ &-> (binary_152_Sample)
        binary_152_sample_completed_ <-& (binary_152_Sample)
        binary_152_update_start_ &-> (binary_152_Update)
        binary_152_update_completed_ <-& (binary_152_Update)
        assign_stmt_153_trigger_ <-& (binary_152_completed_)
        // omul
        // implicit reference
        assign_stmt_153_completed_ <-& (assign_stmt_153_active_)
        // load-store dependencies..
      }
      // assign_stmt_153
      assign_stmt_153__entry__ |-> (assign_stmt_153)
      assign_stmt_153__exit__ <-| (assign_stmt_153)
      assign_stmt_153__entry__ <-| (switch_stmt_130_choice_2)
      m <-| (assign_stmt_153__exit__)
      ;;[switch_stmt_130_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [nop]
      nop <-| (switch_stmt_130_choice_default)
      switch_stmt_130__select__ |-> (switch_stmt_130_choice_0 switch_stmt_130_choice_1 switch_stmt_130_choice_2 switch_stmt_130_choice_default)
      //---------------------   end of switch statement  file prog.linked.opt.aa, line 88  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 101
      ;;[merge_stmt_158_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_158__entry__ |-> (merge_stmt_158_dead_link)
      merge_stmt_158__exit__ <-| (merge_stmt_158_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 101  --------------------------
      ||[a_PhiReq] 
      {
        ;;[phi_stmt_159] 
        {
          ||[phi_stmt_159_sources] 
          {
            // sources for 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<11,52>
          }
          $T [phi_stmt_159_req] 
        }
      }
      a |-> (a_PhiReq)
      ||[m_PhiReq] 
      {
        ;;[phi_stmt_159] 
        {
          ||[phi_stmt_159_sources] 
          {
            // sources for 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<11,52>
          }
          $T [phi_stmt_159_req] 
        }
      }
      m |-> (m_PhiReq)
      ||[nop_PhiReq] 
      {
        ;;[phi_stmt_159] 
        {
          ||[phi_stmt_159_sources] 
          {
            // sources for 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<11,52>
          }
          $T [phi_stmt_159_req] 
        }
      }
      nop |-> (nop_PhiReq)
      ||[s_PhiReq] 
      {
        ;;[phi_stmt_159] 
        {
          ||[phi_stmt_159_sources] 
          {
            // sources for 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<11,52>
          }
          $T [phi_stmt_159_req] 
        }
      }
      s |-> (s_PhiReq)
      $P [merge_stmt_158_PhiReqMerge] 
      merge_stmt_158_PhiReqMerge <-| ( a_PhiReq  m_PhiReq  nop_PhiReq  s_PhiReq )
      ||[merge_stmt_158_PhiAck] 
      {
        $T [phi_stmt_159_ack] 
      }
      merge_stmt_158_PhiReqMerge |-> (merge_stmt_158_PhiAck)
      merge_stmt_158__exit__  <-| (merge_stmt_158_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 101  --------------------------
      switch_stmt_130__entry__ <-| (branch_block_stmt_129__entry__)
      merge_stmt_158__entry__ <-| (switch_stmt_130__exit__)
      merge_stmt_158__exit__ |-> (branch_block_stmt_129__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fpu64%Sw%
    //  file prog.linked.opt.aa, line 101
    // constant-object-declarations for block %fpu64%Sw
    //  file prog.linked.opt.aa, line 86
    // constant-object-declarations for block %fpu64
    //  file prog.linked.opt.aa, line 81
    // constant-declarations for block %fpu64%Sw
    //  file prog.linked.opt.aa, line 86
    // constant-declarations  for switch  
    //  file prog.linked.opt.aa, line 88
    // ADDOP
    $constant $W[simple_obj_ref_132_wire_constant] : $int<8> := _b00000000// 0
    // SUBOP
    $constant $W[simple_obj_ref_140_wire_constant] : $int<8> := _b00000001// 1
    // MULOP
    $constant $W[simple_obj_ref_148_wire_constant] : $int<8> := _b00000010// 2
    // constant-declarations for block %fpu64%Sw%
    //  file prog.linked.opt.aa, line 101
    // constant-declarations for phi:  			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<11,52>
    //  file prog.linked.opt.aa, line 102
    // _f0.0e+0
    $constant $W[expr_164_wire_constant] : $float<11,52> := _b0000000000000000000000000000000000000000000000000000000000000000// 0.000000e+00
    // block %fpu64%Sw
    //  file prog.linked.opt.aa, line 86
    // switch-statement  
    //  file prog.linked.opt.aa, line 88
    $W[simple_obj_ref_132_wire_constant_cmp] : $int<1>
    // 			oadd := (L + R)
    //  file prog.linked.opt.aa, line 90
    // oadd
    $W[oadd_137] : $float<11,52>
    $W[simple_obj_ref_140_wire_constant_cmp] : $int<1>
    // 			osub := (L - R)
    //  file prog.linked.opt.aa, line 93
    // osub
    $W[osub_145] : $float<11,52>
    $W[simple_obj_ref_148_wire_constant_cmp] : $int<1>
    // 			omul := (L * R)
    //  file prog.linked.opt.aa, line 96
    // omul
    $W[omul_153] : $float<11,52>
    // merge-statement  
    //  file prog.linked.opt.aa, line 101
    // 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<11,52>
    //  file prog.linked.opt.aa, line 102
    // ret_val_x_x
    // datapath-instances for block %fpu64%Sw
    //  file prog.linked.opt.aa, line 86
    // datapath-instances  for switch  
    //  file prog.linked.opt.aa, line 88
    ==[switch_stmt_130_select_expr_0] (OP_ID simple_obj_ref_132_wire_constant) (simple_obj_ref_132_wire_constant_cmp) 
    ==0? [switch_stmt_130_branch_0] (simple_obj_ref_132_wire_constant_cmp)
    // 			oadd := (L + R)
    //  file prog.linked.opt.aa, line 90
    // (L + R)
    +[binary_136_inst] (L R) (oadd_137) 
    ==[switch_stmt_130_select_expr_1] (OP_ID simple_obj_ref_140_wire_constant) (simple_obj_ref_140_wire_constant_cmp) 
    ==0? [switch_stmt_130_branch_1] (simple_obj_ref_140_wire_constant_cmp)
    // 			osub := (L - R)
    //  file prog.linked.opt.aa, line 93
    // (L - R)
    -[binary_144_inst] (L R) (osub_145) 
    ==[switch_stmt_130_select_expr_2] (OP_ID simple_obj_ref_148_wire_constant) (simple_obj_ref_148_wire_constant_cmp) 
    ==0? [switch_stmt_130_branch_2] (simple_obj_ref_148_wire_constant_cmp)
    // 			omul := (L * R)
    //  file prog.linked.opt.aa, line 96
    // (L * R)
    *[binary_152_inst] (L R) (omul_153) 
    ==0? [switch_stmt_130_branch_default] (simple_obj_ref_132_wire_constant_cmp simple_obj_ref_140_wire_constant_cmp simple_obj_ref_148_wire_constant_cmp)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 101
    // 			$phi ret_val_x_x := 			  oadd $on a			  osub $on s			  omul $on m			  _f0.0e+0 $on nop // type of target is $float<11,52>
    //  file prog.linked.opt.aa, line 102
    $phi [phi_stmt_159] (oadd_137 osub_145 omul_153 expr_164_wire_constant) ( ret_val_x_x )
  }
  // end data-path
  // CP-DP links for switch  
  //  file prog.linked.opt.aa, line 88
  switch_stmt_130_select_expr_0 <=> (branch_block_stmt_129/switch_stmt_130__condition_check__/condition_0/SplitProtocol/Sample/rr branch_block_stmt_129/switch_stmt_130__condition_check__/condition_0/SplitProtocol/Update/cr) (branch_block_stmt_129/switch_stmt_130__condition_check__/condition_0/SplitProtocol/Sample/ra branch_block_stmt_129/switch_stmt_130__condition_check__/condition_0/SplitProtocol/Update/ca)
  switch_stmt_130_branch_0 <=> (branch_block_stmt_129/switch_stmt_130__condition_check__/condition_0/cmp) ($open branch_block_stmt_129/switch_stmt_130_choice_0/ack1)
  // 			oadd := (L + R)
  //  file prog.linked.opt.aa, line 90
  // (L + R)
  binary_136_inst <=> (branch_block_stmt_129/assign_stmt_137/binary_136_Sample/rr branch_block_stmt_129/assign_stmt_137/binary_136_Update/cr) (branch_block_stmt_129/assign_stmt_137/binary_136_Sample/ra branch_block_stmt_129/assign_stmt_137/binary_136_Update/ca)
  switch_stmt_130_select_expr_1 <=> (branch_block_stmt_129/switch_stmt_130__condition_check__/condition_1/SplitProtocol/Sample/rr branch_block_stmt_129/switch_stmt_130__condition_check__/condition_1/SplitProtocol/Update/cr) (branch_block_stmt_129/switch_stmt_130__condition_check__/condition_1/SplitProtocol/Sample/ra branch_block_stmt_129/switch_stmt_130__condition_check__/condition_1/SplitProtocol/Update/ca)
  switch_stmt_130_branch_1 <=> (branch_block_stmt_129/switch_stmt_130__condition_check__/condition_1/cmp) ($open branch_block_stmt_129/switch_stmt_130_choice_1/ack1)
  // 			osub := (L - R)
  //  file prog.linked.opt.aa, line 93
  // (L - R)
  binary_144_inst <=> (branch_block_stmt_129/assign_stmt_145/binary_144_Sample/rr branch_block_stmt_129/assign_stmt_145/binary_144_Update/cr) (branch_block_stmt_129/assign_stmt_145/binary_144_Sample/ra branch_block_stmt_129/assign_stmt_145/binary_144_Update/ca)
  switch_stmt_130_select_expr_2 <=> (branch_block_stmt_129/switch_stmt_130__condition_check__/condition_2/SplitProtocol/Sample/rr branch_block_stmt_129/switch_stmt_130__condition_check__/condition_2/SplitProtocol/Update/cr) (branch_block_stmt_129/switch_stmt_130__condition_check__/condition_2/SplitProtocol/Sample/ra branch_block_stmt_129/switch_stmt_130__condition_check__/condition_2/SplitProtocol/Update/ca)
  switch_stmt_130_branch_2 <=> (branch_block_stmt_129/switch_stmt_130__condition_check__/condition_2/cmp) ($open branch_block_stmt_129/switch_stmt_130_choice_2/ack1)
  // 			omul := (L * R)
  //  file prog.linked.opt.aa, line 96
  // (L * R)
  binary_152_inst <=> (branch_block_stmt_129/assign_stmt_153/binary_152_Sample/rr branch_block_stmt_129/assign_stmt_153/binary_152_Update/cr) (branch_block_stmt_129/assign_stmt_153/binary_152_Sample/ra branch_block_stmt_129/assign_stmt_153/binary_152_Update/ca)
  switch_stmt_130_branch_default <=> (branch_block_stmt_129/switch_stmt_130__condition_check__/$exit) (branch_block_stmt_129/switch_stmt_130_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 101
  phi_stmt_159 <=> (branch_block_stmt_129/a_PhiReq/phi_stmt_159/phi_stmt_159_req branch_block_stmt_129/s_PhiReq/phi_stmt_159/phi_stmt_159_req branch_block_stmt_129/m_PhiReq/phi_stmt_159/phi_stmt_159_req branch_block_stmt_129/nop_PhiReq/phi_stmt_159/phi_stmt_159_req) (branch_block_stmt_129/merge_stmt_158_PhiAck/phi_stmt_159_ack)
}
$module [getData] 
{
  // pipe-declarations for block %getData
  //  file prog.linked.opt.aa, line 106
  // pipe-declarations for block %getData%body
  //  file prog.linked.opt.aa, line 111
  // pipe-declarations for block %getData%body%
  //  file prog.linked.opt.aa, line 114
  // pipe-declarations for block %getData%body%
  //  file prog.linked.opt.aa, line 129
  // pipe-declarations for block %getData%body%
  //  file prog.linked.opt.aa, line 132
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_169] // Branch Block  file prog.linked.opt.aa, line 111
    {
      $P [branch_block_stmt_169__entry__]
      branch_block_stmt_169__entry__ <-| ($entry)
      $P [branch_block_stmt_169__exit__]
      branch_block_stmt_169__exit__ |-> ($exit)
      $P [bbx_xnph_bb_1]
      $P [merge_stmt_171__exit__] 
      $P [assign_stmt_185_to_assign_stmt_190__entry__] 
      $P [assign_stmt_185_to_assign_stmt_190__exit__] 
      $P [assign_stmt_193__entry__] 
      $P [assign_stmt_193__exit__] 
      $P [assign_stmt_197_to_assign_stmt_214__entry__] 
      $P [assign_stmt_197_to_assign_stmt_214__exit__] 
      $P [if_stmt_215__entry__] 
      $P [if_stmt_215__exit__] 
      $P [merge_stmt_221__entry__] 
      $P [merge_stmt_221__exit__] 
      $P [return__]
      $P [merge_stmt_223__exit__] 
      ::[assign_stmt_185_to_assign_stmt_190] 
      {
        // 		scevgep2 := @(B[idxx_x01])
        //  file prog.linked.opt.aa, line 117
        $T[assign_stmt_185_trigger_] 
        $T[assign_stmt_185_active_] 
        $T[assign_stmt_185_completed_] 
        assign_stmt_185_active_ <-& (assign_stmt_185_trigger_)
        // @(B[idxx_x01])
        $T[addr_of_184_trigger_] 
        $T[addr_of_184_active_] 
        $T[addr_of_184_completed_] 
        $T[array_obj_ref_183_root_address_calculated] 
        $T[array_obj_ref_183_indices_scaled] 
        $T[array_obj_ref_183_offset_calculated] 
        $T[array_obj_ref_183_index_computed_0] 
        $T[array_obj_ref_183_index_resized_0] 
        // idxx_x01
        $T[simple_obj_ref_182_trigger_] 
        $T[simple_obj_ref_182_active_] 
        $T[simple_obj_ref_182_completed_] 
        // implicit reference
        simple_obj_ref_182_completed_ <-& (simple_obj_ref_182_active_)
        simple_obj_ref_182_active_ <-& (simple_obj_ref_182_trigger_)
        array_obj_ref_183_index_computed_0 <-& (simple_obj_ref_182_completed_)
        ;;[array_obj_ref_183_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_183_index_computed_0 &-> (array_obj_ref_183_index_resize_0)
        array_obj_ref_183_index_resized_0 <-& (array_obj_ref_183_index_resize_0)
        ;;[array_obj_ref_183_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_183_index_resized_0 &-> (array_obj_ref_183_index_scale_0)
        array_obj_ref_183_indices_scaled <-& (array_obj_ref_183_index_scale_0)
        ;;[array_obj_ref_183_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_183_indices_scaled &-> (array_obj_ref_183_add_indices)
        array_obj_ref_183_offset_calculated <-& (array_obj_ref_183_add_indices)
        ;;[array_obj_ref_183_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_183_offset_calculated &-> (array_obj_ref_183_base_plus_offset)
        array_obj_ref_183_root_address_calculated <-& (array_obj_ref_183_base_plus_offset)
        ;;[addr_of_184_complete] 
        {
          $T [final_reg_req] $T [final_reg_ack]
        }
        addr_of_184_active_ <-& (addr_of_184_trigger_)
        addr_of_184_active_ <-& (array_obj_ref_183_root_address_calculated)
        addr_of_184_active_ &-> (addr_of_184_complete)
        addr_of_184_completed_ <-& (addr_of_184_complete)
        assign_stmt_185_trigger_ <-& (addr_of_184_completed_)
        // scevgep2
        // implicit reference
        assign_stmt_185_completed_ <-& (assign_stmt_185_active_)
        // 		scevgep := @(A[idxx_x01])
        //  file prog.linked.opt.aa, line 118
        $T[assign_stmt_190_trigger_] 
        $T[assign_stmt_190_active_] 
        $T[assign_stmt_190_completed_] 
        assign_stmt_190_active_ <-& (assign_stmt_190_trigger_)
        // @(A[idxx_x01])
        $T[addr_of_189_trigger_] 
        $T[addr_of_189_active_] 
        $T[addr_of_189_completed_] 
        $T[array_obj_ref_188_root_address_calculated] 
        $T[array_obj_ref_188_indices_scaled] 
        $T[array_obj_ref_188_offset_calculated] 
        $T[array_obj_ref_188_index_computed_0] 
        $T[array_obj_ref_188_index_resized_0] 
        // idxx_x01
        $T[simple_obj_ref_187_trigger_] 
        $T[simple_obj_ref_187_active_] 
        $T[simple_obj_ref_187_completed_] 
        // implicit reference
        simple_obj_ref_187_completed_ <-& (simple_obj_ref_187_active_)
        simple_obj_ref_187_active_ <-& (simple_obj_ref_187_trigger_)
        array_obj_ref_188_index_computed_0 <-& (simple_obj_ref_187_completed_)
        ;;[array_obj_ref_188_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_188_index_computed_0 &-> (array_obj_ref_188_index_resize_0)
        array_obj_ref_188_index_resized_0 <-& (array_obj_ref_188_index_resize_0)
        ;;[array_obj_ref_188_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_188_index_resized_0 &-> (array_obj_ref_188_index_scale_0)
        array_obj_ref_188_indices_scaled <-& (array_obj_ref_188_index_scale_0)
        ;;[array_obj_ref_188_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_188_indices_scaled &-> (array_obj_ref_188_add_indices)
        array_obj_ref_188_offset_calculated <-& (array_obj_ref_188_add_indices)
        ;;[array_obj_ref_188_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_188_offset_calculated &-> (array_obj_ref_188_base_plus_offset)
        array_obj_ref_188_root_address_calculated <-& (array_obj_ref_188_base_plus_offset)
        ;;[addr_of_189_complete] 
        {
          $T [final_reg_req] $T [final_reg_ack]
        }
        addr_of_189_active_ <-& (addr_of_189_trigger_)
        addr_of_189_active_ <-& (array_obj_ref_188_root_address_calculated)
        addr_of_189_active_ &-> (addr_of_189_complete)
        addr_of_189_completed_ <-& (addr_of_189_complete)
        assign_stmt_190_trigger_ <-& (addr_of_189_completed_)
        // scevgep
        // implicit reference
        assign_stmt_190_completed_ <-& (assign_stmt_190_active_)
        // load-store dependencies..
      }
      // assign_stmt_185_to_assign_stmt_190
      assign_stmt_185_to_assign_stmt_190__entry__ |-> (assign_stmt_185_to_assign_stmt_190)
      assign_stmt_185_to_assign_stmt_190__exit__ <-| (assign_stmt_185_to_assign_stmt_190)
      ::[assign_stmt_193] 
      {
        // 		iNsTr_2 := in_data_pipe
        //  file prog.linked.opt.aa, line 119
        $T[assign_stmt_193_trigger_] 
        $T[assign_stmt_193_active_] 
        $T[assign_stmt_193_completed_] 
        assign_stmt_193_active_ <-& (assign_stmt_193_trigger_)
        // in_data_pipe
        $T[simple_obj_ref_192_trigger_] 
        $T[simple_obj_ref_192_active_] 
        $T[simple_obj_ref_192_completed_] 
        ;;[simple_obj_ref_192_complete] 
        {
          // pipe read
          $T [req] $T [ack] 
        }
        simple_obj_ref_192_active_ <-& (simple_obj_ref_192_trigger_)
        simple_obj_ref_192_active_ &-> (simple_obj_ref_192_complete)
        simple_obj_ref_192_completed_ <-& (simple_obj_ref_192_complete)
        assign_stmt_193_trigger_ <-& (simple_obj_ref_192_completed_)
        // iNsTr_2
        // implicit reference
        assign_stmt_193_completed_ <-& (assign_stmt_193_active_)
        // barrier: 		iNsTr_2 := in_data_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data_pipe
      }
      // assign_stmt_193
      assign_stmt_193__entry__ |-> (assign_stmt_193)
      assign_stmt_193__exit__ <-| (assign_stmt_193)
      ::[assign_stmt_197_to_assign_stmt_214] 
      {
        // 		->(scevgep) := iNsTr_2
        //  file prog.linked.opt.aa, line 120
        $T[assign_stmt_197_trigger_] 
        $T[assign_stmt_197_active_] 
        $T[assign_stmt_197_completed_] 
        assign_stmt_197_active_ <-& (assign_stmt_197_trigger_)
        // iNsTr_2
        $T[simple_obj_ref_196_trigger_] 
        $T[simple_obj_ref_196_active_] 
        $T[simple_obj_ref_196_completed_] 
        // implicit reference
        simple_obj_ref_196_completed_ <-& (simple_obj_ref_196_active_)
        simple_obj_ref_196_active_ <-& (simple_obj_ref_196_trigger_)
        assign_stmt_197_trigger_ <-& (simple_obj_ref_196_completed_)
        // ->(scevgep)
        $T[ptr_deref_195_trigger_] 
        $T[ptr_deref_195_active_] 
        $T[ptr_deref_195_completed_] 
        $T[ptr_deref_195_base_address_calculated] 
        // scevgep
        $T[simple_obj_ref_194_trigger_] 
        $T[simple_obj_ref_194_active_] 
        $T[simple_obj_ref_194_completed_] 
        // implicit reference
        simple_obj_ref_194_completed_ <-& (simple_obj_ref_194_active_)
        simple_obj_ref_194_active_ <-& (simple_obj_ref_194_trigger_)
        $T[ptr_deref_195_word_address_calculated] 
        $T[ptr_deref_195_root_address_calculated] 
        $T[ptr_deref_195_base_address_resized] 
        ;;[ptr_deref_195_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_195_base_address_calculated &-> (ptr_deref_195_base_addr_resize)
        ptr_deref_195_base_address_resized <-& (ptr_deref_195_base_addr_resize)
        ;;[ptr_deref_195_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_195_base_address_resized &-> (ptr_deref_195_base_plus_offset)
        ptr_deref_195_root_address_calculated <-& (ptr_deref_195_base_plus_offset)
        ;;[ptr_deref_195_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_195_root_address_calculated &-> (ptr_deref_195_word_addrgen)
        ptr_deref_195_word_address_calculated <-& (ptr_deref_195_word_addrgen)
        ;;[ptr_deref_195_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_195_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_195_trigger_ &-> (ptr_deref_195_request)
        ptr_deref_195_active_ <-& (ptr_deref_195_request)
        ptr_deref_195_active_ &-> (ptr_deref_195_complete)
        ptr_deref_195_completed_ <-& (ptr_deref_195_complete)
        ptr_deref_195_trigger_ <-& (ptr_deref_195_word_address_calculated)
        ptr_deref_195_base_address_calculated <-& (simple_obj_ref_194_completed_)
        ptr_deref_195_trigger_ <-& (ptr_deref_195_base_address_calculated)
        ptr_deref_195_trigger_ <-& (assign_stmt_197_active_)
        assign_stmt_197_completed_ <-& (ptr_deref_195_completed_)
        // 		->(scevgep2) := iNsTr_2
        //  file prog.linked.opt.aa, line 121
        $T[assign_stmt_201_trigger_] 
        $T[assign_stmt_201_active_] 
        $T[assign_stmt_201_completed_] 
        assign_stmt_201_active_ <-& (assign_stmt_201_trigger_)
        // iNsTr_2
        $T[simple_obj_ref_200_trigger_] 
        $T[simple_obj_ref_200_active_] 
        $T[simple_obj_ref_200_completed_] 
        // implicit reference
        simple_obj_ref_200_completed_ <-& (simple_obj_ref_200_active_)
        simple_obj_ref_200_active_ <-& (simple_obj_ref_200_trigger_)
        assign_stmt_201_trigger_ <-& (simple_obj_ref_200_completed_)
        // ->(scevgep2)
        $T[ptr_deref_199_trigger_] 
        $T[ptr_deref_199_active_] 
        $T[ptr_deref_199_completed_] 
        $T[ptr_deref_199_base_address_calculated] 
        // scevgep2
        $T[simple_obj_ref_198_trigger_] 
        $T[simple_obj_ref_198_active_] 
        $T[simple_obj_ref_198_completed_] 
        // implicit reference
        simple_obj_ref_198_completed_ <-& (simple_obj_ref_198_active_)
        simple_obj_ref_198_active_ <-& (simple_obj_ref_198_trigger_)
        $T[ptr_deref_199_word_address_calculated] 
        $T[ptr_deref_199_root_address_calculated] 
        $T[ptr_deref_199_base_address_resized] 
        ;;[ptr_deref_199_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_199_base_address_calculated &-> (ptr_deref_199_base_addr_resize)
        ptr_deref_199_base_address_resized <-& (ptr_deref_199_base_addr_resize)
        ;;[ptr_deref_199_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_199_base_address_resized &-> (ptr_deref_199_base_plus_offset)
        ptr_deref_199_root_address_calculated <-& (ptr_deref_199_base_plus_offset)
        ;;[ptr_deref_199_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_199_root_address_calculated &-> (ptr_deref_199_word_addrgen)
        ptr_deref_199_word_address_calculated <-& (ptr_deref_199_word_addrgen)
        ;;[ptr_deref_199_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_199_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_199_trigger_ &-> (ptr_deref_199_request)
        ptr_deref_199_active_ <-& (ptr_deref_199_request)
        ptr_deref_199_active_ &-> (ptr_deref_199_complete)
        ptr_deref_199_completed_ <-& (ptr_deref_199_complete)
        ptr_deref_199_trigger_ <-& (ptr_deref_199_word_address_calculated)
        ptr_deref_199_base_address_calculated <-& (simple_obj_ref_198_completed_)
        ptr_deref_199_trigger_ <-& (ptr_deref_199_base_address_calculated)
        ptr_deref_199_trigger_ <-& (assign_stmt_201_active_)
        assign_stmt_201_completed_ <-& (ptr_deref_199_completed_)
        // 		iNsTr_5 := (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 122
        $T[assign_stmt_207_trigger_] 
        $T[assign_stmt_207_active_] 
        $T[assign_stmt_207_completed_] 
        assign_stmt_207_active_ <-& (assign_stmt_207_trigger_)
        // (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[binary_206_trigger_] 
        $T[binary_206_active_] 
        $T[binary_206_completed_] 
        $T[binary_206_sample_start_] 
        $T[binary_206_sample_completed_] 
        $T[binary_206_update_start_] 
        $T[binary_206_update_completed_] 
        binary_206_sample_start_ <-& (binary_206_trigger_)
        binary_206_update_start_ <-& (binary_206_trigger_)
        binary_206_completed_ <-& (binary_206_update_completed_)
        binary_206_completed_ <-& (binary_206_sample_completed_)
        // idxx_x01
        $T[simple_obj_ref_203_trigger_] 
        $T[simple_obj_ref_203_active_] 
        $T[simple_obj_ref_203_completed_] 
        // implicit reference
        simple_obj_ref_203_completed_ <-& (simple_obj_ref_203_active_)
        simple_obj_ref_203_active_ <-& (simple_obj_ref_203_trigger_)
        binary_206_trigger_ <-& (simple_obj_ref_203_completed_)
        ;;[binary_206_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_206_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_206_sample_start_ &-> (binary_206_Sample)
        binary_206_sample_completed_ <-& (binary_206_Sample)
        binary_206_update_start_ &-> (binary_206_Update)
        binary_206_update_completed_ <-& (binary_206_Update)
        assign_stmt_207_trigger_ <-& (binary_206_completed_)
        // iNsTr_5
        // implicit reference
        assign_stmt_207_completed_ <-& (assign_stmt_207_active_)
        // 		exitcond1 := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
        //  file prog.linked.opt.aa, line 123
        $T[assign_stmt_214_trigger_] 
        $T[assign_stmt_214_active_] 
        $T[assign_stmt_214_completed_] 
        assign_stmt_214_active_ <-& (assign_stmt_214_trigger_)
        // (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
        $T[binary_212_trigger_] 
        $T[binary_212_active_] 
        $T[binary_212_completed_] 
        $T[binary_212_sample_start_] 
        $T[binary_212_sample_completed_] 
        $T[binary_212_update_start_] 
        $T[binary_212_update_completed_] 
        binary_212_sample_start_ <-& (binary_212_trigger_)
        binary_212_update_start_ <-& (binary_212_trigger_)
        binary_212_completed_ <-& (binary_212_update_completed_)
        binary_212_completed_ <-& (binary_212_sample_completed_)
        // iNsTr_5
        $T[simple_obj_ref_209_trigger_] 
        $T[simple_obj_ref_209_active_] 
        $T[simple_obj_ref_209_completed_] 
        // implicit reference
        simple_obj_ref_209_trigger_ <-& (assign_stmt_207_completed_)
        simple_obj_ref_209_completed_ <-& (simple_obj_ref_209_active_)
        simple_obj_ref_209_active_ <-& (simple_obj_ref_209_trigger_)
        binary_212_trigger_ <-& (simple_obj_ref_209_completed_)
        ;;[binary_212_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_212_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_212_sample_start_ &-> (binary_212_Sample)
        binary_212_sample_completed_ <-& (binary_212_Sample)
        binary_212_update_start_ &-> (binary_212_Update)
        binary_212_update_completed_ <-& (binary_212_Update)
        assign_stmt_214_trigger_ <-& (binary_212_completed_)
        // exitcond1
        // implicit reference
        assign_stmt_214_completed_ <-& (assign_stmt_214_active_)
        // load-store dependencies..
      }
      // assign_stmt_197_to_assign_stmt_214
      assign_stmt_197_to_assign_stmt_214__entry__ |-> (assign_stmt_197_to_assign_stmt_214)
      assign_stmt_197_to_assign_stmt_214__exit__ <-| (assign_stmt_197_to_assign_stmt_214)
      // if-statement  
      //  file prog.linked.opt.aa, line 124
      ;;[if_stmt_215_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_215__entry__ |-> (if_stmt_215_dead_link)
      if_stmt_215__exit__ <-| (if_stmt_215_dead_link)
      ;;[if_stmt_215_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_215__entry__ |-> (if_stmt_215_eval_test)
      $P [simple_obj_ref_216_place]
      simple_obj_ref_216_place <-| (if_stmt_215_eval_test)
      ;;[if_stmt_215_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_215_else_link] 
      {
        $T [else_choice_transition] 
      }
      simple_obj_ref_216_place |-> (if_stmt_215_if_link if_stmt_215_else_link)
      $P [bb_1_xx_x_crit_edge]
      bb_1_xx_x_crit_edge <-| (if_stmt_215_if_link)
      $P [bb_1_bb_1]
      bb_1_bb_1 <-| (if_stmt_215_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 114
      //---------------------   merge statement  file prog.linked.opt.aa, line 114  --------------------------
      ||[bb_1_bb_1_PhiReq] 
      {
        ;;[phi_stmt_172] 
        {
          ||[phi_stmt_172_sources] 
          {
            // sources for 			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_5 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_5 )
            ;;[type_cast_179] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_172_req] 
        }
      }
      bb_1_bb_1 |-> (bb_1_bb_1_PhiReq)
      ||[bbx_xnph_bb_1_PhiReq] 
      {
        ;;[phi_stmt_172] 
        {
          ||[phi_stmt_172_sources] 
          {
            // sources for 			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_5 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_5 )
            ;;[type_cast_179] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_172_req] 
        }
      }
      bbx_xnph_bb_1 |-> (bbx_xnph_bb_1_PhiReq)
      $P [merge_stmt_171_PhiReqMerge] 
      merge_stmt_171_PhiReqMerge <-| ( bb_1_bb_1_PhiReq  bbx_xnph_bb_1_PhiReq )
      ||[merge_stmt_171_PhiAck] 
      {
        $T [phi_stmt_172_ack] 
      }
      merge_stmt_171_PhiReqMerge |-> (merge_stmt_171_PhiAck)
      merge_stmt_171__exit__  <-| (merge_stmt_171_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 114  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 129
      ;;[merge_stmt_221_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_221__entry__ |-> (merge_stmt_221_dead_link)
      merge_stmt_221__exit__ <-| (merge_stmt_221_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 129  --------------------------
      ||[bb_1_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_xx_x_crit_edge |-> (bb_1_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_221_PhiReqMerge] 
      merge_stmt_221_PhiReqMerge <-| ( bb_1_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_221_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_221_PhiReqMerge |-> (merge_stmt_221_PhiAck)
      merge_stmt_221__exit__  <-| (merge_stmt_221_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 129  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 132
      //---------------------   merge statement  file prog.linked.opt.aa, line 132  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_223_PhiReqMerge] 
      merge_stmt_223_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_223_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_223_PhiReqMerge |-> (merge_stmt_223_PhiAck)
      merge_stmt_223__exit__  <-| (merge_stmt_223_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 132  --------------------------
      bbx_xnph_bb_1 <-| (branch_block_stmt_169__entry__)
      assign_stmt_185_to_assign_stmt_190__entry__ <-| (merge_stmt_171__exit__)
      assign_stmt_193__entry__ <-| (assign_stmt_185_to_assign_stmt_190__exit__)
      assign_stmt_197_to_assign_stmt_214__entry__ <-| (assign_stmt_193__exit__)
      if_stmt_215__entry__ <-| (assign_stmt_197_to_assign_stmt_214__exit__)
      merge_stmt_221__entry__ <-| (if_stmt_215__exit__)
      return__ <-| (merge_stmt_221__exit__)
      merge_stmt_223__exit__ |-> (branch_block_stmt_169__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %getData%body%
    //  file prog.linked.opt.aa, line 114
    // constant-object-declarations for block %getData%body%
    //  file prog.linked.opt.aa, line 129
    // constant-object-declarations for block %getData%body%
    //  file prog.linked.opt.aa, line 132
    // constant-object-declarations for block %getData%body
    //  file prog.linked.opt.aa, line 111
    // constant-object-declarations for block %getData
    //  file prog.linked.opt.aa, line 106
    // constant-declarations for block %getData%body
    //  file prog.linked.opt.aa, line 111
    // constant-declarations for block %getData%body%
    //  file prog.linked.opt.aa, line 114
    // constant-declarations for phi:  			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_5 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 115
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_177_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // @(B[idxx_x01])
    $constant $W[array_obj_ref_183_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_183_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // @(A[idxx_x01])
    $constant $W[array_obj_ref_188_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_188_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // ->(scevgep)
    $constant $W[ptr_deref_195_word_offset_0] : $int<7> := _b0000000// 0
    // ->(scevgep2)
    $constant $W[ptr_deref_199_word_offset_0] : $int<7> := _b0000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_205_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000001000000  )
    $constant $W[type_cast_211_wire_constant] : $int<32> := _b00000000000000000000000001000000// 64
    // if-statement  
    //  file prog.linked.opt.aa, line 124
    // constant-declarations for block %getData%body%
    //  file prog.linked.opt.aa, line 129
    // constant-declarations for block %getData%body%
    //  file prog.linked.opt.aa, line 132
    // block %getData%body
    //  file prog.linked.opt.aa, line 111
    // merge-statement  
    //  file prog.linked.opt.aa, line 114
    // 			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_5 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 115
    // ($cast ($uint<32>) iNsTr_5 )
    $intermediate $W[type_cast_179_wire] : $int<32>
    // idxx_x01
    $W[idxx_x01_172] : $int<32>
    // 		scevgep2 := @(B[idxx_x01])
    //  file prog.linked.opt.aa, line 117
    // @(B[idxx_x01])
    $intermediate $W[simple_obj_ref_182_resized] : $int<7>
    $intermediate $W[simple_obj_ref_182_scaled] : $int<7>
    $intermediate $W[array_obj_ref_183_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_183_root_address] : $int<7>
    // scevgep2
    $W[scevgep2_185] : $int<32>
    // 		scevgep := @(A[idxx_x01])
    //  file prog.linked.opt.aa, line 118
    // @(A[idxx_x01])
    $intermediate $W[simple_obj_ref_187_resized] : $int<7>
    $intermediate $W[simple_obj_ref_187_scaled] : $int<7>
    $intermediate $W[array_obj_ref_188_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_188_root_address] : $int<7>
    // scevgep
    $W[scevgep_190] : $int<32>
    // 		iNsTr_2 := in_data_pipe
    //  file prog.linked.opt.aa, line 119
    // iNsTr_2
    $W[iNsTr_2_193] : $float<8,23>
    // 		->(scevgep) := iNsTr_2
    //  file prog.linked.opt.aa, line 120
    // ->(scevgep)
    $intermediate $W[ptr_deref_195_wire] : $float<8,23>
    $intermediate $W[ptr_deref_195_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_195_root_address] : $int<7>
    $W[ptr_deref_195_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_195_data_0] : $int<32>
    // 		->(scevgep2) := iNsTr_2
    //  file prog.linked.opt.aa, line 121
    // ->(scevgep2)
    $intermediate $W[ptr_deref_199_wire] : $float<8,23>
    $intermediate $W[ptr_deref_199_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_199_root_address] : $int<7>
    $W[ptr_deref_199_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_199_data_0] : $int<32>
    // 		iNsTr_5 := (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 122
    // iNsTr_5
    $W[iNsTr_5_207] : $int<32>
    // 		exitcond1 := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 123
    // exitcond1
    $W[exitcond1_214] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 124
    // datapath-instances for block %getData%body
    //  file prog.linked.opt.aa, line 111
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 114
    // 			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_5 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 115
    // ($cast ($uint<32>) iNsTr_5 )
    := [type_cast_179_inst] (iNsTr_5_207) (type_cast_179_wire)  
    $phi [phi_stmt_172] (type_cast_177_wire_constant type_cast_179_wire) ( idxx_x01_172 )
    // 		scevgep2 := @(B[idxx_x01])
    //  file prog.linked.opt.aa, line 117
    &/ [array_obj_ref_183_index_0_resize] (idxx_x01_172) (simple_obj_ref_182_resized) 
    &/ [array_obj_ref_183_index_0_rename] (simple_obj_ref_182_resized) (simple_obj_ref_182_scaled) 
    &/ [array_obj_ref_183_offset_inst] (simple_obj_ref_182_scaled) (array_obj_ref_183_final_offset) 
    &/ [array_obj_ref_183_root_address_inst] (array_obj_ref_183_final_offset) (array_obj_ref_183_root_address) 
    := [addr_of_184_final_reg] (array_obj_ref_183_root_address) (scevgep2_185)  
    // 		scevgep := @(A[idxx_x01])
    //  file prog.linked.opt.aa, line 118
    &/ [array_obj_ref_188_index_0_resize] (idxx_x01_172) (simple_obj_ref_187_resized) 
    &/ [array_obj_ref_188_index_0_rename] (simple_obj_ref_187_resized) (simple_obj_ref_187_scaled) 
    &/ [array_obj_ref_188_offset_inst] (simple_obj_ref_187_scaled) (array_obj_ref_188_final_offset) 
    &/ [array_obj_ref_188_root_address_inst] (array_obj_ref_188_final_offset) (array_obj_ref_188_root_address) 
    := [addr_of_189_final_reg] (array_obj_ref_188_root_address) (scevgep_190)  
    // 		iNsTr_2 := in_data_pipe
    //  file prog.linked.opt.aa, line 119
    // in_data_pipe
    $ioport $in [simple_obj_ref_192_inst] (in_data_pipe) (iNsTr_2_193) 
    // 		->(scevgep) := iNsTr_2
    //  file prog.linked.opt.aa, line 120
    // ->(scevgep)
    &/ [ptr_deref_195_base_resize] (scevgep_190) (ptr_deref_195_resized_base_address) 
    &/ [ptr_deref_195_root_address_inst] (ptr_deref_195_resized_base_address) (ptr_deref_195_root_address) 
    &/ [ptr_deref_195_addr_0] (ptr_deref_195_root_address) (ptr_deref_195_word_address_0) 
    $store [ptr_deref_195_store_0] $to memory_space_0 (ptr_deref_195_word_address_0 ptr_deref_195_data_0) 
    &/ [ptr_deref_195_gather_scatter] (iNsTr_2_193) (ptr_deref_195_data_0) 
    // 		->(scevgep2) := iNsTr_2
    //  file prog.linked.opt.aa, line 121
    // ->(scevgep2)
    &/ [ptr_deref_199_base_resize] (scevgep2_185) (ptr_deref_199_resized_base_address) 
    &/ [ptr_deref_199_root_address_inst] (ptr_deref_199_resized_base_address) (ptr_deref_199_root_address) 
    &/ [ptr_deref_199_addr_0] (ptr_deref_199_root_address) (ptr_deref_199_word_address_0) 
    $store [ptr_deref_199_store_0] $to memory_space_1 (ptr_deref_199_word_address_0 ptr_deref_199_data_0) 
    &/ [ptr_deref_199_gather_scatter] (iNsTr_2_193) (ptr_deref_199_data_0) 
    // 		iNsTr_5 := (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 122
    // (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[binary_206_inst] (idxx_x01_172 type_cast_205_wire_constant) (iNsTr_5_207) 
    // 		exitcond1 := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 123
    // (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    ==[binary_212_inst] (iNsTr_5_207 type_cast_211_wire_constant) (exitcond1_214) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 124
    ==0? [if_stmt_215_branch] (exitcond1_214)
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 114
  // ($cast ($uint<32>) iNsTr_5 )
  type_cast_179_inst <=> (branch_block_stmt_169/bb_1_bb_1_PhiReq/phi_stmt_172/phi_stmt_172_sources/type_cast_179/req) (branch_block_stmt_169/bb_1_bb_1_PhiReq/phi_stmt_172/phi_stmt_172_sources/type_cast_179/ack)
  phi_stmt_172 <=> (branch_block_stmt_169/bbx_xnph_bb_1_PhiReq/phi_stmt_172/phi_stmt_172_req branch_block_stmt_169/bb_1_bb_1_PhiReq/phi_stmt_172/phi_stmt_172_req) (branch_block_stmt_169/merge_stmt_171_PhiAck/phi_stmt_172_ack)
  // 		scevgep2 := @(B[idxx_x01])
  //  file prog.linked.opt.aa, line 117
  array_obj_ref_183_index_0_resize <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_183_index_resize_0/index_resize_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_183_index_resize_0/index_resize_ack)
  array_obj_ref_183_index_0_rename <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_183_index_scale_0/scale_rename_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_183_index_scale_0/scale_rename_ack)
  array_obj_ref_183_offset_inst <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_183_add_indices/final_index_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_183_add_indices/final_index_ack)
  array_obj_ref_183_root_address_inst <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_183_base_plus_offset/sum_rename_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_183_base_plus_offset/sum_rename_ack)
  addr_of_184_final_reg <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/addr_of_184_complete/final_reg_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/addr_of_184_complete/final_reg_ack)
  // 		scevgep := @(A[idxx_x01])
  //  file prog.linked.opt.aa, line 118
  array_obj_ref_188_index_0_resize <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_188_index_resize_0/index_resize_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_188_index_resize_0/index_resize_ack)
  array_obj_ref_188_index_0_rename <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_188_index_scale_0/scale_rename_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_188_index_scale_0/scale_rename_ack)
  array_obj_ref_188_offset_inst <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_188_add_indices/final_index_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_188_add_indices/final_index_ack)
  array_obj_ref_188_root_address_inst <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_188_base_plus_offset/sum_rename_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/array_obj_ref_188_base_plus_offset/sum_rename_ack)
  addr_of_189_final_reg <=> (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/addr_of_189_complete/final_reg_req) (branch_block_stmt_169/assign_stmt_185_to_assign_stmt_190/addr_of_189_complete/final_reg_ack)
  // 		iNsTr_2 := in_data_pipe
  //  file prog.linked.opt.aa, line 119
  // in_data_pipe
  simple_obj_ref_192_inst <=> (branch_block_stmt_169/assign_stmt_193/simple_obj_ref_192_complete/req) (branch_block_stmt_169/assign_stmt_193/simple_obj_ref_192_complete/ack)
  // 		->(scevgep) := iNsTr_2
  //  file prog.linked.opt.aa, line 120
  ptr_deref_195_base_resize <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_base_addr_resize/base_resize_req) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_base_addr_resize/base_resize_ack)
  ptr_deref_195_root_address_inst <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_base_plus_offset/sum_rename_req) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_base_plus_offset/sum_rename_ack)
  ptr_deref_195_addr_0 <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_word_addrgen/root_register_req) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_word_addrgen/root_register_ack)
  ptr_deref_195_gather_scatter <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_request/split_req) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_request/split_ack)
  ptr_deref_195_store_0 <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_request/word_access/word_access_0/rr branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_complete/word_access/word_access_0/cr) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_request/word_access/word_access_0/ra branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_195_complete/word_access/word_access_0/ca)
  // 		->(scevgep2) := iNsTr_2
  //  file prog.linked.opt.aa, line 121
  ptr_deref_199_base_resize <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_base_addr_resize/base_resize_req) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_base_addr_resize/base_resize_ack)
  ptr_deref_199_root_address_inst <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_base_plus_offset/sum_rename_req) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_base_plus_offset/sum_rename_ack)
  ptr_deref_199_addr_0 <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_word_addrgen/root_register_req) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_word_addrgen/root_register_ack)
  ptr_deref_199_gather_scatter <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_request/split_req) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_request/split_ack)
  ptr_deref_199_store_0 <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_request/word_access/word_access_0/rr branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_complete/word_access/word_access_0/cr) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_request/word_access/word_access_0/ra branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/ptr_deref_199_complete/word_access/word_access_0/ca)
  // 		iNsTr_5 := (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 122
  // (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  binary_206_inst <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/binary_206_Sample/rr branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/binary_206_Update/cr) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/binary_206_Sample/ra branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/binary_206_Update/ca)
  // 		exitcond1 := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  //  file prog.linked.opt.aa, line 123
  // (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  binary_212_inst <=> (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/binary_212_Sample/rr branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/binary_212_Update/cr) (branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/binary_212_Sample/ra branch_block_stmt_169/assign_stmt_197_to_assign_stmt_214/binary_212_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 124
  if_stmt_215_branch <=> (branch_block_stmt_169/if_stmt_215_eval_test/branch_req) (branch_block_stmt_169/if_stmt_215_else_link/else_choice_transition branch_block_stmt_169/if_stmt_215_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 129
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 132
}
$module [progx_xoptx_xo_storage_initializer_] 
{
  // pipe-declarations for block %progx_xoptx_xo_storage_initializer_
  //  file prog.linked.opt.aa, line 146
  $CP 
  {
    // begin control-path 
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %progx_xoptx_xo_storage_initializer_
    //  file prog.linked.opt.aa, line 146
  }
  // end data-path
}
$module [global_storage_initializer_] 
{
  // pipe-declarations for block %global_storage_initializer_
  //  file prog.linked.opt.aa, line 136
  // pipe-declarations for block %global_storage_initializer_%pb
  //  file prog.linked.opt.aa, line 141
  $CP 
  {
    // begin control-path 
    ||[parallel_block_stmt_227] 
    {
      ::[call_stmt_228] 
      {
        // 		$call progx_xoptx_xo_storage_initializer_ () ()
        //  file prog.linked.opt.aa, line 143
        $T[call_stmt_228_trigger_] 
        $T[call_stmt_228_active_] 
        $T[call_stmt_228_call_complete] 
        $T[call_stmt_228_completed_] 
        ;;[call_stmt_228_start] 
        {
          $T [crr] $T [cra] 
        }
        call_stmt_228_trigger_ &-> (call_stmt_228_start)
        call_stmt_228_active_ <-& (call_stmt_228_start)
        ;;[call_stmt_228_complete] 
        {
          $T [ccr] $T [cca] 
        }
        call_stmt_228_active_ &-> (call_stmt_228_complete)
        call_stmt_228_call_complete <-& (call_stmt_228_complete)
        call_stmt_228_completed_ <-& (call_stmt_228_call_complete)
        // load-store dependencies..
      }
      // call_stmt_228
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 141
    // constant-object-declarations for block %global_storage_initializer_
    //  file prog.linked.opt.aa, line 136
    // constant-declarations for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 141
    // 		$call progx_xoptx_xo_storage_initializer_ () ()
    //  file prog.linked.opt.aa, line 143
    // block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 141
    // 		$call progx_xoptx_xo_storage_initializer_ () ()
    //  file prog.linked.opt.aa, line 143
    // datapath-instances for block %global_storage_initializer_%pb
    //  file prog.linked.opt.aa, line 141
    // 		$call progx_xoptx_xo_storage_initializer_ () ()
    //  file prog.linked.opt.aa, line 143
    $call [call_stmt_228_call] $module progx_xoptx_xo_storage_initializer_() () 
  }
  // end data-path
  // 		$call progx_xoptx_xo_storage_initializer_ () ()
  //  file prog.linked.opt.aa, line 143
  call_stmt_228_call <=> (parallel_block_stmt_227/call_stmt_228/call_stmt_228_start/crr parallel_block_stmt_227/call_stmt_228/call_stmt_228_complete/ccr) (parallel_block_stmt_227/call_stmt_228/call_stmt_228_start/cra parallel_block_stmt_227/call_stmt_228/call_stmt_228_complete/cca)
}
$module [sendResult] 
{
  // pipe-declarations for block %sendResult
  //  file prog.linked.opt.aa, line 154
  // pipe-declarations for block %sendResult%body
  //  file prog.linked.opt.aa, line 159
  // pipe-declarations for block %sendResult%body%
  //  file prog.linked.opt.aa, line 162
  // pipe-declarations for block %sendResult%body%
  //  file prog.linked.opt.aa, line 175
  // pipe-declarations for block %sendResult%body%
  //  file prog.linked.opt.aa, line 178
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_235] // Branch Block  file prog.linked.opt.aa, line 159
    {
      $P [branch_block_stmt_235__entry__]
      branch_block_stmt_235__entry__ <-| ($entry)
      $P [branch_block_stmt_235__exit__]
      branch_block_stmt_235__exit__ |-> ($exit)
      $P [bbx_xnph_bb_1]
      $P [merge_stmt_237__exit__] 
      $P [assign_stmt_250_to_assign_stmt_254__entry__] 
      $P [assign_stmt_250_to_assign_stmt_254__exit__] 
      $P [assign_stmt_257__entry__] 
      $P [assign_stmt_257__exit__] 
      $P [assign_stmt_263_to_assign_stmt_269__entry__] 
      $P [assign_stmt_263_to_assign_stmt_269__exit__] 
      $P [if_stmt_270__entry__] 
      $P [if_stmt_270__exit__] 
      $P [merge_stmt_276__entry__] 
      $P [merge_stmt_276__exit__] 
      $P [return__]
      $P [merge_stmt_278__exit__] 
      ::[assign_stmt_250_to_assign_stmt_254] 
      {
        // 		scevgep := @(C[idxx_x01])
        //  file prog.linked.opt.aa, line 165
        $T[assign_stmt_250_trigger_] 
        $T[assign_stmt_250_active_] 
        $T[assign_stmt_250_completed_] 
        assign_stmt_250_active_ <-& (assign_stmt_250_trigger_)
        // @(C[idxx_x01])
        $T[addr_of_249_trigger_] 
        $T[addr_of_249_active_] 
        $T[addr_of_249_completed_] 
        $T[array_obj_ref_248_root_address_calculated] 
        $T[array_obj_ref_248_indices_scaled] 
        $T[array_obj_ref_248_offset_calculated] 
        $T[array_obj_ref_248_index_computed_0] 
        $T[array_obj_ref_248_index_resized_0] 
        // idxx_x01
        $T[simple_obj_ref_247_trigger_] 
        $T[simple_obj_ref_247_active_] 
        $T[simple_obj_ref_247_completed_] 
        // implicit reference
        simple_obj_ref_247_completed_ <-& (simple_obj_ref_247_active_)
        simple_obj_ref_247_active_ <-& (simple_obj_ref_247_trigger_)
        array_obj_ref_248_index_computed_0 <-& (simple_obj_ref_247_completed_)
        ;;[array_obj_ref_248_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_248_index_computed_0 &-> (array_obj_ref_248_index_resize_0)
        array_obj_ref_248_index_resized_0 <-& (array_obj_ref_248_index_resize_0)
        ;;[array_obj_ref_248_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_248_index_resized_0 &-> (array_obj_ref_248_index_scale_0)
        array_obj_ref_248_indices_scaled <-& (array_obj_ref_248_index_scale_0)
        ;;[array_obj_ref_248_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_248_indices_scaled &-> (array_obj_ref_248_add_indices)
        array_obj_ref_248_offset_calculated <-& (array_obj_ref_248_add_indices)
        ;;[array_obj_ref_248_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_248_offset_calculated &-> (array_obj_ref_248_base_plus_offset)
        array_obj_ref_248_root_address_calculated <-& (array_obj_ref_248_base_plus_offset)
        ;;[addr_of_249_complete] 
        {
          $T [final_reg_req] $T [final_reg_ack]
        }
        addr_of_249_active_ <-& (addr_of_249_trigger_)
        addr_of_249_active_ <-& (array_obj_ref_248_root_address_calculated)
        addr_of_249_active_ &-> (addr_of_249_complete)
        addr_of_249_completed_ <-& (addr_of_249_complete)
        assign_stmt_250_trigger_ <-& (addr_of_249_completed_)
        // scevgep
        // implicit reference
        assign_stmt_250_completed_ <-& (assign_stmt_250_active_)
        // 		iNsTr_1 := ->(scevgep)
        //  file prog.linked.opt.aa, line 166
        $T[assign_stmt_254_trigger_] 
        $T[assign_stmt_254_active_] 
        $T[assign_stmt_254_completed_] 
        assign_stmt_254_active_ <-& (assign_stmt_254_trigger_)
        // ->(scevgep)
        $T[ptr_deref_253_trigger_] 
        $T[ptr_deref_253_active_] 
        $T[ptr_deref_253_completed_] 
        $T[ptr_deref_253_base_address_calculated] 
        // scevgep
        $T[simple_obj_ref_252_trigger_] 
        $T[simple_obj_ref_252_active_] 
        $T[simple_obj_ref_252_completed_] 
        // implicit reference
        simple_obj_ref_252_trigger_ <-& (assign_stmt_250_completed_)
        simple_obj_ref_252_completed_ <-& (simple_obj_ref_252_active_)
        simple_obj_ref_252_active_ <-& (simple_obj_ref_252_trigger_)
        $T[ptr_deref_253_word_address_calculated] 
        $T[ptr_deref_253_root_address_calculated] 
        $T[ptr_deref_253_base_address_resized] 
        ;;[ptr_deref_253_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_253_base_address_calculated &-> (ptr_deref_253_base_addr_resize)
        ptr_deref_253_base_address_resized <-& (ptr_deref_253_base_addr_resize)
        ;;[ptr_deref_253_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_253_base_address_resized &-> (ptr_deref_253_base_plus_offset)
        ptr_deref_253_root_address_calculated <-& (ptr_deref_253_base_plus_offset)
        ;;[ptr_deref_253_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_253_root_address_calculated &-> (ptr_deref_253_word_addrgen)
        ptr_deref_253_word_address_calculated <-& (ptr_deref_253_word_addrgen)
        ;;[ptr_deref_253_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_253_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        ptr_deref_253_trigger_ &-> (ptr_deref_253_request)
        ptr_deref_253_active_ <-& (ptr_deref_253_request)
        ptr_deref_253_active_ &-> (ptr_deref_253_complete)
        ptr_deref_253_completed_ <-& (ptr_deref_253_complete)
        ptr_deref_253_trigger_ <-& (ptr_deref_253_word_address_calculated)
        ptr_deref_253_base_address_calculated <-& (simple_obj_ref_252_completed_)
        ptr_deref_253_trigger_ <-& (ptr_deref_253_base_address_calculated)
        assign_stmt_254_trigger_ <-& (ptr_deref_253_completed_)
        // iNsTr_1
        // implicit reference
        assign_stmt_254_completed_ <-& (assign_stmt_254_active_)
        // load-store dependencies..
      }
      // assign_stmt_250_to_assign_stmt_254
      assign_stmt_250_to_assign_stmt_254__entry__ |-> (assign_stmt_250_to_assign_stmt_254)
      assign_stmt_250_to_assign_stmt_254__exit__ <-| (assign_stmt_250_to_assign_stmt_254)
      ::[assign_stmt_257] 
      {
        // 		out_data_pipe := iNsTr_1
        //  file prog.linked.opt.aa, line 167
        $T[assign_stmt_257_trigger_] 
        $T[assign_stmt_257_active_] 
        $T[assign_stmt_257_completed_] 
        assign_stmt_257_active_ <-& (assign_stmt_257_trigger_)
        // iNsTr_1
        $T[simple_obj_ref_256_trigger_] 
        $T[simple_obj_ref_256_active_] 
        $T[simple_obj_ref_256_completed_] 
        // implicit reference
        simple_obj_ref_256_completed_ <-& (simple_obj_ref_256_active_)
        simple_obj_ref_256_active_ <-& (simple_obj_ref_256_trigger_)
        assign_stmt_257_trigger_ <-& (simple_obj_ref_256_completed_)
        // out_data_pipe
        $T[simple_obj_ref_255_trigger_] 
        $T[simple_obj_ref_255_active_] 
        $T[simple_obj_ref_255_completed_] 
        ;;[simple_obj_ref_255_complete] 
        {
          // pipe write out_data_pipe
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_255_trigger_ &-> (simple_obj_ref_255_complete)
        simple_obj_ref_255_active_ <-& (simple_obj_ref_255_complete)
        simple_obj_ref_255_completed_ <-& (simple_obj_ref_255_active_)
        simple_obj_ref_255_trigger_ <-& (assign_stmt_257_active_)
        assign_stmt_257_completed_ <-& (simple_obj_ref_255_completed_)
        // barrier: 		out_data_pipe := iNsTr_1
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data_pipe
      }
      // assign_stmt_257
      assign_stmt_257__entry__ |-> (assign_stmt_257)
      assign_stmt_257__exit__ <-| (assign_stmt_257)
      ::[assign_stmt_263_to_assign_stmt_269] 
      {
        // 		iNsTr_4 := (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 168
        $T[assign_stmt_263_trigger_] 
        $T[assign_stmt_263_active_] 
        $T[assign_stmt_263_completed_] 
        assign_stmt_263_active_ <-& (assign_stmt_263_trigger_)
        // (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[binary_262_trigger_] 
        $T[binary_262_active_] 
        $T[binary_262_completed_] 
        $T[binary_262_sample_start_] 
        $T[binary_262_sample_completed_] 
        $T[binary_262_update_start_] 
        $T[binary_262_update_completed_] 
        binary_262_sample_start_ <-& (binary_262_trigger_)
        binary_262_update_start_ <-& (binary_262_trigger_)
        binary_262_completed_ <-& (binary_262_update_completed_)
        binary_262_completed_ <-& (binary_262_sample_completed_)
        // idxx_x01
        $T[simple_obj_ref_259_trigger_] 
        $T[simple_obj_ref_259_active_] 
        $T[simple_obj_ref_259_completed_] 
        // implicit reference
        simple_obj_ref_259_completed_ <-& (simple_obj_ref_259_active_)
        simple_obj_ref_259_active_ <-& (simple_obj_ref_259_trigger_)
        binary_262_trigger_ <-& (simple_obj_ref_259_completed_)
        ;;[binary_262_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_262_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_262_sample_start_ &-> (binary_262_Sample)
        binary_262_sample_completed_ <-& (binary_262_Sample)
        binary_262_update_start_ &-> (binary_262_Update)
        binary_262_update_completed_ <-& (binary_262_Update)
        assign_stmt_263_trigger_ <-& (binary_262_completed_)
        // iNsTr_4
        // implicit reference
        assign_stmt_263_completed_ <-& (assign_stmt_263_active_)
        // 		exitcond1 := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
        //  file prog.linked.opt.aa, line 169
        $T[assign_stmt_269_trigger_] 
        $T[assign_stmt_269_active_] 
        $T[assign_stmt_269_completed_] 
        assign_stmt_269_active_ <-& (assign_stmt_269_trigger_)
        // (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
        $T[binary_268_trigger_] 
        $T[binary_268_active_] 
        $T[binary_268_completed_] 
        $T[binary_268_sample_start_] 
        $T[binary_268_sample_completed_] 
        $T[binary_268_update_start_] 
        $T[binary_268_update_completed_] 
        binary_268_sample_start_ <-& (binary_268_trigger_)
        binary_268_update_start_ <-& (binary_268_trigger_)
        binary_268_completed_ <-& (binary_268_update_completed_)
        binary_268_completed_ <-& (binary_268_sample_completed_)
        // iNsTr_4
        $T[simple_obj_ref_265_trigger_] 
        $T[simple_obj_ref_265_active_] 
        $T[simple_obj_ref_265_completed_] 
        // implicit reference
        simple_obj_ref_265_trigger_ <-& (assign_stmt_263_completed_)
        simple_obj_ref_265_completed_ <-& (simple_obj_ref_265_active_)
        simple_obj_ref_265_active_ <-& (simple_obj_ref_265_trigger_)
        binary_268_trigger_ <-& (simple_obj_ref_265_completed_)
        ;;[binary_268_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_268_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_268_sample_start_ &-> (binary_268_Sample)
        binary_268_sample_completed_ <-& (binary_268_Sample)
        binary_268_update_start_ &-> (binary_268_Update)
        binary_268_update_completed_ <-& (binary_268_Update)
        assign_stmt_269_trigger_ <-& (binary_268_completed_)
        // exitcond1
        // implicit reference
        assign_stmt_269_completed_ <-& (assign_stmt_269_active_)
        // load-store dependencies..
      }
      // assign_stmt_263_to_assign_stmt_269
      assign_stmt_263_to_assign_stmt_269__entry__ |-> (assign_stmt_263_to_assign_stmt_269)
      assign_stmt_263_to_assign_stmt_269__exit__ <-| (assign_stmt_263_to_assign_stmt_269)
      // if-statement  
      //  file prog.linked.opt.aa, line 170
      ;;[if_stmt_270_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_270__entry__ |-> (if_stmt_270_dead_link)
      if_stmt_270__exit__ <-| (if_stmt_270_dead_link)
      ;;[if_stmt_270_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_270__entry__ |-> (if_stmt_270_eval_test)
      $P [simple_obj_ref_271_place]
      simple_obj_ref_271_place <-| (if_stmt_270_eval_test)
      ;;[if_stmt_270_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_270_else_link] 
      {
        $T [else_choice_transition] 
      }
      simple_obj_ref_271_place |-> (if_stmt_270_if_link if_stmt_270_else_link)
      $P [bb_1_xx_x_crit_edge]
      bb_1_xx_x_crit_edge <-| (if_stmt_270_if_link)
      $P [bb_1_bb_1]
      bb_1_bb_1 <-| (if_stmt_270_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 162
      //---------------------   merge statement  file prog.linked.opt.aa, line 162  --------------------------
      ||[bb_1_bb_1_PhiReq] 
      {
        ;;[phi_stmt_238] 
        {
          ||[phi_stmt_238_sources] 
          {
            // sources for 			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_4 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_4 )
            ;;[type_cast_244] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_238_req] 
        }
      }
      bb_1_bb_1 |-> (bb_1_bb_1_PhiReq)
      ||[bbx_xnph_bb_1_PhiReq] 
      {
        ;;[phi_stmt_238] 
        {
          ||[phi_stmt_238_sources] 
          {
            // sources for 			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_4 ) $on bb_1_bb_1 // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_4 )
            ;;[type_cast_244] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_238_req] 
        }
      }
      bbx_xnph_bb_1 |-> (bbx_xnph_bb_1_PhiReq)
      $P [merge_stmt_237_PhiReqMerge] 
      merge_stmt_237_PhiReqMerge <-| ( bb_1_bb_1_PhiReq  bbx_xnph_bb_1_PhiReq )
      ||[merge_stmt_237_PhiAck] 
      {
        $T [phi_stmt_238_ack] 
      }
      merge_stmt_237_PhiReqMerge |-> (merge_stmt_237_PhiAck)
      merge_stmt_237__exit__  <-| (merge_stmt_237_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 162  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 175
      ;;[merge_stmt_276_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_276__entry__ |-> (merge_stmt_276_dead_link)
      merge_stmt_276__exit__ <-| (merge_stmt_276_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 175  --------------------------
      ||[bb_1_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_xx_x_crit_edge |-> (bb_1_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_276_PhiReqMerge] 
      merge_stmt_276_PhiReqMerge <-| ( bb_1_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_276_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_276_PhiReqMerge |-> (merge_stmt_276_PhiAck)
      merge_stmt_276__exit__  <-| (merge_stmt_276_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 175  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 178
      //---------------------   merge statement  file prog.linked.opt.aa, line 178  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_278_PhiReqMerge] 
      merge_stmt_278_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_278_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_278_PhiReqMerge |-> (merge_stmt_278_PhiAck)
      merge_stmt_278__exit__  <-| (merge_stmt_278_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 178  --------------------------
      bbx_xnph_bb_1 <-| (branch_block_stmt_235__entry__)
      assign_stmt_250_to_assign_stmt_254__entry__ <-| (merge_stmt_237__exit__)
      assign_stmt_257__entry__ <-| (assign_stmt_250_to_assign_stmt_254__exit__)
      assign_stmt_263_to_assign_stmt_269__entry__ <-| (assign_stmt_257__exit__)
      if_stmt_270__entry__ <-| (assign_stmt_263_to_assign_stmt_269__exit__)
      merge_stmt_276__entry__ <-| (if_stmt_270__exit__)
      return__ <-| (merge_stmt_276__exit__)
      merge_stmt_278__exit__ |-> (branch_block_stmt_235__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %sendResult%body%
    //  file prog.linked.opt.aa, line 162
    // constant-object-declarations for block %sendResult%body%
    //  file prog.linked.opt.aa, line 175
    // constant-object-declarations for block %sendResult%body%
    //  file prog.linked.opt.aa, line 178
    // constant-object-declarations for block %sendResult%body
    //  file prog.linked.opt.aa, line 159
    // constant-object-declarations for block %sendResult
    //  file prog.linked.opt.aa, line 154
    // constant-declarations for block %sendResult%body
    //  file prog.linked.opt.aa, line 159
    // constant-declarations for block %sendResult%body%
    //  file prog.linked.opt.aa, line 162
    // constant-declarations for phi:  			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_4 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 163
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_242_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // @(C[idxx_x01])
    $constant $W[array_obj_ref_248_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_248_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // ->(scevgep)
    $constant $W[ptr_deref_253_word_offset_0] : $int<7> := _b0000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_261_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000001000000  )
    $constant $W[type_cast_267_wire_constant] : $int<32> := _b00000000000000000000000001000000// 64
    // if-statement  
    //  file prog.linked.opt.aa, line 170
    // constant-declarations for block %sendResult%body%
    //  file prog.linked.opt.aa, line 175
    // constant-declarations for block %sendResult%body%
    //  file prog.linked.opt.aa, line 178
    // block %sendResult%body
    //  file prog.linked.opt.aa, line 159
    // merge-statement  
    //  file prog.linked.opt.aa, line 162
    // 			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_4 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 163
    // ($cast ($uint<32>) iNsTr_4 )
    $intermediate $W[type_cast_244_wire] : $int<32>
    // idxx_x01
    $W[idxx_x01_238] : $int<32>
    // 		scevgep := @(C[idxx_x01])
    //  file prog.linked.opt.aa, line 165
    // @(C[idxx_x01])
    $intermediate $W[simple_obj_ref_247_resized] : $int<7>
    $intermediate $W[simple_obj_ref_247_scaled] : $int<7>
    $intermediate $W[array_obj_ref_248_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_248_root_address] : $int<7>
    // scevgep
    $W[scevgep_250] : $int<32>
    // 		iNsTr_1 := ->(scevgep)
    //  file prog.linked.opt.aa, line 166
    // ->(scevgep)
    $intermediate $W[ptr_deref_253_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_253_root_address] : $int<7>
    $W[ptr_deref_253_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_253_data_0] : $int<32>
    // iNsTr_1
    $W[iNsTr_1_254] : $float<8,23>
    // 		out_data_pipe := iNsTr_1
    //  file prog.linked.opt.aa, line 167
    // out_data_pipe
    // 		iNsTr_4 := (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 168
    // iNsTr_4
    $W[iNsTr_4_263] : $int<32>
    // 		exitcond1 := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 169
    // exitcond1
    $W[exitcond1_269] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 170
    // datapath-instances for block %sendResult%body
    //  file prog.linked.opt.aa, line 159
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 162
    // 			$phi idxx_x01 := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1			  ($cast ($uint<32>) iNsTr_4 ) $on bb_1_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 163
    // ($cast ($uint<32>) iNsTr_4 )
    := [type_cast_244_inst] (iNsTr_4_263) (type_cast_244_wire)  
    $phi [phi_stmt_238] (type_cast_242_wire_constant type_cast_244_wire) ( idxx_x01_238 )
    // 		scevgep := @(C[idxx_x01])
    //  file prog.linked.opt.aa, line 165
    &/ [array_obj_ref_248_index_0_resize] (idxx_x01_238) (simple_obj_ref_247_resized) 
    &/ [array_obj_ref_248_index_0_rename] (simple_obj_ref_247_resized) (simple_obj_ref_247_scaled) 
    &/ [array_obj_ref_248_offset_inst] (simple_obj_ref_247_scaled) (array_obj_ref_248_final_offset) 
    &/ [array_obj_ref_248_root_address_inst] (array_obj_ref_248_final_offset) (array_obj_ref_248_root_address) 
    := [addr_of_249_final_reg] (array_obj_ref_248_root_address) (scevgep_250)  
    // 		iNsTr_1 := ->(scevgep)
    //  file prog.linked.opt.aa, line 166
    // ->(scevgep)
    &/ [ptr_deref_253_base_resize] (scevgep_250) (ptr_deref_253_resized_base_address) 
    &/ [ptr_deref_253_root_address_inst] (ptr_deref_253_resized_base_address) (ptr_deref_253_root_address) 
    &/ [ptr_deref_253_addr_0] (ptr_deref_253_root_address) (ptr_deref_253_word_address_0) 
    $load [ptr_deref_253_load_0] $from memory_space_2 (ptr_deref_253_word_address_0) (ptr_deref_253_data_0) 
    &/ [ptr_deref_253_gather_scatter] (ptr_deref_253_data_0) (iNsTr_1_254) 
    // 		out_data_pipe := iNsTr_1
    //  file prog.linked.opt.aa, line 167
    // out_data_pipe
    $ioport $out [simple_obj_ref_255_inst]  (iNsTr_1_254) (out_data_pipe) 
    // 		iNsTr_4 := (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 168
    // (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[binary_262_inst] (idxx_x01_238 type_cast_261_wire_constant) (iNsTr_4_263) 
    // 		exitcond1 := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 169
    // (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    ==[binary_268_inst] (iNsTr_4_263 type_cast_267_wire_constant) (exitcond1_269) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 170
    ==0? [if_stmt_270_branch] (exitcond1_269)
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 162
  // ($cast ($uint<32>) iNsTr_4 )
  type_cast_244_inst <=> (branch_block_stmt_235/bb_1_bb_1_PhiReq/phi_stmt_238/phi_stmt_238_sources/type_cast_244/req) (branch_block_stmt_235/bb_1_bb_1_PhiReq/phi_stmt_238/phi_stmt_238_sources/type_cast_244/ack)
  phi_stmt_238 <=> (branch_block_stmt_235/bbx_xnph_bb_1_PhiReq/phi_stmt_238/phi_stmt_238_req branch_block_stmt_235/bb_1_bb_1_PhiReq/phi_stmt_238/phi_stmt_238_req) (branch_block_stmt_235/merge_stmt_237_PhiAck/phi_stmt_238_ack)
  // 		scevgep := @(C[idxx_x01])
  //  file prog.linked.opt.aa, line 165
  array_obj_ref_248_index_0_resize <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/array_obj_ref_248_index_resize_0/index_resize_req) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/array_obj_ref_248_index_resize_0/index_resize_ack)
  array_obj_ref_248_index_0_rename <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/array_obj_ref_248_index_scale_0/scale_rename_req) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/array_obj_ref_248_index_scale_0/scale_rename_ack)
  array_obj_ref_248_offset_inst <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/array_obj_ref_248_add_indices/final_index_req) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/array_obj_ref_248_add_indices/final_index_ack)
  array_obj_ref_248_root_address_inst <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/array_obj_ref_248_base_plus_offset/sum_rename_req) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/array_obj_ref_248_base_plus_offset/sum_rename_ack)
  addr_of_249_final_reg <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/addr_of_249_complete/final_reg_req) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/addr_of_249_complete/final_reg_ack)
  // 		iNsTr_1 := ->(scevgep)
  //  file prog.linked.opt.aa, line 166
  ptr_deref_253_base_resize <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_base_addr_resize/base_resize_req) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_base_addr_resize/base_resize_ack)
  ptr_deref_253_root_address_inst <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_base_plus_offset/sum_rename_req) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_base_plus_offset/sum_rename_ack)
  ptr_deref_253_addr_0 <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_word_addrgen/root_register_req) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_word_addrgen/root_register_ack)
  ptr_deref_253_gather_scatter <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_complete/merge_req) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_complete/merge_ack)
  ptr_deref_253_load_0 <=> (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_request/word_access/word_access_0/rr branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_complete/word_access/word_access_0/cr) (branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_request/word_access/word_access_0/ra branch_block_stmt_235/assign_stmt_250_to_assign_stmt_254/ptr_deref_253_complete/word_access/word_access_0/ca)
  // 		out_data_pipe := iNsTr_1
  //  file prog.linked.opt.aa, line 167
  // out_data_pipe
  simple_obj_ref_255_inst <=> (branch_block_stmt_235/assign_stmt_257/simple_obj_ref_255_complete/pipe_wreq) (branch_block_stmt_235/assign_stmt_257/simple_obj_ref_255_complete/pipe_wack)
  // 		iNsTr_4 := (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 168
  // (idxx_x01 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  binary_262_inst <=> (branch_block_stmt_235/assign_stmt_263_to_assign_stmt_269/binary_262_Sample/rr branch_block_stmt_235/assign_stmt_263_to_assign_stmt_269/binary_262_Update/cr) (branch_block_stmt_235/assign_stmt_263_to_assign_stmt_269/binary_262_Sample/ra branch_block_stmt_235/assign_stmt_263_to_assign_stmt_269/binary_262_Update/ca)
  // 		exitcond1 := (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  //  file prog.linked.opt.aa, line 169
  // (iNsTr_4 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  binary_268_inst <=> (branch_block_stmt_235/assign_stmt_263_to_assign_stmt_269/binary_268_Sample/rr branch_block_stmt_235/assign_stmt_263_to_assign_stmt_269/binary_268_Update/cr) (branch_block_stmt_235/assign_stmt_263_to_assign_stmt_269/binary_268_Sample/ra branch_block_stmt_235/assign_stmt_263_to_assign_stmt_269/binary_268_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 170
  if_stmt_270_branch <=> (branch_block_stmt_235/if_stmt_270_eval_test/branch_req) (branch_block_stmt_235/if_stmt_270_else_link/else_choice_transition branch_block_stmt_235/if_stmt_270_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 175
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 178
}
$module [vectorSum] 
{
  // pipe-declarations for block %vectorSum
  //  file prog.linked.opt.aa, line 182
  // pipe-declarations for block %vectorSum%body
  //  file prog.linked.opt.aa, line 187
  // pipe-declarations for block %vectorSum%body%
  //  file prog.linked.opt.aa, line 190
  // pipe-declarations for block %vectorSum%body%
  //  file prog.linked.opt.aa, line 193
  // pipe-declarations for block %vectorSum%body%
  //  file prog.linked.opt.aa, line 208
  // pipe-declarations for block %vectorSum%body%
  //  file prog.linked.opt.aa, line 212
  // pipe-declarations for block %vectorSum%body%
  //  file prog.linked.opt.aa, line 215
  // pipe-declarations for block %vectorSum%body%
  //  file prog.linked.opt.aa, line 233
  // pipe-declarations for block %vectorSum%body%
  //  file prog.linked.opt.aa, line 236
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_282] // Branch Block  file prog.linked.opt.aa, line 187
    {
      $P [branch_block_stmt_282__entry__]
      branch_block_stmt_282__entry__ <-| ($entry)
      $P [branch_block_stmt_282__exit__]
      branch_block_stmt_282__exit__ |-> ($exit)
      $P [bb_0_sendResultx_xexit]
      $P [merge_stmt_284__exit__] 
      $P [sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge]
      $P [merge_stmt_286__exit__] 
      $P [assign_stmt_299_to_assign_stmt_304__entry__] 
      $P [assign_stmt_299_to_assign_stmt_304__exit__] 
      $P [assign_stmt_307__entry__] 
      $P [assign_stmt_307__exit__] 
      $P [assign_stmt_311_to_assign_stmt_327__entry__] 
      $P [assign_stmt_311_to_assign_stmt_327__exit__] 
      $P [if_stmt_328__entry__] 
      $P [if_stmt_328__exit__] 
      $P [merge_stmt_334__entry__] 
      $P [merge_stmt_334__exit__] 
      $P [sendResultx_xexitx_xbackedge_sendResultx_xexit]
      $P [merge_stmt_344__exit__] 
      $P [getDatax_xexitx_xpreheader_getDatax_xexit]
      $P [merge_stmt_346__exit__] 
      $P [do_while_stmt_353__entry__] 
      $P [do_while_stmt_353__exit__] 
      $P [getDatax_xexit_x_vectorSum_x_xexitx_xloopexit]
      $P [merge_stmt_409__exit__] 
      $P [x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit]
      $P [merge_stmt_411__exit__] 
      $P [assign_stmt_424_to_assign_stmt_428__entry__] 
      $P [assign_stmt_424_to_assign_stmt_428__exit__] 
      $P [assign_stmt_431__entry__] 
      $P [assign_stmt_431__exit__] 
      $P [assign_stmt_437_to_assign_stmt_443__entry__] 
      $P [assign_stmt_437_to_assign_stmt_443__exit__] 
      $P [if_stmt_444__entry__] 
      $P [if_stmt_444__exit__] 
      ::[assign_stmt_299_to_assign_stmt_304] 
      {
        // 		scevgepx_xi := @(A[idxx_x01x_xi])
        //  file prog.linked.opt.aa, line 196
        $T[assign_stmt_299_trigger_] 
        $T[assign_stmt_299_active_] 
        $T[assign_stmt_299_completed_] 
        assign_stmt_299_active_ <-& (assign_stmt_299_trigger_)
        // @(A[idxx_x01x_xi])
        $T[addr_of_298_trigger_] 
        $T[addr_of_298_active_] 
        $T[addr_of_298_completed_] 
        $T[array_obj_ref_297_root_address_calculated] 
        $T[array_obj_ref_297_indices_scaled] 
        $T[array_obj_ref_297_offset_calculated] 
        $T[array_obj_ref_297_index_computed_0] 
        $T[array_obj_ref_297_index_resized_0] 
        // idxx_x01x_xi
        $T[simple_obj_ref_296_trigger_] 
        $T[simple_obj_ref_296_active_] 
        $T[simple_obj_ref_296_completed_] 
        // implicit reference
        simple_obj_ref_296_completed_ <-& (simple_obj_ref_296_active_)
        simple_obj_ref_296_active_ <-& (simple_obj_ref_296_trigger_)
        array_obj_ref_297_index_computed_0 <-& (simple_obj_ref_296_completed_)
        ;;[array_obj_ref_297_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_297_index_computed_0 &-> (array_obj_ref_297_index_resize_0)
        array_obj_ref_297_index_resized_0 <-& (array_obj_ref_297_index_resize_0)
        ;;[array_obj_ref_297_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_297_index_resized_0 &-> (array_obj_ref_297_index_scale_0)
        array_obj_ref_297_indices_scaled <-& (array_obj_ref_297_index_scale_0)
        ;;[array_obj_ref_297_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_297_indices_scaled &-> (array_obj_ref_297_add_indices)
        array_obj_ref_297_offset_calculated <-& (array_obj_ref_297_add_indices)
        ;;[array_obj_ref_297_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_297_offset_calculated &-> (array_obj_ref_297_base_plus_offset)
        array_obj_ref_297_root_address_calculated <-& (array_obj_ref_297_base_plus_offset)
        ;;[addr_of_298_complete] 
        {
          $T [final_reg_req] $T [final_reg_ack]
        }
        addr_of_298_active_ <-& (addr_of_298_trigger_)
        addr_of_298_active_ <-& (array_obj_ref_297_root_address_calculated)
        addr_of_298_active_ &-> (addr_of_298_complete)
        addr_of_298_completed_ <-& (addr_of_298_complete)
        assign_stmt_299_trigger_ <-& (addr_of_298_completed_)
        // scevgepx_xi
        // implicit reference
        assign_stmt_299_completed_ <-& (assign_stmt_299_active_)
        // 		scevgep2x_xi := @(B[idxx_x01x_xi])
        //  file prog.linked.opt.aa, line 197
        $T[assign_stmt_304_trigger_] 
        $T[assign_stmt_304_active_] 
        $T[assign_stmt_304_completed_] 
        assign_stmt_304_active_ <-& (assign_stmt_304_trigger_)
        // @(B[idxx_x01x_xi])
        $T[addr_of_303_trigger_] 
        $T[addr_of_303_active_] 
        $T[addr_of_303_completed_] 
        $T[array_obj_ref_302_root_address_calculated] 
        $T[array_obj_ref_302_indices_scaled] 
        $T[array_obj_ref_302_offset_calculated] 
        $T[array_obj_ref_302_index_computed_0] 
        $T[array_obj_ref_302_index_resized_0] 
        // idxx_x01x_xi
        $T[simple_obj_ref_301_trigger_] 
        $T[simple_obj_ref_301_active_] 
        $T[simple_obj_ref_301_completed_] 
        // implicit reference
        simple_obj_ref_301_completed_ <-& (simple_obj_ref_301_active_)
        simple_obj_ref_301_active_ <-& (simple_obj_ref_301_trigger_)
        array_obj_ref_302_index_computed_0 <-& (simple_obj_ref_301_completed_)
        ;;[array_obj_ref_302_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_302_index_computed_0 &-> (array_obj_ref_302_index_resize_0)
        array_obj_ref_302_index_resized_0 <-& (array_obj_ref_302_index_resize_0)
        ;;[array_obj_ref_302_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_302_index_resized_0 &-> (array_obj_ref_302_index_scale_0)
        array_obj_ref_302_indices_scaled <-& (array_obj_ref_302_index_scale_0)
        ;;[array_obj_ref_302_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_302_indices_scaled &-> (array_obj_ref_302_add_indices)
        array_obj_ref_302_offset_calculated <-& (array_obj_ref_302_add_indices)
        ;;[array_obj_ref_302_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_302_offset_calculated &-> (array_obj_ref_302_base_plus_offset)
        array_obj_ref_302_root_address_calculated <-& (array_obj_ref_302_base_plus_offset)
        ;;[addr_of_303_complete] 
        {
          $T [final_reg_req] $T [final_reg_ack]
        }
        addr_of_303_active_ <-& (addr_of_303_trigger_)
        addr_of_303_active_ <-& (array_obj_ref_302_root_address_calculated)
        addr_of_303_active_ &-> (addr_of_303_complete)
        addr_of_303_completed_ <-& (addr_of_303_complete)
        assign_stmt_304_trigger_ <-& (addr_of_303_completed_)
        // scevgep2x_xi
        // implicit reference
        assign_stmt_304_completed_ <-& (assign_stmt_304_active_)
        // load-store dependencies..
      }
      // assign_stmt_299_to_assign_stmt_304
      assign_stmt_299_to_assign_stmt_304__entry__ |-> (assign_stmt_299_to_assign_stmt_304)
      assign_stmt_299_to_assign_stmt_304__exit__ <-| (assign_stmt_299_to_assign_stmt_304)
      ::[assign_stmt_307] 
      {
        // 		iNsTr_2 := in_data_pipe
        //  file prog.linked.opt.aa, line 198
        $T[assign_stmt_307_trigger_] 
        $T[assign_stmt_307_active_] 
        $T[assign_stmt_307_completed_] 
        assign_stmt_307_active_ <-& (assign_stmt_307_trigger_)
        // in_data_pipe
        $T[simple_obj_ref_306_trigger_] 
        $T[simple_obj_ref_306_active_] 
        $T[simple_obj_ref_306_completed_] 
        ;;[simple_obj_ref_306_complete] 
        {
          // pipe read
          $T [req] $T [ack] 
        }
        simple_obj_ref_306_active_ <-& (simple_obj_ref_306_trigger_)
        simple_obj_ref_306_active_ &-> (simple_obj_ref_306_complete)
        simple_obj_ref_306_completed_ <-& (simple_obj_ref_306_complete)
        assign_stmt_307_trigger_ <-& (simple_obj_ref_306_completed_)
        // iNsTr_2
        // implicit reference
        assign_stmt_307_completed_ <-& (assign_stmt_307_active_)
        // barrier: 		iNsTr_2 := in_data_pipe
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data_pipe
      }
      // assign_stmt_307
      assign_stmt_307__entry__ |-> (assign_stmt_307)
      assign_stmt_307__exit__ <-| (assign_stmt_307)
      ::[assign_stmt_311_to_assign_stmt_327] 
      {
        // 		->(scevgepx_xi) := iNsTr_2
        //  file prog.linked.opt.aa, line 199
        $T[assign_stmt_311_trigger_] 
        $T[assign_stmt_311_active_] 
        $T[assign_stmt_311_completed_] 
        assign_stmt_311_active_ <-& (assign_stmt_311_trigger_)
        // iNsTr_2
        $T[simple_obj_ref_310_trigger_] 
        $T[simple_obj_ref_310_active_] 
        $T[simple_obj_ref_310_completed_] 
        // implicit reference
        simple_obj_ref_310_completed_ <-& (simple_obj_ref_310_active_)
        simple_obj_ref_310_active_ <-& (simple_obj_ref_310_trigger_)
        assign_stmt_311_trigger_ <-& (simple_obj_ref_310_completed_)
        // ->(scevgepx_xi)
        $T[ptr_deref_309_trigger_] 
        $T[ptr_deref_309_active_] 
        $T[ptr_deref_309_completed_] 
        $T[ptr_deref_309_base_address_calculated] 
        // scevgepx_xi
        $T[simple_obj_ref_308_trigger_] 
        $T[simple_obj_ref_308_active_] 
        $T[simple_obj_ref_308_completed_] 
        // implicit reference
        simple_obj_ref_308_completed_ <-& (simple_obj_ref_308_active_)
        simple_obj_ref_308_active_ <-& (simple_obj_ref_308_trigger_)
        $T[ptr_deref_309_word_address_calculated] 
        $T[ptr_deref_309_root_address_calculated] 
        $T[ptr_deref_309_base_address_resized] 
        ;;[ptr_deref_309_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_309_base_address_calculated &-> (ptr_deref_309_base_addr_resize)
        ptr_deref_309_base_address_resized <-& (ptr_deref_309_base_addr_resize)
        ;;[ptr_deref_309_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_309_base_address_resized &-> (ptr_deref_309_base_plus_offset)
        ptr_deref_309_root_address_calculated <-& (ptr_deref_309_base_plus_offset)
        ;;[ptr_deref_309_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_309_root_address_calculated &-> (ptr_deref_309_word_addrgen)
        ptr_deref_309_word_address_calculated <-& (ptr_deref_309_word_addrgen)
        ;;[ptr_deref_309_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_309_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_309_trigger_ &-> (ptr_deref_309_request)
        ptr_deref_309_active_ <-& (ptr_deref_309_request)
        ptr_deref_309_active_ &-> (ptr_deref_309_complete)
        ptr_deref_309_completed_ <-& (ptr_deref_309_complete)
        ptr_deref_309_trigger_ <-& (ptr_deref_309_word_address_calculated)
        ptr_deref_309_base_address_calculated <-& (simple_obj_ref_308_completed_)
        ptr_deref_309_trigger_ <-& (ptr_deref_309_base_address_calculated)
        ptr_deref_309_trigger_ <-& (assign_stmt_311_active_)
        assign_stmt_311_completed_ <-& (ptr_deref_309_completed_)
        // 		->(scevgep2x_xi) := iNsTr_2
        //  file prog.linked.opt.aa, line 200
        $T[assign_stmt_315_trigger_] 
        $T[assign_stmt_315_active_] 
        $T[assign_stmt_315_completed_] 
        assign_stmt_315_active_ <-& (assign_stmt_315_trigger_)
        // iNsTr_2
        $T[simple_obj_ref_314_trigger_] 
        $T[simple_obj_ref_314_active_] 
        $T[simple_obj_ref_314_completed_] 
        // implicit reference
        simple_obj_ref_314_completed_ <-& (simple_obj_ref_314_active_)
        simple_obj_ref_314_active_ <-& (simple_obj_ref_314_trigger_)
        assign_stmt_315_trigger_ <-& (simple_obj_ref_314_completed_)
        // ->(scevgep2x_xi)
        $T[ptr_deref_313_trigger_] 
        $T[ptr_deref_313_active_] 
        $T[ptr_deref_313_completed_] 
        $T[ptr_deref_313_base_address_calculated] 
        // scevgep2x_xi
        $T[simple_obj_ref_312_trigger_] 
        $T[simple_obj_ref_312_active_] 
        $T[simple_obj_ref_312_completed_] 
        // implicit reference
        simple_obj_ref_312_completed_ <-& (simple_obj_ref_312_active_)
        simple_obj_ref_312_active_ <-& (simple_obj_ref_312_trigger_)
        $T[ptr_deref_313_word_address_calculated] 
        $T[ptr_deref_313_root_address_calculated] 
        $T[ptr_deref_313_base_address_resized] 
        ;;[ptr_deref_313_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_313_base_address_calculated &-> (ptr_deref_313_base_addr_resize)
        ptr_deref_313_base_address_resized <-& (ptr_deref_313_base_addr_resize)
        ;;[ptr_deref_313_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_313_base_address_resized &-> (ptr_deref_313_base_plus_offset)
        ptr_deref_313_root_address_calculated <-& (ptr_deref_313_base_plus_offset)
        ;;[ptr_deref_313_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_313_root_address_calculated &-> (ptr_deref_313_word_addrgen)
        ptr_deref_313_word_address_calculated <-& (ptr_deref_313_word_addrgen)
        ;;[ptr_deref_313_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_313_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        ptr_deref_313_trigger_ &-> (ptr_deref_313_request)
        ptr_deref_313_active_ <-& (ptr_deref_313_request)
        ptr_deref_313_active_ &-> (ptr_deref_313_complete)
        ptr_deref_313_completed_ <-& (ptr_deref_313_complete)
        ptr_deref_313_trigger_ <-& (ptr_deref_313_word_address_calculated)
        ptr_deref_313_base_address_calculated <-& (simple_obj_ref_312_completed_)
        ptr_deref_313_trigger_ <-& (ptr_deref_313_base_address_calculated)
        ptr_deref_313_trigger_ <-& (assign_stmt_315_active_)
        assign_stmt_315_completed_ <-& (ptr_deref_313_completed_)
        // 		iNsTr_5 := (idxx_x01x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 201
        $T[assign_stmt_321_trigger_] 
        $T[assign_stmt_321_active_] 
        $T[assign_stmt_321_completed_] 
        assign_stmt_321_active_ <-& (assign_stmt_321_trigger_)
        // (idxx_x01x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[binary_320_trigger_] 
        $T[binary_320_active_] 
        $T[binary_320_completed_] 
        $T[binary_320_sample_start_] 
        $T[binary_320_sample_completed_] 
        $T[binary_320_update_start_] 
        $T[binary_320_update_completed_] 
        binary_320_sample_start_ <-& (binary_320_trigger_)
        binary_320_update_start_ <-& (binary_320_trigger_)
        binary_320_completed_ <-& (binary_320_update_completed_)
        binary_320_completed_ <-& (binary_320_sample_completed_)
        // idxx_x01x_xi
        $T[simple_obj_ref_317_trigger_] 
        $T[simple_obj_ref_317_active_] 
        $T[simple_obj_ref_317_completed_] 
        // implicit reference
        simple_obj_ref_317_completed_ <-& (simple_obj_ref_317_active_)
        simple_obj_ref_317_active_ <-& (simple_obj_ref_317_trigger_)
        binary_320_trigger_ <-& (simple_obj_ref_317_completed_)
        ;;[binary_320_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_320_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_320_sample_start_ &-> (binary_320_Sample)
        binary_320_sample_completed_ <-& (binary_320_Sample)
        binary_320_update_start_ &-> (binary_320_Update)
        binary_320_update_completed_ <-& (binary_320_Update)
        assign_stmt_321_trigger_ <-& (binary_320_completed_)
        // iNsTr_5
        // implicit reference
        assign_stmt_321_completed_ <-& (assign_stmt_321_active_)
        // 		exitcondx_xi := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
        //  file prog.linked.opt.aa, line 202
        $T[assign_stmt_327_trigger_] 
        $T[assign_stmt_327_active_] 
        $T[assign_stmt_327_completed_] 
        assign_stmt_327_active_ <-& (assign_stmt_327_trigger_)
        // (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
        $T[binary_326_trigger_] 
        $T[binary_326_active_] 
        $T[binary_326_completed_] 
        $T[binary_326_sample_start_] 
        $T[binary_326_sample_completed_] 
        $T[binary_326_update_start_] 
        $T[binary_326_update_completed_] 
        binary_326_sample_start_ <-& (binary_326_trigger_)
        binary_326_update_start_ <-& (binary_326_trigger_)
        binary_326_completed_ <-& (binary_326_update_completed_)
        binary_326_completed_ <-& (binary_326_sample_completed_)
        // iNsTr_5
        $T[simple_obj_ref_323_trigger_] 
        $T[simple_obj_ref_323_active_] 
        $T[simple_obj_ref_323_completed_] 
        // implicit reference
        simple_obj_ref_323_trigger_ <-& (assign_stmt_321_completed_)
        simple_obj_ref_323_completed_ <-& (simple_obj_ref_323_active_)
        simple_obj_ref_323_active_ <-& (simple_obj_ref_323_trigger_)
        binary_326_trigger_ <-& (simple_obj_ref_323_completed_)
        ;;[binary_326_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_326_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_326_sample_start_ &-> (binary_326_Sample)
        binary_326_sample_completed_ <-& (binary_326_Sample)
        binary_326_update_start_ &-> (binary_326_Update)
        binary_326_update_completed_ <-& (binary_326_Update)
        assign_stmt_327_trigger_ <-& (binary_326_completed_)
        // exitcondx_xi
        // implicit reference
        assign_stmt_327_completed_ <-& (assign_stmt_327_active_)
        // load-store dependencies..
      }
      // assign_stmt_311_to_assign_stmt_327
      assign_stmt_311_to_assign_stmt_327__entry__ |-> (assign_stmt_311_to_assign_stmt_327)
      assign_stmt_311_to_assign_stmt_327__exit__ <-| (assign_stmt_311_to_assign_stmt_327)
      // if-statement  
      //  file prog.linked.opt.aa, line 203
      ;;[if_stmt_328_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_328__entry__ |-> (if_stmt_328_dead_link)
      if_stmt_328__exit__ <-| (if_stmt_328_dead_link)
      ;;[if_stmt_328_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_328__entry__ |-> (if_stmt_328_eval_test)
      $P [simple_obj_ref_329_place]
      simple_obj_ref_329_place <-| (if_stmt_328_eval_test)
      ;;[if_stmt_328_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_328_else_link] 
      {
        $T [else_choice_transition] 
      }
      simple_obj_ref_329_place |-> (if_stmt_328_if_link if_stmt_328_else_link)
      $P [sendResultx_xexit_getDatax_xexitx_xpreheader]
      sendResultx_xexit_getDatax_xexitx_xpreheader <-| (if_stmt_328_if_link)
      $P [sendResultx_xexit_sendResultx_xexitx_xbackedge]
      sendResultx_xexit_sendResultx_xexitx_xbackedge <-| (if_stmt_328_else_link)
      // do-while-statement  
      //  file prog.linked.opt.aa, line 218
      <o> [do_while_stmt_353]  $depth 16 
      {
        $P[do_while_stmt_353__entry__] 
        $P[do_while_stmt_353__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline[do_while_stmt_353_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // PHI statement phi_stmt_355
          // 			$phi indvarx_xi := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on $loopback			  indvarx_xi_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_355_req_0_raw] 
          $T[phi_stmt_355_req_0] 
          phi_stmt_355_req_0_raw &-> (phi_stmt_355_req_0)
          $T[phi_stmt_355_trigger_from_back_edge_to_loop_body] 
          back_edge_to_loop_body &-> (phi_stmt_355_trigger_from_back_edge_to_loop_body)
          $T[phi_stmt_355_req_1_raw] 
          $T[phi_stmt_355_req_1] 
          phi_stmt_355_req_1_raw &-> (phi_stmt_355_req_1)
          $T[phi_stmt_355_trigger_from_first_time_through_loop_body] 
          first_time_through_loop_body &-> (phi_stmt_355_trigger_from_first_time_through_loop_body)
          $T[phi_stmt_355_phi_sequencer_reqs_merged] 
          $T[phi_stmt_355_phi_sequencer_done] 
          $T[phi_stmt_355_ack] 
          $T[phi_stmt_355_enable_] 
          $T[phi_stmt_355_trigger_] 
          $T[phi_stmt_355_active_] 
          $T[phi_stmt_355_completed_] 
          phi_stmt_355_trigger_ &-> (phi_stmt_355_enable_)
          $phisequencer [ phi_stmt_355_phi_seq] (  phi_stmt_355_trigger_from_back_edge_to_loop_body phi_stmt_355_trigger_from_first_time_through_loop_body : phi_stmt_355_enable_ : phi_stmt_355_ack ) (  phi_stmt_355_req_0_raw phi_stmt_355_req_1_raw : phi_stmt_355_phi_sequencer_done ) 
          $transitionmerge [phi_stmt_355_req_merger] ( phi_stmt_355_req_0 phi_stmt_355_req_1) (phi_stmt_355_phi_sequencer_reqs_merged)
          phi_stmt_355_phi_sequencer_reqs_merged &-> ($null)
          phi_stmt_355_active_ <-& (phi_stmt_355_phi_sequencer_done)
          phi_stmt_355_completed_ <-& (phi_stmt_355_active_)
          // ($cast ($uint<32>) indvarx_xnextx_xi )
          $T[type_cast_358_trigger_] 
          $T[type_cast_358_active_] 
          $T[type_cast_358_completed_] 
          // indvarx_xnextx_xi
          $T[simple_obj_ref_357_trigger_] 
          $T[simple_obj_ref_357_active_] 
          $T[simple_obj_ref_357_completed_] 
          // implicit reference
          simple_obj_ref_357_completed_ <-& (simple_obj_ref_357_active_)
          simple_obj_ref_357_active_ <-& (simple_obj_ref_357_trigger_)
          type_cast_358_trigger_ <-& (simple_obj_ref_357_completed_)
          ;;[type_cast_358_complete]
          {
            $T [req] $T [ack] //  type-conversion (bit-cast) 
          }
          type_cast_358_trigger_ &-> (type_cast_358_complete)
          type_cast_358_active_ <-& (type_cast_358_complete)
          type_cast_358_completed_ <-& (type_cast_358_active_)
          simple_obj_ref_357_trigger_ o<-& (type_cast_358_active_)
          phi_stmt_355_trigger_ <-& (type_cast_358_completed_)
          type_cast_358_active_ o<-& (phi_stmt_355_completed_)
          // indvarx_xi_at_entry
          $T[simple_obj_ref_359_trigger_] 
          $T[simple_obj_ref_359_active_] 
          $T[simple_obj_ref_359_completed_] 
          // implicit reference
          simple_obj_ref_359_completed_ <-& (simple_obj_ref_359_active_)
          simple_obj_ref_359_active_ <-& (simple_obj_ref_359_trigger_)
          phi_stmt_355_trigger_ <-& (simple_obj_ref_359_completed_)
          simple_obj_ref_359_trigger_ o<-& (phi_stmt_355_completed_)
          // 			scevgepx_xi1 := @(A[indvarx_xi])
          //  file prog.linked.opt.aa, line 222
          $T[assign_stmt_365_trigger_] 
          $T[assign_stmt_365_active_] 
          $T[assign_stmt_365_completed_] 
          assign_stmt_365_active_ <-& (assign_stmt_365_trigger_)
          // @(A[indvarx_xi])
          $T[addr_of_364_trigger_] 
          $T[addr_of_364_active_] 
          $T[addr_of_364_completed_] 
          $T[array_obj_ref_363_root_address_calculated] 
          $T[array_obj_ref_363_indices_scaled] 
          $T[array_obj_ref_363_offset_calculated] 
          $T[array_obj_ref_363_index_computed_0] 
          $T[array_obj_ref_363_index_resized_0] 
          // indvarx_xi
          $T[simple_obj_ref_362_trigger_] 
          $T[simple_obj_ref_362_active_] 
          $T[simple_obj_ref_362_completed_] 
          // implicit reference
          simple_obj_ref_362_trigger_ <-& (phi_stmt_355_completed_)
          simple_obj_ref_362_completed_ <-& (simple_obj_ref_362_active_)
          simple_obj_ref_362_active_ <-& (simple_obj_ref_362_trigger_)
          array_obj_ref_363_index_computed_0 <-& (simple_obj_ref_362_completed_)
          ;;[array_obj_ref_363_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_363_index_computed_0 &-> (array_obj_ref_363_index_resize_0)
          array_obj_ref_363_index_resized_0 <-& (array_obj_ref_363_index_resize_0)
          ;;[array_obj_ref_363_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_363_index_resized_0 &-> (array_obj_ref_363_index_scale_0)
          array_obj_ref_363_indices_scaled <-& (array_obj_ref_363_index_scale_0)
          ;;[array_obj_ref_363_add_indices] 
          {
            $T [final_index_req] $T [final_index_ack] // rename
          }
          array_obj_ref_363_indices_scaled &-> (array_obj_ref_363_add_indices)
          array_obj_ref_363_offset_calculated <-& (array_obj_ref_363_add_indices)
          ;;[array_obj_ref_363_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_363_offset_calculated &-> (array_obj_ref_363_base_plus_offset)
          array_obj_ref_363_root_address_calculated <-& (array_obj_ref_363_base_plus_offset)
          ;;[addr_of_364_complete] 
          {
            $T [final_reg_req] $T [final_reg_ack]
          }
          addr_of_364_active_ <-& (addr_of_364_trigger_)
          addr_of_364_active_ <-& (array_obj_ref_363_root_address_calculated)
          addr_of_364_active_ &-> (addr_of_364_complete)
          addr_of_364_completed_ <-& (addr_of_364_complete)
          phi_stmt_355_enable_ o<-& (addr_of_364_completed_)
          addr_of_364_active_ o<-& (addr_of_364_completed_)
          assign_stmt_365_trigger_ <-& (addr_of_364_completed_)
          addr_of_364_active_ o<-& (assign_stmt_365_completed_)
          // scevgepx_xi1
          // implicit reference
          assign_stmt_365_completed_ <-& (assign_stmt_365_active_)
          // 			scevgep2x_xi2 := @(B[indvarx_xi])
          //  file prog.linked.opt.aa, line 223
          $T[assign_stmt_370_trigger_] 
          $T[assign_stmt_370_active_] 
          $T[assign_stmt_370_completed_] 
          assign_stmt_370_active_ <-& (assign_stmt_370_trigger_)
          // @(B[indvarx_xi])
          $T[addr_of_369_trigger_] 
          $T[addr_of_369_active_] 
          $T[addr_of_369_completed_] 
          $T[array_obj_ref_368_root_address_calculated] 
          $T[array_obj_ref_368_indices_scaled] 
          $T[array_obj_ref_368_offset_calculated] 
          $T[array_obj_ref_368_index_computed_0] 
          $T[array_obj_ref_368_index_resized_0] 
          // indvarx_xi
          $T[simple_obj_ref_367_trigger_] 
          $T[simple_obj_ref_367_active_] 
          $T[simple_obj_ref_367_completed_] 
          // implicit reference
          simple_obj_ref_367_trigger_ <-& (phi_stmt_355_completed_)
          simple_obj_ref_367_completed_ <-& (simple_obj_ref_367_active_)
          simple_obj_ref_367_active_ <-& (simple_obj_ref_367_trigger_)
          array_obj_ref_368_index_computed_0 <-& (simple_obj_ref_367_completed_)
          ;;[array_obj_ref_368_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_368_index_computed_0 &-> (array_obj_ref_368_index_resize_0)
          array_obj_ref_368_index_resized_0 <-& (array_obj_ref_368_index_resize_0)
          ;;[array_obj_ref_368_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_368_index_resized_0 &-> (array_obj_ref_368_index_scale_0)
          array_obj_ref_368_indices_scaled <-& (array_obj_ref_368_index_scale_0)
          ;;[array_obj_ref_368_add_indices] 
          {
            $T [final_index_req] $T [final_index_ack] // rename
          }
          array_obj_ref_368_indices_scaled &-> (array_obj_ref_368_add_indices)
          array_obj_ref_368_offset_calculated <-& (array_obj_ref_368_add_indices)
          ;;[array_obj_ref_368_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_368_offset_calculated &-> (array_obj_ref_368_base_plus_offset)
          array_obj_ref_368_root_address_calculated <-& (array_obj_ref_368_base_plus_offset)
          ;;[addr_of_369_complete] 
          {
            $T [final_reg_req] $T [final_reg_ack]
          }
          addr_of_369_active_ <-& (addr_of_369_trigger_)
          addr_of_369_active_ <-& (array_obj_ref_368_root_address_calculated)
          addr_of_369_active_ &-> (addr_of_369_complete)
          addr_of_369_completed_ <-& (addr_of_369_complete)
          phi_stmt_355_enable_ o<-& (addr_of_369_completed_)
          addr_of_369_active_ o<-& (addr_of_369_completed_)
          assign_stmt_370_trigger_ <-& (addr_of_369_completed_)
          addr_of_369_active_ o<-& (assign_stmt_370_completed_)
          // scevgep2x_xi2
          // implicit reference
          assign_stmt_370_completed_ <-& (assign_stmt_370_active_)
          // 			scevgep3x_xi := @(C[indvarx_xi])
          //  file prog.linked.opt.aa, line 224
          $T[assign_stmt_375_trigger_] 
          $T[assign_stmt_375_active_] 
          $T[assign_stmt_375_completed_] 
          assign_stmt_375_active_ <-& (assign_stmt_375_trigger_)
          // @(C[indvarx_xi])
          $T[addr_of_374_trigger_] 
          $T[addr_of_374_active_] 
          $T[addr_of_374_completed_] 
          $T[array_obj_ref_373_root_address_calculated] 
          $T[array_obj_ref_373_indices_scaled] 
          $T[array_obj_ref_373_offset_calculated] 
          $T[array_obj_ref_373_index_computed_0] 
          $T[array_obj_ref_373_index_resized_0] 
          // indvarx_xi
          $T[simple_obj_ref_372_trigger_] 
          $T[simple_obj_ref_372_active_] 
          $T[simple_obj_ref_372_completed_] 
          // implicit reference
          simple_obj_ref_372_trigger_ <-& (phi_stmt_355_completed_)
          simple_obj_ref_372_completed_ <-& (simple_obj_ref_372_active_)
          simple_obj_ref_372_active_ <-& (simple_obj_ref_372_trigger_)
          array_obj_ref_373_index_computed_0 <-& (simple_obj_ref_372_completed_)
          ;;[array_obj_ref_373_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_373_index_computed_0 &-> (array_obj_ref_373_index_resize_0)
          array_obj_ref_373_index_resized_0 <-& (array_obj_ref_373_index_resize_0)
          ;;[array_obj_ref_373_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_373_index_resized_0 &-> (array_obj_ref_373_index_scale_0)
          array_obj_ref_373_indices_scaled <-& (array_obj_ref_373_index_scale_0)
          ;;[array_obj_ref_373_add_indices] 
          {
            $T [final_index_req] $T [final_index_ack] // rename
          }
          array_obj_ref_373_indices_scaled &-> (array_obj_ref_373_add_indices)
          array_obj_ref_373_offset_calculated <-& (array_obj_ref_373_add_indices)
          ;;[array_obj_ref_373_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_373_offset_calculated &-> (array_obj_ref_373_base_plus_offset)
          array_obj_ref_373_root_address_calculated <-& (array_obj_ref_373_base_plus_offset)
          ;;[addr_of_374_complete] 
          {
            $T [final_reg_req] $T [final_reg_ack]
          }
          addr_of_374_active_ <-& (addr_of_374_trigger_)
          addr_of_374_active_ <-& (array_obj_ref_373_root_address_calculated)
          addr_of_374_active_ &-> (addr_of_374_complete)
          addr_of_374_completed_ <-& (addr_of_374_complete)
          phi_stmt_355_enable_ o<-& (addr_of_374_completed_)
          addr_of_374_active_ o<-& (addr_of_374_completed_)
          assign_stmt_375_trigger_ <-& (addr_of_374_completed_)
          addr_of_374_active_ o<-& (assign_stmt_375_completed_)
          // scevgep3x_xi
          // implicit reference
          assign_stmt_375_completed_ <-& (assign_stmt_375_active_)
          // 			iNsTr_10 := ->(scevgepx_xi1)
          //  file prog.linked.opt.aa, line 225
          $T[assign_stmt_379_trigger_] 
          $T[assign_stmt_379_active_] 
          $T[assign_stmt_379_completed_] 
          assign_stmt_379_active_ <-& (assign_stmt_379_trigger_)
          // ->(scevgepx_xi1)
          $T[ptr_deref_378_trigger_] 
          $T[ptr_deref_378_active_] 
          $T[ptr_deref_378_completed_] 
          $T[ptr_deref_378_base_address_calculated] 
          // scevgepx_xi1
          $T[simple_obj_ref_377_trigger_] 
          $T[simple_obj_ref_377_active_] 
          $T[simple_obj_ref_377_completed_] 
          // implicit reference
          simple_obj_ref_377_trigger_ <-& (assign_stmt_365_completed_)
          simple_obj_ref_377_completed_ <-& (simple_obj_ref_377_active_)
          simple_obj_ref_377_active_ <-& (simple_obj_ref_377_trigger_)
          $T[ptr_deref_378_word_address_calculated] 
          $T[ptr_deref_378_root_address_calculated] 
          $T[ptr_deref_378_base_address_resized] 
          ;;[ptr_deref_378_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_378_base_address_calculated &-> (ptr_deref_378_base_addr_resize)
          ptr_deref_378_base_address_resized <-& (ptr_deref_378_base_addr_resize)
          ;;[ptr_deref_378_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_378_base_address_resized &-> (ptr_deref_378_base_plus_offset)
          ptr_deref_378_root_address_calculated <-& (ptr_deref_378_base_plus_offset)
          ;;[ptr_deref_378_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_378_root_address_calculated &-> (ptr_deref_378_word_addrgen)
          ptr_deref_378_word_address_calculated <-& (ptr_deref_378_word_addrgen)
          ;;[ptr_deref_378_request] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_378_complete] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            $T [merge_req] $T [merge_ack]
          }
          ptr_deref_378_trigger_ &-> (ptr_deref_378_request)
          ptr_deref_378_active_ <-& (ptr_deref_378_request)
          ptr_deref_378_active_ &-> (ptr_deref_378_complete)
          ptr_deref_378_completed_ <-& (ptr_deref_378_complete)
          ptr_deref_378_root_address_calculated o<-& (ptr_deref_378_active_)
          ptr_deref_378_trigger_ <-& (ptr_deref_378_word_address_calculated)
          ptr_deref_378_base_address_calculated <-& (simple_obj_ref_377_completed_)
          ptr_deref_378_trigger_ <-& (ptr_deref_378_base_address_calculated)
          addr_of_364_active_ o<-& (ptr_deref_378_active_)
          ptr_deref_378_trigger_ o<-& (ptr_deref_378_active_)
          ptr_deref_378_active_ o<-& (ptr_deref_378_completed_)
          assign_stmt_379_trigger_ <-& (ptr_deref_378_completed_)
          ptr_deref_378_active_ o<-& (assign_stmt_379_completed_)
          // iNsTr_10
          // implicit reference
          assign_stmt_379_completed_ <-& (assign_stmt_379_active_)
          // 			iNsTr_11 := ->(scevgep2x_xi2)
          //  file prog.linked.opt.aa, line 226
          $T[assign_stmt_383_trigger_] 
          $T[assign_stmt_383_active_] 
          $T[assign_stmt_383_completed_] 
          assign_stmt_383_active_ <-& (assign_stmt_383_trigger_)
          // ->(scevgep2x_xi2)
          $T[ptr_deref_382_trigger_] 
          $T[ptr_deref_382_active_] 
          $T[ptr_deref_382_completed_] 
          $T[ptr_deref_382_base_address_calculated] 
          // scevgep2x_xi2
          $T[simple_obj_ref_381_trigger_] 
          $T[simple_obj_ref_381_active_] 
          $T[simple_obj_ref_381_completed_] 
          // implicit reference
          simple_obj_ref_381_trigger_ <-& (assign_stmt_370_completed_)
          simple_obj_ref_381_completed_ <-& (simple_obj_ref_381_active_)
          simple_obj_ref_381_active_ <-& (simple_obj_ref_381_trigger_)
          $T[ptr_deref_382_word_address_calculated] 
          $T[ptr_deref_382_root_address_calculated] 
          $T[ptr_deref_382_base_address_resized] 
          ;;[ptr_deref_382_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_382_base_address_calculated &-> (ptr_deref_382_base_addr_resize)
          ptr_deref_382_base_address_resized <-& (ptr_deref_382_base_addr_resize)
          ;;[ptr_deref_382_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_382_base_address_resized &-> (ptr_deref_382_base_plus_offset)
          ptr_deref_382_root_address_calculated <-& (ptr_deref_382_base_plus_offset)
          ;;[ptr_deref_382_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_382_root_address_calculated &-> (ptr_deref_382_word_addrgen)
          ptr_deref_382_word_address_calculated <-& (ptr_deref_382_word_addrgen)
          ;;[ptr_deref_382_request] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_382_complete] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            $T [merge_req] $T [merge_ack]
          }
          ptr_deref_382_trigger_ &-> (ptr_deref_382_request)
          ptr_deref_382_active_ <-& (ptr_deref_382_request)
          ptr_deref_382_active_ &-> (ptr_deref_382_complete)
          ptr_deref_382_completed_ <-& (ptr_deref_382_complete)
          ptr_deref_382_root_address_calculated o<-& (ptr_deref_382_active_)
          ptr_deref_382_trigger_ <-& (ptr_deref_382_word_address_calculated)
          ptr_deref_382_base_address_calculated <-& (simple_obj_ref_381_completed_)
          ptr_deref_382_trigger_ <-& (ptr_deref_382_base_address_calculated)
          addr_of_369_active_ o<-& (ptr_deref_382_active_)
          ptr_deref_382_trigger_ o<-& (ptr_deref_382_active_)
          ptr_deref_382_active_ o<-& (ptr_deref_382_completed_)
          assign_stmt_383_trigger_ <-& (ptr_deref_382_completed_)
          ptr_deref_382_active_ o<-& (assign_stmt_383_completed_)
          // iNsTr_11
          // implicit reference
          assign_stmt_383_completed_ <-& (assign_stmt_383_active_)
          // 			iNsTr_12 := (iNsTr_10 + iNsTr_11)
          //  file prog.linked.opt.aa, line 227
          $T[assign_stmt_388_trigger_] 
          $T[assign_stmt_388_active_] 
          $T[assign_stmt_388_completed_] 
          assign_stmt_388_active_ <-& (assign_stmt_388_trigger_)
          // (iNsTr_10 + iNsTr_11)
          $T[binary_387_trigger_] 
          $T[binary_387_active_] 
          $T[binary_387_completed_] 
          $T[binary_387_sample_start_] 
          $T[binary_387_sample_completed_] 
          $T[binary_387_update_start_] 
          $T[binary_387_update_completed_] 
          binary_387_sample_start_ <-& (binary_387_trigger_)
          binary_387_update_start_ <-& (binary_387_trigger_)
          binary_387_completed_ <-& (binary_387_update_completed_)
          binary_387_completed_ <-& (binary_387_sample_completed_)
          // iNsTr_10
          $T[simple_obj_ref_385_trigger_] 
          $T[simple_obj_ref_385_active_] 
          $T[simple_obj_ref_385_completed_] 
          // implicit reference
          simple_obj_ref_385_trigger_ <-& (assign_stmt_379_completed_)
          simple_obj_ref_385_completed_ <-& (simple_obj_ref_385_active_)
          simple_obj_ref_385_active_ <-& (simple_obj_ref_385_trigger_)
          // iNsTr_11
          $T[simple_obj_ref_386_trigger_] 
          $T[simple_obj_ref_386_active_] 
          $T[simple_obj_ref_386_completed_] 
          // implicit reference
          simple_obj_ref_386_trigger_ <-& (assign_stmt_383_completed_)
          simple_obj_ref_386_completed_ <-& (simple_obj_ref_386_active_)
          simple_obj_ref_386_active_ <-& (simple_obj_ref_386_trigger_)
          binary_387_trigger_ <-& (simple_obj_ref_385_completed_)
          binary_387_trigger_ <-& (simple_obj_ref_386_completed_)
          ;;[binary_387_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[binary_387_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          binary_387_sample_start_ &-> (binary_387_Sample)
          binary_387_sample_completed_ <-& (binary_387_Sample)
          binary_387_update_start_ &-> (binary_387_Update)
          binary_387_update_completed_ <-& (binary_387_Update)
          ptr_deref_378_active_ o<-& (binary_387_sample_completed_)
          ptr_deref_382_active_ o<-& (binary_387_sample_completed_)
          binary_387_sample_start_ o<-& (binary_387_sample_completed_)
          binary_387_update_start_ o<-& (binary_387_update_completed_)
          assign_stmt_388_trigger_ <-& (binary_387_completed_)
          binary_387_update_start_ o<-& (assign_stmt_388_completed_)
          // iNsTr_12
          // implicit reference
          assign_stmt_388_completed_ <-& (assign_stmt_388_active_)
          // 			->(scevgep3x_xi) := iNsTr_12
          //  file prog.linked.opt.aa, line 228
          $T[assign_stmt_392_trigger_] 
          $T[assign_stmt_392_active_] 
          $T[assign_stmt_392_completed_] 
          assign_stmt_392_active_ <-& (assign_stmt_392_trigger_)
          // iNsTr_12
          $T[simple_obj_ref_391_trigger_] 
          $T[simple_obj_ref_391_active_] 
          $T[simple_obj_ref_391_completed_] 
          // implicit reference
          simple_obj_ref_391_trigger_ <-& (assign_stmt_388_completed_)
          simple_obj_ref_391_completed_ <-& (simple_obj_ref_391_active_)
          simple_obj_ref_391_active_ <-& (simple_obj_ref_391_trigger_)
          assign_stmt_392_trigger_ <-& (simple_obj_ref_391_completed_)
          binary_387_update_start_ o<-& (assign_stmt_392_completed_)
          // ->(scevgep3x_xi)
          $T[ptr_deref_390_trigger_] 
          $T[ptr_deref_390_active_] 
          $T[ptr_deref_390_completed_] 
          $T[ptr_deref_390_base_address_calculated] 
          // scevgep3x_xi
          $T[simple_obj_ref_389_trigger_] 
          $T[simple_obj_ref_389_active_] 
          $T[simple_obj_ref_389_completed_] 
          // implicit reference
          simple_obj_ref_389_trigger_ <-& (assign_stmt_375_completed_)
          simple_obj_ref_389_completed_ <-& (simple_obj_ref_389_active_)
          simple_obj_ref_389_active_ <-& (simple_obj_ref_389_trigger_)
          $T[ptr_deref_390_word_address_calculated] 
          $T[ptr_deref_390_root_address_calculated] 
          $T[ptr_deref_390_base_address_resized] 
          ;;[ptr_deref_390_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_390_base_address_calculated &-> (ptr_deref_390_base_addr_resize)
          ptr_deref_390_base_address_resized <-& (ptr_deref_390_base_addr_resize)
          ;;[ptr_deref_390_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_390_base_address_resized &-> (ptr_deref_390_base_plus_offset)
          ptr_deref_390_root_address_calculated <-& (ptr_deref_390_base_plus_offset)
          ;;[ptr_deref_390_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_390_root_address_calculated &-> (ptr_deref_390_word_addrgen)
          ptr_deref_390_word_address_calculated <-& (ptr_deref_390_word_addrgen)
          ;;[ptr_deref_390_request] 
          {
            $T [split_req] $T [split_ack]
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_390_complete] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_390_trigger_ &-> (ptr_deref_390_request)
          ptr_deref_390_active_ <-& (ptr_deref_390_request)
          ptr_deref_390_active_ &-> (ptr_deref_390_complete)
          ptr_deref_390_completed_ <-& (ptr_deref_390_complete)
          ptr_deref_390_root_address_calculated o<-& (ptr_deref_390_active_)
          ptr_deref_390_trigger_ <-& (ptr_deref_390_word_address_calculated)
          ptr_deref_390_base_address_calculated <-& (simple_obj_ref_389_completed_)
          ptr_deref_390_trigger_ <-& (ptr_deref_390_base_address_calculated)
          addr_of_374_active_ o<-& (ptr_deref_390_active_)
          ptr_deref_390_trigger_ o<-& (ptr_deref_390_active_)
          ptr_deref_390_active_ o<-& (ptr_deref_390_completed_)
          ptr_deref_390_trigger_ <-& (assign_stmt_392_active_)
          assign_stmt_392_completed_ <-& (ptr_deref_390_completed_)
          ptr_deref_390_active_ o<-& (ptr_deref_390_completed_)
          // 			indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 229
          $T[assign_stmt_398_trigger_] 
          $T[assign_stmt_398_active_] 
          $T[assign_stmt_398_completed_] 
          assign_stmt_398_active_ <-& (assign_stmt_398_trigger_)
          // (indvarx_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[binary_397_trigger_] 
          $T[binary_397_active_] 
          $T[binary_397_completed_] 
          $T[binary_397_sample_start_] 
          $T[binary_397_sample_completed_] 
          $T[binary_397_update_start_] 
          $T[binary_397_update_completed_] 
          binary_397_sample_start_ <-& (binary_397_trigger_)
          binary_397_update_start_ <-& (binary_397_trigger_)
          binary_397_completed_ <-& (binary_397_update_completed_)
          binary_397_completed_ <-& (binary_397_sample_completed_)
          // indvarx_xi
          $T[simple_obj_ref_394_trigger_] 
          $T[simple_obj_ref_394_active_] 
          $T[simple_obj_ref_394_completed_] 
          // implicit reference
          simple_obj_ref_394_trigger_ <-& (phi_stmt_355_completed_)
          simple_obj_ref_394_completed_ <-& (simple_obj_ref_394_active_)
          simple_obj_ref_394_active_ <-& (simple_obj_ref_394_trigger_)
          binary_397_trigger_ <-& (simple_obj_ref_394_completed_)
          ;;[binary_397_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[binary_397_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          binary_397_sample_start_ &-> (binary_397_Sample)
          binary_397_sample_completed_ <-& (binary_397_Sample)
          binary_397_update_start_ &-> (binary_397_Update)
          binary_397_update_completed_ <-& (binary_397_Update)
          phi_stmt_355_enable_ o<-& (binary_397_sample_completed_)
          binary_397_sample_start_ o<-& (binary_397_sample_completed_)
          binary_397_update_start_ o<-& (binary_397_update_completed_)
          assign_stmt_398_trigger_ <-& (binary_397_completed_)
          binary_397_update_start_ o<-& (assign_stmt_398_completed_)
          // indvarx_xnextx_xi
          // implicit reference
          assign_stmt_398_completed_ <-& (assign_stmt_398_active_)
          // WAR dependency: Read: indvarx_xnextx_xi before Write: 			indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          binary_397_trigger_ <-& (phi_stmt_355_completed_)
          // WAR dependency: release  Read: indvarx_xnextx_xi with Write: 			indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          simple_obj_ref_357_trigger_ o<-& (assign_stmt_398_completed_)
          // 			exitcond1 := (indvarx_xnextx_xi == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
          //  file prog.linked.opt.aa, line 230
          $T[assign_stmt_404_trigger_] 
          $T[assign_stmt_404_active_] 
          $T[assign_stmt_404_completed_] 
          assign_stmt_404_active_ <-& (assign_stmt_404_trigger_)
          // (indvarx_xnextx_xi == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
          $T[binary_403_trigger_] 
          $T[binary_403_active_] 
          $T[binary_403_completed_] 
          $T[binary_403_sample_start_] 
          $T[binary_403_sample_completed_] 
          $T[binary_403_update_start_] 
          $T[binary_403_update_completed_] 
          binary_403_sample_start_ <-& (binary_403_trigger_)
          binary_403_update_start_ <-& (binary_403_trigger_)
          binary_403_completed_ <-& (binary_403_update_completed_)
          binary_403_completed_ <-& (binary_403_sample_completed_)
          // indvarx_xnextx_xi
          $T[simple_obj_ref_400_trigger_] 
          $T[simple_obj_ref_400_active_] 
          $T[simple_obj_ref_400_completed_] 
          // implicit reference
          simple_obj_ref_400_trigger_ <-& (assign_stmt_398_completed_)
          simple_obj_ref_400_completed_ <-& (simple_obj_ref_400_active_)
          simple_obj_ref_400_active_ <-& (simple_obj_ref_400_trigger_)
          binary_403_trigger_ <-& (simple_obj_ref_400_completed_)
          ;;[binary_403_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[binary_403_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          binary_403_sample_start_ &-> (binary_403_Sample)
          binary_403_sample_completed_ <-& (binary_403_Sample)
          binary_403_update_start_ &-> (binary_403_Update)
          binary_403_update_completed_ <-& (binary_403_Update)
          binary_397_update_start_ o<-& (binary_403_sample_completed_)
          binary_403_sample_start_ o<-& (binary_403_sample_completed_)
          binary_403_update_start_ o<-& (binary_403_update_completed_)
          assign_stmt_404_trigger_ <-& (binary_403_completed_)
          binary_403_update_start_ o<-& (assign_stmt_404_completed_)
          // exitcond1
          // implicit reference
          assign_stmt_404_completed_ <-& (assign_stmt_404_active_)
          $T[condition_evaluated] 
          // ( ~ exitcond1 )
          $T[unary_407_trigger_] 
          $T[unary_407_active_] 
          $T[unary_407_completed_] 
          $T[unary_407_sample_start_] 
          $T[unary_407_sample_completed_] 
          $T[unary_407_update_start_] 
          $T[unary_407_update_completed_] 
          unary_407_sample_start_ <-& (unary_407_trigger_)
          unary_407_update_start_ <-& (unary_407_trigger_)
          unary_407_completed_ <-& (unary_407_update_completed_)
          unary_407_completed_ <-& (unary_407_sample_completed_)
          // exitcond1
          $T[simple_obj_ref_406_trigger_] 
          $T[simple_obj_ref_406_active_] 
          $T[simple_obj_ref_406_completed_] 
          // implicit reference
          simple_obj_ref_406_trigger_ <-& (assign_stmt_404_completed_)
          simple_obj_ref_406_completed_ <-& (simple_obj_ref_406_active_)
          simple_obj_ref_406_active_ <-& (simple_obj_ref_406_trigger_)
          unary_407_trigger_ <-& (simple_obj_ref_406_completed_)
          ;;[unary_407_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[unary_407_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          unary_407_sample_start_ &-> (unary_407_Sample)
          unary_407_sample_completed_ <-& (unary_407_Sample)
          unary_407_update_start_ &-> (unary_407_Update)
          unary_407_update_completed_ <-& (unary_407_Update)
          binary_403_update_start_ o<-& (unary_407_active_)
          unary_407_sample_start_ o<-& (unary_407_sample_completed_)
          unary_407_update_start_ o<-& (unary_407_update_completed_)
          unary_407_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_0
          // leading and trailing sets are the same... no ring dependency
          // reenable across ring for memory space memory_space_1
          // leading and trailing sets are the same... no ring dependency
          // reenable across ring for memory space memory_space_2
          // leading and trailing sets are the same... no ring dependency
        }
        (back_edge_to_loop_body first_time_through_loop_body) // exported inputs
        ( condition_evaluated ) // exported outputs
        // do_while_stmt_353_loop_body
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_353__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_353_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_353__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_353_loop_body : condition_evaluated$bind do_while_stmt_353__entry__  => do_while_stmt_353_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_353_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_353__exit__)
      }
      do_while_stmt_353__entry__ |-> (do_while_stmt_353)
      do_while_stmt_353__exit__ <-| (do_while_stmt_353)
      ::[assign_stmt_424_to_assign_stmt_428] 
      {
        // 		scevgepx_xi5 := @(C[idxx_x01x_xi4])
        //  file prog.linked.opt.aa, line 239
        $T[assign_stmt_424_trigger_] 
        $T[assign_stmt_424_active_] 
        $T[assign_stmt_424_completed_] 
        assign_stmt_424_active_ <-& (assign_stmt_424_trigger_)
        // @(C[idxx_x01x_xi4])
        $T[addr_of_423_trigger_] 
        $T[addr_of_423_active_] 
        $T[addr_of_423_completed_] 
        $T[array_obj_ref_422_root_address_calculated] 
        $T[array_obj_ref_422_indices_scaled] 
        $T[array_obj_ref_422_offset_calculated] 
        $T[array_obj_ref_422_index_computed_0] 
        $T[array_obj_ref_422_index_resized_0] 
        // idxx_x01x_xi4
        $T[simple_obj_ref_421_trigger_] 
        $T[simple_obj_ref_421_active_] 
        $T[simple_obj_ref_421_completed_] 
        // implicit reference
        simple_obj_ref_421_completed_ <-& (simple_obj_ref_421_active_)
        simple_obj_ref_421_active_ <-& (simple_obj_ref_421_trigger_)
        array_obj_ref_422_index_computed_0 <-& (simple_obj_ref_421_completed_)
        ;;[array_obj_ref_422_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_422_index_computed_0 &-> (array_obj_ref_422_index_resize_0)
        array_obj_ref_422_index_resized_0 <-& (array_obj_ref_422_index_resize_0)
        ;;[array_obj_ref_422_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_422_index_resized_0 &-> (array_obj_ref_422_index_scale_0)
        array_obj_ref_422_indices_scaled <-& (array_obj_ref_422_index_scale_0)
        ;;[array_obj_ref_422_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_422_indices_scaled &-> (array_obj_ref_422_add_indices)
        array_obj_ref_422_offset_calculated <-& (array_obj_ref_422_add_indices)
        ;;[array_obj_ref_422_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_422_offset_calculated &-> (array_obj_ref_422_base_plus_offset)
        array_obj_ref_422_root_address_calculated <-& (array_obj_ref_422_base_plus_offset)
        ;;[addr_of_423_complete] 
        {
          $T [final_reg_req] $T [final_reg_ack]
        }
        addr_of_423_active_ <-& (addr_of_423_trigger_)
        addr_of_423_active_ <-& (array_obj_ref_422_root_address_calculated)
        addr_of_423_active_ &-> (addr_of_423_complete)
        addr_of_423_completed_ <-& (addr_of_423_complete)
        assign_stmt_424_trigger_ <-& (addr_of_423_completed_)
        // scevgepx_xi5
        // implicit reference
        assign_stmt_424_completed_ <-& (assign_stmt_424_active_)
        // 		iNsTr_16 := ->(scevgepx_xi5)
        //  file prog.linked.opt.aa, line 240
        $T[assign_stmt_428_trigger_] 
        $T[assign_stmt_428_active_] 
        $T[assign_stmt_428_completed_] 
        assign_stmt_428_active_ <-& (assign_stmt_428_trigger_)
        // ->(scevgepx_xi5)
        $T[ptr_deref_427_trigger_] 
        $T[ptr_deref_427_active_] 
        $T[ptr_deref_427_completed_] 
        $T[ptr_deref_427_base_address_calculated] 
        // scevgepx_xi5
        $T[simple_obj_ref_426_trigger_] 
        $T[simple_obj_ref_426_active_] 
        $T[simple_obj_ref_426_completed_] 
        // implicit reference
        simple_obj_ref_426_trigger_ <-& (assign_stmt_424_completed_)
        simple_obj_ref_426_completed_ <-& (simple_obj_ref_426_active_)
        simple_obj_ref_426_active_ <-& (simple_obj_ref_426_trigger_)
        $T[ptr_deref_427_word_address_calculated] 
        $T[ptr_deref_427_root_address_calculated] 
        $T[ptr_deref_427_base_address_resized] 
        ;;[ptr_deref_427_base_addr_resize] 
        {
          $T [base_resize_req] $T [base_resize_ack]
        }
        ptr_deref_427_base_address_calculated &-> (ptr_deref_427_base_addr_resize)
        ptr_deref_427_base_address_resized <-& (ptr_deref_427_base_addr_resize)
        ;;[ptr_deref_427_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        ptr_deref_427_base_address_resized &-> (ptr_deref_427_base_plus_offset)
        ptr_deref_427_root_address_calculated <-& (ptr_deref_427_base_plus_offset)
        ;;[ptr_deref_427_word_addrgen] 
        {
          $T [root_register_req] $T [root_register_ack]
        }
        ptr_deref_427_root_address_calculated &-> (ptr_deref_427_word_addrgen)
        ptr_deref_427_word_address_calculated <-& (ptr_deref_427_word_addrgen)
        ;;[ptr_deref_427_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[ptr_deref_427_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        ptr_deref_427_trigger_ &-> (ptr_deref_427_request)
        ptr_deref_427_active_ <-& (ptr_deref_427_request)
        ptr_deref_427_active_ &-> (ptr_deref_427_complete)
        ptr_deref_427_completed_ <-& (ptr_deref_427_complete)
        ptr_deref_427_trigger_ <-& (ptr_deref_427_word_address_calculated)
        ptr_deref_427_base_address_calculated <-& (simple_obj_ref_426_completed_)
        ptr_deref_427_trigger_ <-& (ptr_deref_427_base_address_calculated)
        assign_stmt_428_trigger_ <-& (ptr_deref_427_completed_)
        // iNsTr_16
        // implicit reference
        assign_stmt_428_completed_ <-& (assign_stmt_428_active_)
        // load-store dependencies..
      }
      // assign_stmt_424_to_assign_stmt_428
      assign_stmt_424_to_assign_stmt_428__entry__ |-> (assign_stmt_424_to_assign_stmt_428)
      assign_stmt_424_to_assign_stmt_428__exit__ <-| (assign_stmt_424_to_assign_stmt_428)
      ::[assign_stmt_431] 
      {
        // 		out_data_pipe := iNsTr_16
        //  file prog.linked.opt.aa, line 241
        $T[assign_stmt_431_trigger_] 
        $T[assign_stmt_431_active_] 
        $T[assign_stmt_431_completed_] 
        assign_stmt_431_active_ <-& (assign_stmt_431_trigger_)
        // iNsTr_16
        $T[simple_obj_ref_430_trigger_] 
        $T[simple_obj_ref_430_active_] 
        $T[simple_obj_ref_430_completed_] 
        // implicit reference
        simple_obj_ref_430_completed_ <-& (simple_obj_ref_430_active_)
        simple_obj_ref_430_active_ <-& (simple_obj_ref_430_trigger_)
        assign_stmt_431_trigger_ <-& (simple_obj_ref_430_completed_)
        // out_data_pipe
        $T[simple_obj_ref_429_trigger_] 
        $T[simple_obj_ref_429_active_] 
        $T[simple_obj_ref_429_completed_] 
        ;;[simple_obj_ref_429_complete] 
        {
          // pipe write out_data_pipe
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_429_trigger_ &-> (simple_obj_ref_429_complete)
        simple_obj_ref_429_active_ <-& (simple_obj_ref_429_complete)
        simple_obj_ref_429_completed_ <-& (simple_obj_ref_429_active_)
        simple_obj_ref_429_trigger_ <-& (assign_stmt_431_active_)
        assign_stmt_431_completed_ <-& (simple_obj_ref_429_completed_)
        // barrier: 		out_data_pipe := iNsTr_16
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data_pipe
      }
      // assign_stmt_431
      assign_stmt_431__entry__ |-> (assign_stmt_431)
      assign_stmt_431__exit__ <-| (assign_stmt_431)
      ::[assign_stmt_437_to_assign_stmt_443] 
      {
        // 		iNsTr_19 := (idxx_x01x_xi4 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        //  file prog.linked.opt.aa, line 242
        $T[assign_stmt_437_trigger_] 
        $T[assign_stmt_437_active_] 
        $T[assign_stmt_437_completed_] 
        assign_stmt_437_active_ <-& (assign_stmt_437_trigger_)
        // (idxx_x01x_xi4 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
        $T[binary_436_trigger_] 
        $T[binary_436_active_] 
        $T[binary_436_completed_] 
        $T[binary_436_sample_start_] 
        $T[binary_436_sample_completed_] 
        $T[binary_436_update_start_] 
        $T[binary_436_update_completed_] 
        binary_436_sample_start_ <-& (binary_436_trigger_)
        binary_436_update_start_ <-& (binary_436_trigger_)
        binary_436_completed_ <-& (binary_436_update_completed_)
        binary_436_completed_ <-& (binary_436_sample_completed_)
        // idxx_x01x_xi4
        $T[simple_obj_ref_433_trigger_] 
        $T[simple_obj_ref_433_active_] 
        $T[simple_obj_ref_433_completed_] 
        // implicit reference
        simple_obj_ref_433_completed_ <-& (simple_obj_ref_433_active_)
        simple_obj_ref_433_active_ <-& (simple_obj_ref_433_trigger_)
        binary_436_trigger_ <-& (simple_obj_ref_433_completed_)
        ;;[binary_436_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_436_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_436_sample_start_ &-> (binary_436_Sample)
        binary_436_sample_completed_ <-& (binary_436_Sample)
        binary_436_update_start_ &-> (binary_436_Update)
        binary_436_update_completed_ <-& (binary_436_Update)
        assign_stmt_437_trigger_ <-& (binary_436_completed_)
        // iNsTr_19
        // implicit reference
        assign_stmt_437_completed_ <-& (assign_stmt_437_active_)
        // 		exitcond := (iNsTr_19 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
        //  file prog.linked.opt.aa, line 243
        $T[assign_stmt_443_trigger_] 
        $T[assign_stmt_443_active_] 
        $T[assign_stmt_443_completed_] 
        assign_stmt_443_active_ <-& (assign_stmt_443_trigger_)
        // (iNsTr_19 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
        $T[binary_442_trigger_] 
        $T[binary_442_active_] 
        $T[binary_442_completed_] 
        $T[binary_442_sample_start_] 
        $T[binary_442_sample_completed_] 
        $T[binary_442_update_start_] 
        $T[binary_442_update_completed_] 
        binary_442_sample_start_ <-& (binary_442_trigger_)
        binary_442_update_start_ <-& (binary_442_trigger_)
        binary_442_completed_ <-& (binary_442_update_completed_)
        binary_442_completed_ <-& (binary_442_sample_completed_)
        // iNsTr_19
        $T[simple_obj_ref_439_trigger_] 
        $T[simple_obj_ref_439_active_] 
        $T[simple_obj_ref_439_completed_] 
        // implicit reference
        simple_obj_ref_439_trigger_ <-& (assign_stmt_437_completed_)
        simple_obj_ref_439_completed_ <-& (simple_obj_ref_439_active_)
        simple_obj_ref_439_active_ <-& (simple_obj_ref_439_trigger_)
        binary_442_trigger_ <-& (simple_obj_ref_439_completed_)
        ;;[binary_442_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[binary_442_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        binary_442_sample_start_ &-> (binary_442_Sample)
        binary_442_sample_completed_ <-& (binary_442_Sample)
        binary_442_update_start_ &-> (binary_442_Update)
        binary_442_update_completed_ <-& (binary_442_Update)
        assign_stmt_443_trigger_ <-& (binary_442_completed_)
        // exitcond
        // implicit reference
        assign_stmt_443_completed_ <-& (assign_stmt_443_active_)
        // load-store dependencies..
      }
      // assign_stmt_437_to_assign_stmt_443
      assign_stmt_437_to_assign_stmt_443__entry__ |-> (assign_stmt_437_to_assign_stmt_443)
      assign_stmt_437_to_assign_stmt_443__exit__ <-| (assign_stmt_437_to_assign_stmt_443)
      // if-statement  
      //  file prog.linked.opt.aa, line 244
      ;;[if_stmt_444_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_444__entry__ |-> (if_stmt_444_dead_link)
      if_stmt_444__exit__ <-| (if_stmt_444_dead_link)
      ;;[if_stmt_444_eval_test] 
      {
        // test expression evaluate and trigger branch 
        $T [branch_req] 
      }
      if_stmt_444__entry__ |-> (if_stmt_444_eval_test)
      $P [simple_obj_ref_445_place]
      simple_obj_ref_445_place <-| (if_stmt_444_eval_test)
      ;;[if_stmt_444_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_444_else_link] 
      {
        $T [else_choice_transition] 
      }
      simple_obj_ref_445_place |-> (if_stmt_444_if_link if_stmt_444_else_link)
      $P [x_vectorSum_x_xexit_sendResultx_xexitx_xloopexit]
      x_vectorSum_x_xexit_sendResultx_xexitx_xloopexit <-| (if_stmt_444_if_link)
      $P [x_vectorSum_x_xexit_x_vectorSum_x_xexit]
      x_vectorSum_x_xexit_x_vectorSum_x_xexit <-| (if_stmt_444_else_link)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 190
      //---------------------   merge statement  file prog.linked.opt.aa, line 190  --------------------------
      ||[x_vectorSum_x_xexit_sendResultx_xexitx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      x_vectorSum_x_xexit_sendResultx_xexitx_xloopexit |-> (x_vectorSum_x_xexit_sendResultx_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_284_PhiReqMerge] 
      merge_stmt_284_PhiReqMerge <-| ( x_vectorSum_x_xexit_sendResultx_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_284_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_284_PhiReqMerge |-> (merge_stmt_284_PhiAck)
      merge_stmt_284__exit__  <-| (merge_stmt_284_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 190  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 193
      //---------------------   merge statement  file prog.linked.opt.aa, line 193  --------------------------
      ||[bb_0_sendResultx_xexit_PhiReq] 
      {
        ;;[phi_stmt_287] 
        {
          ||[phi_stmt_287_sources] 
          {
            // sources for 			$phi idxx_x01x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_sendResultx_xexit			  ($cast ($uint<32>) idxx_x01x_xix_xbe ) $on sendResultx_xexitx_xbackedge_sendResultx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) idxx_x01x_xix_xbe )
            ;;[type_cast_293] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_287_req] 
        }
      }
      bb_0_sendResultx_xexit |-> (bb_0_sendResultx_xexit_PhiReq)
      ||[sendResultx_xexitx_xbackedge_sendResultx_xexit_PhiReq] 
      {
        ;;[phi_stmt_287] 
        {
          ||[phi_stmt_287_sources] 
          {
            // sources for 			$phi idxx_x01x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_sendResultx_xexit			  ($cast ($uint<32>) idxx_x01x_xix_xbe ) $on sendResultx_xexitx_xbackedge_sendResultx_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) idxx_x01x_xix_xbe )
            ;;[type_cast_293] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_287_req] 
        }
      }
      sendResultx_xexitx_xbackedge_sendResultx_xexit |-> (sendResultx_xexitx_xbackedge_sendResultx_xexit_PhiReq)
      $P [merge_stmt_286_PhiReqMerge] 
      merge_stmt_286_PhiReqMerge <-| ( bb_0_sendResultx_xexit_PhiReq  sendResultx_xexitx_xbackedge_sendResultx_xexit_PhiReq )
      ||[merge_stmt_286_PhiAck] 
      {
        $T [phi_stmt_287_ack] 
      }
      merge_stmt_286_PhiReqMerge |-> (merge_stmt_286_PhiAck)
      merge_stmt_286__exit__  <-| (merge_stmt_286_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 193  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 208
      ;;[merge_stmt_334_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_334__entry__ |-> (merge_stmt_334_dead_link)
      merge_stmt_334__exit__ <-| (merge_stmt_334_dead_link)
      //---------------------   merge statement  file prog.linked.opt.aa, line 208  --------------------------
      ||[sendResultx_xexit_sendResultx_xexitx_xbackedge_PhiReq] 
      {
        ;;[phi_stmt_335] 
        {
          ||[phi_stmt_335_sources] 
          {
            // sources for 			$phi idxx_x01x_xix_xbe := 			  ($cast ($uint<32>) iNsTr_5 ) $on sendResultx_xexit_sendResultx_xexitx_xbackedge			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_5 )
            ;;[type_cast_338] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_335_req] 
        }
      }
      sendResultx_xexit_sendResultx_xexitx_xbackedge |-> (sendResultx_xexit_sendResultx_xexitx_xbackedge_PhiReq)
      ||[sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge_PhiReq] 
      {
        ;;[phi_stmt_335] 
        {
          ||[phi_stmt_335_sources] 
          {
            // sources for 			$phi idxx_x01x_xix_xbe := 			  ($cast ($uint<32>) iNsTr_5 ) $on sendResultx_xexit_sendResultx_xexitx_xbackedge			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_5 )
            ;;[type_cast_338] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_335_req] 
        }
      }
      sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge |-> (sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge_PhiReq)
      $P [merge_stmt_334_PhiReqMerge] 
      merge_stmt_334_PhiReqMerge <-| ( sendResultx_xexit_sendResultx_xexitx_xbackedge_PhiReq  sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge_PhiReq )
      ||[merge_stmt_334_PhiAck] 
      {
        $T [phi_stmt_335_ack] 
      }
      merge_stmt_334_PhiReqMerge |-> (merge_stmt_334_PhiAck)
      merge_stmt_334__exit__  <-| (merge_stmt_334_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 208  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 212
      //---------------------   merge statement  file prog.linked.opt.aa, line 212  --------------------------
      ||[sendResultx_xexit_getDatax_xexitx_xpreheader_PhiReq] 
      {
        // no phi statements in merge..
      }
      sendResultx_xexit_getDatax_xexitx_xpreheader |-> (sendResultx_xexit_getDatax_xexitx_xpreheader_PhiReq)
      $P [merge_stmt_344_PhiReqMerge] 
      merge_stmt_344_PhiReqMerge <-| ( sendResultx_xexit_getDatax_xexitx_xpreheader_PhiReq )
      ||[merge_stmt_344_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_344_PhiReqMerge |-> (merge_stmt_344_PhiAck)
      merge_stmt_344__exit__  <-| (merge_stmt_344_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 212  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 215
      //---------------------   merge statement  file prog.linked.opt.aa, line 215  --------------------------
      ||[getDatax_xexitx_xpreheader_getDatax_xexit_PhiReq] 
      {
        ;;[phi_stmt_347] 
        {
          ||[phi_stmt_347_sources] 
          {
            // sources for 			$phi indvarx_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on getDatax_xexitx_xpreheader_getDatax_xexit // type of target is $uint<32>
          }
          $T [phi_stmt_347_req] 
        }
      }
      getDatax_xexitx_xpreheader_getDatax_xexit |-> (getDatax_xexitx_xpreheader_getDatax_xexit_PhiReq)
      $P [merge_stmt_346_PhiReqMerge] 
      merge_stmt_346_PhiReqMerge <-| ( getDatax_xexitx_xpreheader_getDatax_xexit_PhiReq )
      ||[merge_stmt_346_PhiAck] 
      {
        $T [phi_stmt_347_ack] 
      }
      merge_stmt_346_PhiReqMerge |-> (merge_stmt_346_PhiAck)
      merge_stmt_346__exit__  <-| (merge_stmt_346_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 215  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 233
      //---------------------   merge statement  file prog.linked.opt.aa, line 233  --------------------------
      ||[getDatax_xexit_x_vectorSum_x_xexitx_xloopexit_PhiReq] 
      {
        // no phi statements in merge..
      }
      getDatax_xexit_x_vectorSum_x_xexitx_xloopexit |-> (getDatax_xexit_x_vectorSum_x_xexitx_xloopexit_PhiReq)
      $P [merge_stmt_409_PhiReqMerge] 
      merge_stmt_409_PhiReqMerge <-| ( getDatax_xexit_x_vectorSum_x_xexitx_xloopexit_PhiReq )
      ||[merge_stmt_409_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_409_PhiReqMerge |-> (merge_stmt_409_PhiAck)
      merge_stmt_409__exit__  <-| (merge_stmt_409_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 233  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 236
      //---------------------   merge statement  file prog.linked.opt.aa, line 236  --------------------------
      ||[x_vectorSum_x_xexit_x_vectorSum_x_xexit_PhiReq] 
      {
        ;;[phi_stmt_412] 
        {
          ||[phi_stmt_412_sources] 
          {
            // sources for 			$phi idxx_x01x_xi4 := 			  ($cast ($uint<32>) iNsTr_19 ) $on x_vectorSum_x_xexit_x_vectorSum_x_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_19 )
            ;;[type_cast_415] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_412_req] 
        }
      }
      x_vectorSum_x_xexit_x_vectorSum_x_xexit |-> (x_vectorSum_x_xexit_x_vectorSum_x_xexit_PhiReq)
      ||[x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit_PhiReq] 
      {
        ;;[phi_stmt_412] 
        {
          ||[phi_stmt_412_sources] 
          {
            // sources for 			$phi idxx_x01x_xi4 := 			  ($cast ($uint<32>) iNsTr_19 ) $on x_vectorSum_x_xexit_x_vectorSum_x_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit // type of target is $uint<32>
            // ($cast ($uint<32>) iNsTr_19 )
            ;;[type_cast_415] 
            {
              // type-cast expression
              $T [req] $T [ack] //  type-conversion.. 
            }
          }
          $T [phi_stmt_412_req] 
        }
      }
      x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit |-> (x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit_PhiReq)
      $P [merge_stmt_411_PhiReqMerge] 
      merge_stmt_411_PhiReqMerge <-| ( x_vectorSum_x_xexit_x_vectorSum_x_xexit_PhiReq  x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit_PhiReq )
      ||[merge_stmt_411_PhiAck] 
      {
        $T [phi_stmt_412_ack] 
      }
      merge_stmt_411_PhiReqMerge |-> (merge_stmt_411_PhiAck)
      merge_stmt_411__exit__  <-| (merge_stmt_411_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 236  --------------------------
      bb_0_sendResultx_xexit <-| (branch_block_stmt_282__entry__)
      sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge <-| (merge_stmt_284__exit__)
      assign_stmt_299_to_assign_stmt_304__entry__ <-| (merge_stmt_286__exit__)
      assign_stmt_307__entry__ <-| (assign_stmt_299_to_assign_stmt_304__exit__)
      assign_stmt_311_to_assign_stmt_327__entry__ <-| (assign_stmt_307__exit__)
      if_stmt_328__entry__ <-| (assign_stmt_311_to_assign_stmt_327__exit__)
      merge_stmt_334__entry__ <-| (if_stmt_328__exit__)
      sendResultx_xexitx_xbackedge_sendResultx_xexit <-| (merge_stmt_334__exit__)
      getDatax_xexitx_xpreheader_getDatax_xexit <-| (merge_stmt_344__exit__)
      do_while_stmt_353__entry__ <-| (merge_stmt_346__exit__)
      getDatax_xexit_x_vectorSum_x_xexitx_xloopexit <-| (do_while_stmt_353__exit__)
      x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit <-| (merge_stmt_409__exit__)
      assign_stmt_424_to_assign_stmt_428__entry__ <-| (merge_stmt_411__exit__)
      assign_stmt_431__entry__ <-| (assign_stmt_424_to_assign_stmt_428__exit__)
      assign_stmt_437_to_assign_stmt_443__entry__ <-| (assign_stmt_431__exit__)
      if_stmt_444__entry__ <-| (assign_stmt_437_to_assign_stmt_443__exit__)
      if_stmt_444__exit__ |-> (branch_block_stmt_282__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 190
    // constant-object-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 193
    // constant-object-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 208
    // constant-object-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 212
    // constant-object-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 215
    // constant-object-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 219
    // constant-object-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 233
    // constant-object-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 236
    // constant-object-declarations for block %vectorSum%body
    //  file prog.linked.opt.aa, line 187
    // constant-object-declarations for block %vectorSum
    //  file prog.linked.opt.aa, line 182
    // constant-declarations for block %vectorSum%body
    //  file prog.linked.opt.aa, line 187
    // constant-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 190
    // constant-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 193
    // constant-declarations for phi:  			$phi idxx_x01x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_sendResultx_xexit			  ($cast ($uint<32>) idxx_x01x_xix_xbe ) $on sendResultx_xexitx_xbackedge_sendResultx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 194
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_291_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // @(A[idxx_x01x_xi])
    $constant $W[array_obj_ref_297_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_297_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // @(B[idxx_x01x_xi])
    $constant $W[array_obj_ref_302_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_302_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // ->(scevgepx_xi)
    $constant $W[ptr_deref_309_word_offset_0] : $int<7> := _b0000000// 0
    // ->(scevgep2x_xi)
    $constant $W[ptr_deref_313_word_offset_0] : $int<7> := _b0000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_319_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000001000000  )
    $constant $W[type_cast_325_wire_constant] : $int<32> := _b00000000000000000000000001000000// 64
    // if-statement  
    //  file prog.linked.opt.aa, line 203
    // constant-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 208
    // constant-declarations for phi:  			$phi idxx_x01x_xix_xbe := 			  ($cast ($uint<32>) iNsTr_5 ) $on sendResultx_xexit_sendResultx_xexitx_xbackedge			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 209
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_341_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // constant-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 212
    // constant-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 215
    // constant-declarations for phi:  			$phi indvarx_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on getDatax_xexitx_xpreheader_getDatax_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 216
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_351_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 218
    // constant-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 219
    // constant-declarations for phi:  			$phi indvarx_xi := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on $loopback			  indvarx_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 220
    // @(A[indvarx_xi])
    $constant $W[array_obj_ref_363_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_363_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // @(B[indvarx_xi])
    $constant $W[array_obj_ref_368_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_368_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // @(C[indvarx_xi])
    $constant $W[array_obj_ref_373_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_373_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // ->(scevgepx_xi1)
    $constant $W[ptr_deref_378_word_offset_0] : $int<7> := _b0000000// 0
    // ->(scevgep2x_xi2)
    $constant $W[ptr_deref_382_word_offset_0] : $int<7> := _b0000000// 0
    // ->(scevgep3x_xi)
    $constant $W[ptr_deref_390_word_offset_0] : $int<7> := _b0000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_396_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000001000000  )
    $constant $W[type_cast_402_wire_constant] : $int<32> := _b00000000000000000000000001000000// 64
    // constant-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 233
    // constant-declarations for block %vectorSum%body%
    //  file prog.linked.opt.aa, line 236
    // constant-declarations for phi:  			$phi idxx_x01x_xi4 := 			  ($cast ($uint<32>) iNsTr_19 ) $on x_vectorSum_x_xexit_x_vectorSum_x_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 237
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_418_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // @(C[idxx_x01x_xi4])
    $constant $W[array_obj_ref_422_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_422_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // ->(scevgepx_xi5)
    $constant $W[ptr_deref_427_word_offset_0] : $int<7> := _b0000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_435_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000001000000  )
    $constant $W[type_cast_441_wire_constant] : $int<32> := _b00000000000000000000000001000000// 64
    // if-statement  
    //  file prog.linked.opt.aa, line 244
    // block %vectorSum%body
    //  file prog.linked.opt.aa, line 187
    // merge-statement  
    //  file prog.linked.opt.aa, line 193
    // 			$phi idxx_x01x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_sendResultx_xexit			  ($cast ($uint<32>) idxx_x01x_xix_xbe ) $on sendResultx_xexitx_xbackedge_sendResultx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 194
    // ($cast ($uint<32>) idxx_x01x_xix_xbe )
    $intermediate $W[type_cast_293_wire] : $int<32>
    // idxx_x01x_xi
    $W[idxx_x01x_xi_287] : $int<32>
    // 		scevgepx_xi := @(A[idxx_x01x_xi])
    //  file prog.linked.opt.aa, line 196
    // @(A[idxx_x01x_xi])
    $intermediate $W[simple_obj_ref_296_resized] : $int<7>
    $intermediate $W[simple_obj_ref_296_scaled] : $int<7>
    $intermediate $W[array_obj_ref_297_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_297_root_address] : $int<7>
    // scevgepx_xi
    $W[scevgepx_xi_299] : $int<32>
    // 		scevgep2x_xi := @(B[idxx_x01x_xi])
    //  file prog.linked.opt.aa, line 197
    // @(B[idxx_x01x_xi])
    $intermediate $W[simple_obj_ref_301_resized] : $int<7>
    $intermediate $W[simple_obj_ref_301_scaled] : $int<7>
    $intermediate $W[array_obj_ref_302_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_302_root_address] : $int<7>
    // scevgep2x_xi
    $W[scevgep2x_xi_304] : $int<32>
    // 		iNsTr_2 := in_data_pipe
    //  file prog.linked.opt.aa, line 198
    // iNsTr_2
    $W[iNsTr_2_307] : $float<8,23>
    // 		->(scevgepx_xi) := iNsTr_2
    //  file prog.linked.opt.aa, line 199
    // ->(scevgepx_xi)
    $intermediate $W[ptr_deref_309_wire] : $float<8,23>
    $intermediate $W[ptr_deref_309_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_309_root_address] : $int<7>
    $W[ptr_deref_309_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_309_data_0] : $int<32>
    // 		->(scevgep2x_xi) := iNsTr_2
    //  file prog.linked.opt.aa, line 200
    // ->(scevgep2x_xi)
    $intermediate $W[ptr_deref_313_wire] : $float<8,23>
    $intermediate $W[ptr_deref_313_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_313_root_address] : $int<7>
    $W[ptr_deref_313_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_313_data_0] : $int<32>
    // 		iNsTr_5 := (idxx_x01x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 201
    // iNsTr_5
    $W[iNsTr_5_321] : $int<32>
    // 		exitcondx_xi := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 202
    // exitcondx_xi
    $W[exitcondx_xi_327] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 203
    // merge-statement  
    //  file prog.linked.opt.aa, line 208
    // 			$phi idxx_x01x_xix_xbe := 			  ($cast ($uint<32>) iNsTr_5 ) $on sendResultx_xexit_sendResultx_xexitx_xbackedge			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 209
    // ($cast ($uint<32>) iNsTr_5 )
    $intermediate $W[type_cast_338_wire] : $int<32>
    // idxx_x01x_xix_xbe
    $W[idxx_x01x_xix_xbe_335] : $int<32>
    // merge-statement  
    //  file prog.linked.opt.aa, line 215
    // 			$phi indvarx_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on getDatax_xexitx_xpreheader_getDatax_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 216
    // indvarx_xi_at_entry
    $W[indvarx_xi_at_entry_347] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 218
    // ( ~ exitcond1 )
    $intermediate $W[unary_407_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 219
    // 			$phi indvarx_xi := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on $loopback			  indvarx_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 220
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    $intermediate $W[type_cast_358_wire] : $int<32>
    // indvarx_xi
    $W[indvarx_xi_355] : $int<32>
    // 			scevgepx_xi1 := @(A[indvarx_xi])
    //  file prog.linked.opt.aa, line 222
    // @(A[indvarx_xi])
    $intermediate $W[simple_obj_ref_362_resized] : $int<7>
    $intermediate $W[simple_obj_ref_362_scaled] : $int<7>
    $intermediate $W[array_obj_ref_363_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_363_root_address] : $int<7>
    // scevgepx_xi1
    $W[scevgepx_xi1_365] : $int<32>
    // 			scevgep2x_xi2 := @(B[indvarx_xi])
    //  file prog.linked.opt.aa, line 223
    // @(B[indvarx_xi])
    $intermediate $W[simple_obj_ref_367_resized] : $int<7>
    $intermediate $W[simple_obj_ref_367_scaled] : $int<7>
    $intermediate $W[array_obj_ref_368_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_368_root_address] : $int<7>
    // scevgep2x_xi2
    $W[scevgep2x_xi2_370] : $int<32>
    // 			scevgep3x_xi := @(C[indvarx_xi])
    //  file prog.linked.opt.aa, line 224
    // @(C[indvarx_xi])
    $intermediate $W[simple_obj_ref_372_resized] : $int<7>
    $intermediate $W[simple_obj_ref_372_scaled] : $int<7>
    $intermediate $W[array_obj_ref_373_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_373_root_address] : $int<7>
    // scevgep3x_xi
    $W[scevgep3x_xi_375] : $int<32>
    // 			iNsTr_10 := ->(scevgepx_xi1)
    //  file prog.linked.opt.aa, line 225
    // ->(scevgepx_xi1)
    $intermediate $W[ptr_deref_378_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_378_root_address] : $int<7>
    $W[ptr_deref_378_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_378_data_0] : $int<32>
    // iNsTr_10
    $W[iNsTr_10_379] : $float<8,23>
    // 			iNsTr_11 := ->(scevgep2x_xi2)
    //  file prog.linked.opt.aa, line 226
    // ->(scevgep2x_xi2)
    $intermediate $W[ptr_deref_382_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_382_root_address] : $int<7>
    $W[ptr_deref_382_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_382_data_0] : $int<32>
    // iNsTr_11
    $W[iNsTr_11_383] : $float<8,23>
    // 			iNsTr_12 := (iNsTr_10 + iNsTr_11)
    //  file prog.linked.opt.aa, line 227
    // iNsTr_12
    $W[iNsTr_12_388] : $float<8,23>
    // 			->(scevgep3x_xi) := iNsTr_12
    //  file prog.linked.opt.aa, line 228
    // ->(scevgep3x_xi)
    $intermediate $W[ptr_deref_390_wire] : $float<8,23>
    $intermediate $W[ptr_deref_390_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_390_root_address] : $int<7>
    $W[ptr_deref_390_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_390_data_0] : $int<32>
    // 			indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 229
    // indvarx_xnextx_xi
    $W[indvarx_xnextx_xi_398] : $int<32>
    // 			exitcond1 := (indvarx_xnextx_xi == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 230
    // exitcond1
    $W[exitcond1_404] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 236
    // 			$phi idxx_x01x_xi4 := 			  ($cast ($uint<32>) iNsTr_19 ) $on x_vectorSum_x_xexit_x_vectorSum_x_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 237
    // ($cast ($uint<32>) iNsTr_19 )
    $intermediate $W[type_cast_415_wire] : $int<32>
    // idxx_x01x_xi4
    $W[idxx_x01x_xi4_412] : $int<32>
    // 		scevgepx_xi5 := @(C[idxx_x01x_xi4])
    //  file prog.linked.opt.aa, line 239
    // @(C[idxx_x01x_xi4])
    $intermediate $W[simple_obj_ref_421_resized] : $int<7>
    $intermediate $W[simple_obj_ref_421_scaled] : $int<7>
    $intermediate $W[array_obj_ref_422_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_422_root_address] : $int<7>
    // scevgepx_xi5
    $W[scevgepx_xi5_424] : $int<32>
    // 		iNsTr_16 := ->(scevgepx_xi5)
    //  file prog.linked.opt.aa, line 240
    // ->(scevgepx_xi5)
    $intermediate $W[ptr_deref_427_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_427_root_address] : $int<7>
    $W[ptr_deref_427_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_427_data_0] : $int<32>
    // iNsTr_16
    $W[iNsTr_16_428] : $float<8,23>
    // 		out_data_pipe := iNsTr_16
    //  file prog.linked.opt.aa, line 241
    // out_data_pipe
    // 		iNsTr_19 := (idxx_x01x_xi4 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 242
    // iNsTr_19
    $W[iNsTr_19_437] : $int<32>
    // 		exitcond := (iNsTr_19 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 243
    // exitcond
    $W[exitcond_443] : $int<1>
    // if statement  
    //  file prog.linked.opt.aa, line 244
    // datapath-instances for block %vectorSum%body
    //  file prog.linked.opt.aa, line 187
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 193
    // 			$phi idxx_x01x_xi := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bb_0_sendResultx_xexit			  ($cast ($uint<32>) idxx_x01x_xix_xbe ) $on sendResultx_xexitx_xbackedge_sendResultx_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 194
    // ($cast ($uint<32>) idxx_x01x_xix_xbe )
    := [type_cast_293_inst] (idxx_x01x_xix_xbe_335) (type_cast_293_wire)  
    $phi [phi_stmt_287] (type_cast_291_wire_constant type_cast_293_wire) ( idxx_x01x_xi_287 )
    // 		scevgepx_xi := @(A[idxx_x01x_xi])
    //  file prog.linked.opt.aa, line 196
    &/ [array_obj_ref_297_index_0_resize] (idxx_x01x_xi_287) (simple_obj_ref_296_resized) 
    &/ [array_obj_ref_297_index_0_rename] (simple_obj_ref_296_resized) (simple_obj_ref_296_scaled) 
    &/ [array_obj_ref_297_offset_inst] (simple_obj_ref_296_scaled) (array_obj_ref_297_final_offset) 
    &/ [array_obj_ref_297_root_address_inst] (array_obj_ref_297_final_offset) (array_obj_ref_297_root_address) 
    := [addr_of_298_final_reg] (array_obj_ref_297_root_address) (scevgepx_xi_299)  
    // 		scevgep2x_xi := @(B[idxx_x01x_xi])
    //  file prog.linked.opt.aa, line 197
    &/ [array_obj_ref_302_index_0_resize] (idxx_x01x_xi_287) (simple_obj_ref_301_resized) 
    &/ [array_obj_ref_302_index_0_rename] (simple_obj_ref_301_resized) (simple_obj_ref_301_scaled) 
    &/ [array_obj_ref_302_offset_inst] (simple_obj_ref_301_scaled) (array_obj_ref_302_final_offset) 
    &/ [array_obj_ref_302_root_address_inst] (array_obj_ref_302_final_offset) (array_obj_ref_302_root_address) 
    := [addr_of_303_final_reg] (array_obj_ref_302_root_address) (scevgep2x_xi_304)  
    // 		iNsTr_2 := in_data_pipe
    //  file prog.linked.opt.aa, line 198
    // in_data_pipe
    $ioport $in [simple_obj_ref_306_inst] (in_data_pipe) (iNsTr_2_307) 
    // 		->(scevgepx_xi) := iNsTr_2
    //  file prog.linked.opt.aa, line 199
    // ->(scevgepx_xi)
    &/ [ptr_deref_309_base_resize] (scevgepx_xi_299) (ptr_deref_309_resized_base_address) 
    &/ [ptr_deref_309_root_address_inst] (ptr_deref_309_resized_base_address) (ptr_deref_309_root_address) 
    &/ [ptr_deref_309_addr_0] (ptr_deref_309_root_address) (ptr_deref_309_word_address_0) 
    $store [ptr_deref_309_store_0] $to memory_space_0 (ptr_deref_309_word_address_0 ptr_deref_309_data_0) 
    &/ [ptr_deref_309_gather_scatter] (iNsTr_2_307) (ptr_deref_309_data_0) 
    // 		->(scevgep2x_xi) := iNsTr_2
    //  file prog.linked.opt.aa, line 200
    // ->(scevgep2x_xi)
    &/ [ptr_deref_313_base_resize] (scevgep2x_xi_304) (ptr_deref_313_resized_base_address) 
    &/ [ptr_deref_313_root_address_inst] (ptr_deref_313_resized_base_address) (ptr_deref_313_root_address) 
    &/ [ptr_deref_313_addr_0] (ptr_deref_313_root_address) (ptr_deref_313_word_address_0) 
    $store [ptr_deref_313_store_0] $to memory_space_1 (ptr_deref_313_word_address_0 ptr_deref_313_data_0) 
    &/ [ptr_deref_313_gather_scatter] (iNsTr_2_307) (ptr_deref_313_data_0) 
    // 		iNsTr_5 := (idxx_x01x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 201
    // (idxx_x01x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[binary_320_inst] (idxx_x01x_xi_287 type_cast_319_wire_constant) (iNsTr_5_321) 
    // 		exitcondx_xi := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 202
    // (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    ==[binary_326_inst] (iNsTr_5_321 type_cast_325_wire_constant) (exitcondx_xi_327) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 203
    ==0? [if_stmt_328_branch] (exitcondx_xi_327)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 208
    // 			$phi idxx_x01x_xix_xbe := 			  ($cast ($uint<32>) iNsTr_5 ) $on sendResultx_xexit_sendResultx_xexitx_xbackedge			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 209
    // ($cast ($uint<32>) iNsTr_5 )
    := [type_cast_338_inst] (iNsTr_5_321) (type_cast_338_wire)  
    $phi [phi_stmt_335] (type_cast_338_wire type_cast_341_wire_constant) ( idxx_x01x_xix_xbe_335 )
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 215
    // 			$phi indvarx_xi_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on getDatax_xexitx_xpreheader_getDatax_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 216
    $phi [phi_stmt_347] (type_cast_351_wire_constant) ( indvarx_xi_at_entry_347 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 218
    // ( ~ exitcond1 )
    ~ [unary_407_inst] (exitcond1_404) (unary_407_wire)  
    ==0? [do_while_stmt_353_branch] (unary_407_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 219
    // 			$phi indvarx_xi := 			  ($cast ($uint<32>) indvarx_xnextx_xi ) $on $loopback			  indvarx_xi_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 220
    // ($cast ($uint<32>) indvarx_xnextx_xi )
    := [type_cast_358_inst] (indvarx_xnextx_xi_398) (type_cast_358_wire)  
    $phi [phi_stmt_355] (type_cast_358_wire indvarx_xi_at_entry_347) ( indvarx_xi_355 )
    // 			scevgepx_xi1 := @(A[indvarx_xi])
    //  file prog.linked.opt.aa, line 222
    &/ [array_obj_ref_363_index_0_resize] (indvarx_xi_355) (simple_obj_ref_362_resized) 
    &/ [array_obj_ref_363_index_0_rename] (simple_obj_ref_362_resized) (simple_obj_ref_362_scaled) 
    &/ [array_obj_ref_363_offset_inst] (simple_obj_ref_362_scaled) (array_obj_ref_363_final_offset) 
    &/ [array_obj_ref_363_root_address_inst] (array_obj_ref_363_final_offset) (array_obj_ref_363_root_address) 
    := [addr_of_364_final_reg] (array_obj_ref_363_root_address) (scevgepx_xi1_365)  
    // 			scevgep2x_xi2 := @(B[indvarx_xi])
    //  file prog.linked.opt.aa, line 223
    &/ [array_obj_ref_368_index_0_resize] (indvarx_xi_355) (simple_obj_ref_367_resized) 
    &/ [array_obj_ref_368_index_0_rename] (simple_obj_ref_367_resized) (simple_obj_ref_367_scaled) 
    &/ [array_obj_ref_368_offset_inst] (simple_obj_ref_367_scaled) (array_obj_ref_368_final_offset) 
    &/ [array_obj_ref_368_root_address_inst] (array_obj_ref_368_final_offset) (array_obj_ref_368_root_address) 
    := [addr_of_369_final_reg] (array_obj_ref_368_root_address) (scevgep2x_xi2_370)  
    // 			scevgep3x_xi := @(C[indvarx_xi])
    //  file prog.linked.opt.aa, line 224
    &/ [array_obj_ref_373_index_0_resize] (indvarx_xi_355) (simple_obj_ref_372_resized) 
    &/ [array_obj_ref_373_index_0_rename] (simple_obj_ref_372_resized) (simple_obj_ref_372_scaled) 
    &/ [array_obj_ref_373_offset_inst] (simple_obj_ref_372_scaled) (array_obj_ref_373_final_offset) 
    &/ [array_obj_ref_373_root_address_inst] (array_obj_ref_373_final_offset) (array_obj_ref_373_root_address) 
    := [addr_of_374_final_reg] (array_obj_ref_373_root_address) (scevgep3x_xi_375)  
    // 			iNsTr_10 := ->(scevgepx_xi1)
    //  file prog.linked.opt.aa, line 225
    // ->(scevgepx_xi1)
    &/ [ptr_deref_378_base_resize] (scevgepx_xi1_365) (ptr_deref_378_resized_base_address) 
    &/ [ptr_deref_378_root_address_inst] (ptr_deref_378_resized_base_address) (ptr_deref_378_root_address) 
    &/ [ptr_deref_378_addr_0] (ptr_deref_378_root_address) (ptr_deref_378_word_address_0) 
    $load [ptr_deref_378_load_0] $from memory_space_0 (ptr_deref_378_word_address_0) (ptr_deref_378_data_0) 
    &/ [ptr_deref_378_gather_scatter] (ptr_deref_378_data_0) (iNsTr_10_379) 
    // 			iNsTr_11 := ->(scevgep2x_xi2)
    //  file prog.linked.opt.aa, line 226
    // ->(scevgep2x_xi2)
    &/ [ptr_deref_382_base_resize] (scevgep2x_xi2_370) (ptr_deref_382_resized_base_address) 
    &/ [ptr_deref_382_root_address_inst] (ptr_deref_382_resized_base_address) (ptr_deref_382_root_address) 
    &/ [ptr_deref_382_addr_0] (ptr_deref_382_root_address) (ptr_deref_382_word_address_0) 
    $load [ptr_deref_382_load_0] $from memory_space_1 (ptr_deref_382_word_address_0) (ptr_deref_382_data_0) 
    &/ [ptr_deref_382_gather_scatter] (ptr_deref_382_data_0) (iNsTr_11_383) 
    // 			iNsTr_12 := (iNsTr_10 + iNsTr_11)
    //  file prog.linked.opt.aa, line 227
    // (iNsTr_10 + iNsTr_11)
    +[binary_387_inst] (iNsTr_10_379 iNsTr_11_383) (iNsTr_12_388) 
    // 			->(scevgep3x_xi) := iNsTr_12
    //  file prog.linked.opt.aa, line 228
    // ->(scevgep3x_xi)
    &/ [ptr_deref_390_base_resize] (scevgep3x_xi_375) (ptr_deref_390_resized_base_address) 
    &/ [ptr_deref_390_root_address_inst] (ptr_deref_390_resized_base_address) (ptr_deref_390_root_address) 
    &/ [ptr_deref_390_addr_0] (ptr_deref_390_root_address) (ptr_deref_390_word_address_0) 
    $store [ptr_deref_390_store_0] $to memory_space_2 (ptr_deref_390_word_address_0 ptr_deref_390_data_0) 
    &/ [ptr_deref_390_gather_scatter] (iNsTr_12_388) (ptr_deref_390_data_0) 
    // 			indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 229
    // (indvarx_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[binary_397_inst] (indvarx_xi_355 type_cast_396_wire_constant) (indvarx_xnextx_xi_398) 
    // 			exitcond1 := (indvarx_xnextx_xi == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 230
    // (indvarx_xnextx_xi == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    ==[binary_403_inst] (indvarx_xnextx_xi_398 type_cast_402_wire_constant) (exitcond1_404) 
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 236
    // 			$phi idxx_x01x_xi4 := 			  ($cast ($uint<32>) iNsTr_19 ) $on x_vectorSum_x_xexit_x_vectorSum_x_xexit			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 237
    // ($cast ($uint<32>) iNsTr_19 )
    := [type_cast_415_inst] (iNsTr_19_437) (type_cast_415_wire)  
    $phi [phi_stmt_412] (type_cast_415_wire type_cast_418_wire_constant) ( idxx_x01x_xi4_412 )
    // 		scevgepx_xi5 := @(C[idxx_x01x_xi4])
    //  file prog.linked.opt.aa, line 239
    &/ [array_obj_ref_422_index_0_resize] (idxx_x01x_xi4_412) (simple_obj_ref_421_resized) 
    &/ [array_obj_ref_422_index_0_rename] (simple_obj_ref_421_resized) (simple_obj_ref_421_scaled) 
    &/ [array_obj_ref_422_offset_inst] (simple_obj_ref_421_scaled) (array_obj_ref_422_final_offset) 
    &/ [array_obj_ref_422_root_address_inst] (array_obj_ref_422_final_offset) (array_obj_ref_422_root_address) 
    := [addr_of_423_final_reg] (array_obj_ref_422_root_address) (scevgepx_xi5_424)  
    // 		iNsTr_16 := ->(scevgepx_xi5)
    //  file prog.linked.opt.aa, line 240
    // ->(scevgepx_xi5)
    &/ [ptr_deref_427_base_resize] (scevgepx_xi5_424) (ptr_deref_427_resized_base_address) 
    &/ [ptr_deref_427_root_address_inst] (ptr_deref_427_resized_base_address) (ptr_deref_427_root_address) 
    &/ [ptr_deref_427_addr_0] (ptr_deref_427_root_address) (ptr_deref_427_word_address_0) 
    $load [ptr_deref_427_load_0] $from memory_space_2 (ptr_deref_427_word_address_0) (ptr_deref_427_data_0) 
    &/ [ptr_deref_427_gather_scatter] (ptr_deref_427_data_0) (iNsTr_16_428) 
    // 		out_data_pipe := iNsTr_16
    //  file prog.linked.opt.aa, line 241
    // out_data_pipe
    $ioport $out [simple_obj_ref_429_inst]  (iNsTr_16_428) (out_data_pipe) 
    // 		iNsTr_19 := (idxx_x01x_xi4 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 242
    // (idxx_x01x_xi4 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[binary_436_inst] (idxx_x01x_xi4_412 type_cast_435_wire_constant) (iNsTr_19_437) 
    // 		exitcond := (iNsTr_19 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 243
    // (iNsTr_19 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    ==[binary_442_inst] (iNsTr_19_437 type_cast_441_wire_constant) (exitcond_443) 
    // datapath-instances for if  
    //  file prog.linked.opt.aa, line 244
    ==0? [if_stmt_444_branch] (exitcond_443)
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 190
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 193
  // ($cast ($uint<32>) idxx_x01x_xix_xbe )
  type_cast_293_inst <=> (branch_block_stmt_282/sendResultx_xexitx_xbackedge_sendResultx_xexit_PhiReq/phi_stmt_287/phi_stmt_287_sources/type_cast_293/req) (branch_block_stmt_282/sendResultx_xexitx_xbackedge_sendResultx_xexit_PhiReq/phi_stmt_287/phi_stmt_287_sources/type_cast_293/ack)
  phi_stmt_287 <=> (branch_block_stmt_282/bb_0_sendResultx_xexit_PhiReq/phi_stmt_287/phi_stmt_287_req branch_block_stmt_282/sendResultx_xexitx_xbackedge_sendResultx_xexit_PhiReq/phi_stmt_287/phi_stmt_287_req) (branch_block_stmt_282/merge_stmt_286_PhiAck/phi_stmt_287_ack)
  // 		scevgepx_xi := @(A[idxx_x01x_xi])
  //  file prog.linked.opt.aa, line 196
  array_obj_ref_297_index_0_resize <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_297_index_resize_0/index_resize_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_297_index_resize_0/index_resize_ack)
  array_obj_ref_297_index_0_rename <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_297_index_scale_0/scale_rename_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_297_index_scale_0/scale_rename_ack)
  array_obj_ref_297_offset_inst <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_297_add_indices/final_index_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_297_add_indices/final_index_ack)
  array_obj_ref_297_root_address_inst <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_297_base_plus_offset/sum_rename_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_297_base_plus_offset/sum_rename_ack)
  addr_of_298_final_reg <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/addr_of_298_complete/final_reg_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/addr_of_298_complete/final_reg_ack)
  // 		scevgep2x_xi := @(B[idxx_x01x_xi])
  //  file prog.linked.opt.aa, line 197
  array_obj_ref_302_index_0_resize <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_302_index_resize_0/index_resize_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_302_index_resize_0/index_resize_ack)
  array_obj_ref_302_index_0_rename <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_302_index_scale_0/scale_rename_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_302_index_scale_0/scale_rename_ack)
  array_obj_ref_302_offset_inst <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_302_add_indices/final_index_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_302_add_indices/final_index_ack)
  array_obj_ref_302_root_address_inst <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_302_base_plus_offset/sum_rename_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/array_obj_ref_302_base_plus_offset/sum_rename_ack)
  addr_of_303_final_reg <=> (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/addr_of_303_complete/final_reg_req) (branch_block_stmt_282/assign_stmt_299_to_assign_stmt_304/addr_of_303_complete/final_reg_ack)
  // 		iNsTr_2 := in_data_pipe
  //  file prog.linked.opt.aa, line 198
  // in_data_pipe
  simple_obj_ref_306_inst <=> (branch_block_stmt_282/assign_stmt_307/simple_obj_ref_306_complete/req) (branch_block_stmt_282/assign_stmt_307/simple_obj_ref_306_complete/ack)
  // 		->(scevgepx_xi) := iNsTr_2
  //  file prog.linked.opt.aa, line 199
  ptr_deref_309_base_resize <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_base_addr_resize/base_resize_req) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_base_addr_resize/base_resize_ack)
  ptr_deref_309_root_address_inst <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_base_plus_offset/sum_rename_req) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_base_plus_offset/sum_rename_ack)
  ptr_deref_309_addr_0 <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_word_addrgen/root_register_req) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_word_addrgen/root_register_ack)
  ptr_deref_309_gather_scatter <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_request/split_req) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_request/split_ack)
  ptr_deref_309_store_0 <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_request/word_access/word_access_0/rr branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_complete/word_access/word_access_0/cr) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_request/word_access/word_access_0/ra branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_309_complete/word_access/word_access_0/ca)
  // 		->(scevgep2x_xi) := iNsTr_2
  //  file prog.linked.opt.aa, line 200
  ptr_deref_313_base_resize <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_base_addr_resize/base_resize_req) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_base_addr_resize/base_resize_ack)
  ptr_deref_313_root_address_inst <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_base_plus_offset/sum_rename_req) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_base_plus_offset/sum_rename_ack)
  ptr_deref_313_addr_0 <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_word_addrgen/root_register_req) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_word_addrgen/root_register_ack)
  ptr_deref_313_gather_scatter <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_request/split_req) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_request/split_ack)
  ptr_deref_313_store_0 <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_request/word_access/word_access_0/rr branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_complete/word_access/word_access_0/cr) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_request/word_access/word_access_0/ra branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/ptr_deref_313_complete/word_access/word_access_0/ca)
  // 		iNsTr_5 := (idxx_x01x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 201
  // (idxx_x01x_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  binary_320_inst <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/binary_320_Sample/rr branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/binary_320_Update/cr) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/binary_320_Sample/ra branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/binary_320_Update/ca)
  // 		exitcondx_xi := (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  //  file prog.linked.opt.aa, line 202
  // (iNsTr_5 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  binary_326_inst <=> (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/binary_326_Sample/rr branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/binary_326_Update/cr) (branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/binary_326_Sample/ra branch_block_stmt_282/assign_stmt_311_to_assign_stmt_327/binary_326_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 203
  if_stmt_328_branch <=> (branch_block_stmt_282/if_stmt_328_eval_test/branch_req) (branch_block_stmt_282/if_stmt_328_else_link/else_choice_transition branch_block_stmt_282/if_stmt_328_if_link/if_choice_transition)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 208
  // ($cast ($uint<32>) iNsTr_5 )
  type_cast_338_inst <=> (branch_block_stmt_282/sendResultx_xexit_sendResultx_xexitx_xbackedge_PhiReq/phi_stmt_335/phi_stmt_335_sources/type_cast_338/req) (branch_block_stmt_282/sendResultx_xexit_sendResultx_xexitx_xbackedge_PhiReq/phi_stmt_335/phi_stmt_335_sources/type_cast_338/ack)
  phi_stmt_335 <=> (branch_block_stmt_282/sendResultx_xexit_sendResultx_xexitx_xbackedge_PhiReq/phi_stmt_335/phi_stmt_335_req branch_block_stmt_282/sendResultx_xexitx_xloopexit_sendResultx_xexitx_xbackedge_PhiReq/phi_stmt_335/phi_stmt_335_req) (branch_block_stmt_282/merge_stmt_334_PhiAck/phi_stmt_335_ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 212
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 215
  phi_stmt_347 <=> (branch_block_stmt_282/getDatax_xexitx_xpreheader_getDatax_xexit_PhiReq/phi_stmt_347/phi_stmt_347_req) (branch_block_stmt_282/merge_stmt_346_PhiAck/phi_stmt_347_ack)
  // CP-DP links for do-while  do_while_stmt_353
  //  file prog.linked.opt.aa, line 218
  phi_stmt_355 <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/phi_stmt_355_req_0 branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/phi_stmt_355_req_1) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/phi_stmt_355_ack)
  // ($cast ($uint<32>) indvarx_xnextx_xi )
  type_cast_358_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/type_cast_358_complete/req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/type_cast_358_complete/ack)
  // 			scevgepx_xi1 := @(A[indvarx_xi])
  //  file prog.linked.opt.aa, line 222
  array_obj_ref_363_index_0_resize <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_363_index_resize_0/index_resize_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_363_index_resize_0/index_resize_ack)
  array_obj_ref_363_index_0_rename <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_363_index_scale_0/scale_rename_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_363_index_scale_0/scale_rename_ack)
  array_obj_ref_363_offset_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_363_add_indices/final_index_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_363_add_indices/final_index_ack)
  array_obj_ref_363_root_address_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_363_base_plus_offset/sum_rename_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_363_base_plus_offset/sum_rename_ack)
  addr_of_364_final_reg <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/addr_of_364_complete/final_reg_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/addr_of_364_complete/final_reg_ack)
  // 			scevgep2x_xi2 := @(B[indvarx_xi])
  //  file prog.linked.opt.aa, line 223
  array_obj_ref_368_index_0_resize <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_368_index_resize_0/index_resize_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_368_index_resize_0/index_resize_ack)
  array_obj_ref_368_index_0_rename <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_368_index_scale_0/scale_rename_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_368_index_scale_0/scale_rename_ack)
  array_obj_ref_368_offset_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_368_add_indices/final_index_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_368_add_indices/final_index_ack)
  array_obj_ref_368_root_address_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_368_base_plus_offset/sum_rename_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_368_base_plus_offset/sum_rename_ack)
  addr_of_369_final_reg <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/addr_of_369_complete/final_reg_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/addr_of_369_complete/final_reg_ack)
  // 			scevgep3x_xi := @(C[indvarx_xi])
  //  file prog.linked.opt.aa, line 224
  array_obj_ref_373_index_0_resize <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_373_index_resize_0/index_resize_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_373_index_resize_0/index_resize_ack)
  array_obj_ref_373_index_0_rename <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_373_index_scale_0/scale_rename_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_373_index_scale_0/scale_rename_ack)
  array_obj_ref_373_offset_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_373_add_indices/final_index_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_373_add_indices/final_index_ack)
  array_obj_ref_373_root_address_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_373_base_plus_offset/sum_rename_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/array_obj_ref_373_base_plus_offset/sum_rename_ack)
  addr_of_374_final_reg <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/addr_of_374_complete/final_reg_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/addr_of_374_complete/final_reg_ack)
  // 			iNsTr_10 := ->(scevgepx_xi1)
  //  file prog.linked.opt.aa, line 225
  ptr_deref_378_base_resize <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_base_addr_resize/base_resize_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_base_addr_resize/base_resize_ack)
  ptr_deref_378_root_address_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_base_plus_offset/sum_rename_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_base_plus_offset/sum_rename_ack)
  ptr_deref_378_addr_0 <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_word_addrgen/root_register_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_word_addrgen/root_register_ack)
  ptr_deref_378_gather_scatter <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_complete/merge_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_complete/merge_ack)
  ptr_deref_378_load_0 <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_request/word_access/word_access_0/rr branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_complete/word_access/word_access_0/cr) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_request/word_access/word_access_0/ra branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_378_complete/word_access/word_access_0/ca)
  // 			iNsTr_11 := ->(scevgep2x_xi2)
  //  file prog.linked.opt.aa, line 226
  ptr_deref_382_base_resize <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_base_addr_resize/base_resize_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_base_addr_resize/base_resize_ack)
  ptr_deref_382_root_address_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_base_plus_offset/sum_rename_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_base_plus_offset/sum_rename_ack)
  ptr_deref_382_addr_0 <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_word_addrgen/root_register_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_word_addrgen/root_register_ack)
  ptr_deref_382_gather_scatter <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_complete/merge_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_complete/merge_ack)
  ptr_deref_382_load_0 <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_request/word_access/word_access_0/rr branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_complete/word_access/word_access_0/cr) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_request/word_access/word_access_0/ra branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_382_complete/word_access/word_access_0/ca)
  // 			iNsTr_12 := (iNsTr_10 + iNsTr_11)
  //  file prog.linked.opt.aa, line 227
  // (iNsTr_10 + iNsTr_11)
  binary_387_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_387_Sample/rr branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_387_Update/cr) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_387_Sample/ra branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_387_Update/ca)
  // 			->(scevgep3x_xi) := iNsTr_12
  //  file prog.linked.opt.aa, line 228
  ptr_deref_390_base_resize <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_base_addr_resize/base_resize_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_base_addr_resize/base_resize_ack)
  ptr_deref_390_root_address_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_base_plus_offset/sum_rename_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_base_plus_offset/sum_rename_ack)
  ptr_deref_390_addr_0 <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_word_addrgen/root_register_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_word_addrgen/root_register_ack)
  ptr_deref_390_gather_scatter <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_request/split_req) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_request/split_ack)
  ptr_deref_390_store_0 <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_request/word_access/word_access_0/rr branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_complete/word_access/word_access_0/cr) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_request/word_access/word_access_0/ra branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/ptr_deref_390_complete/word_access/word_access_0/ca)
  // 			indvarx_xnextx_xi := (indvarx_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 229
  // (indvarx_xi + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  binary_397_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_397_Sample/rr branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_397_Update/cr) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_397_Sample/ra branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_397_Update/ca)
  // 			exitcond1 := (indvarx_xnextx_xi == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  //  file prog.linked.opt.aa, line 230
  // (indvarx_xnextx_xi == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  binary_403_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_403_Sample/rr branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_403_Update/cr) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_403_Sample/ra branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/binary_403_Update/ca)
  // ( ~ exitcond1 )
  unary_407_inst <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/unary_407_Sample/rr branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/unary_407_Update/cr) (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/unary_407_Sample/ra branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/unary_407_Update/ca)
  do_while_stmt_353_branch <=> (branch_block_stmt_282/do_while_stmt_353/do_while_stmt_353_loop_body/condition_evaluated) (branch_block_stmt_282/do_while_stmt_353/loop_exit/ack branch_block_stmt_282/do_while_stmt_353/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 233
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 236
  // ($cast ($uint<32>) iNsTr_19 )
  type_cast_415_inst <=> (branch_block_stmt_282/x_vectorSum_x_xexit_x_vectorSum_x_xexit_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_415/req) (branch_block_stmt_282/x_vectorSum_x_xexit_x_vectorSum_x_xexit_PhiReq/phi_stmt_412/phi_stmt_412_sources/type_cast_415/ack)
  phi_stmt_412 <=> (branch_block_stmt_282/x_vectorSum_x_xexit_x_vectorSum_x_xexit_PhiReq/phi_stmt_412/phi_stmt_412_req branch_block_stmt_282/x_vectorSum_x_xexitx_xloopexit_x_vectorSum_x_xexit_PhiReq/phi_stmt_412/phi_stmt_412_req) (branch_block_stmt_282/merge_stmt_411_PhiAck/phi_stmt_412_ack)
  // 		scevgepx_xi5 := @(C[idxx_x01x_xi4])
  //  file prog.linked.opt.aa, line 239
  array_obj_ref_422_index_0_resize <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/array_obj_ref_422_index_resize_0/index_resize_req) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/array_obj_ref_422_index_resize_0/index_resize_ack)
  array_obj_ref_422_index_0_rename <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/array_obj_ref_422_index_scale_0/scale_rename_req) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/array_obj_ref_422_index_scale_0/scale_rename_ack)
  array_obj_ref_422_offset_inst <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/array_obj_ref_422_add_indices/final_index_req) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/array_obj_ref_422_add_indices/final_index_ack)
  array_obj_ref_422_root_address_inst <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/array_obj_ref_422_base_plus_offset/sum_rename_req) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/array_obj_ref_422_base_plus_offset/sum_rename_ack)
  addr_of_423_final_reg <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/addr_of_423_complete/final_reg_req) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/addr_of_423_complete/final_reg_ack)
  // 		iNsTr_16 := ->(scevgepx_xi5)
  //  file prog.linked.opt.aa, line 240
  ptr_deref_427_base_resize <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_base_addr_resize/base_resize_req) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_base_addr_resize/base_resize_ack)
  ptr_deref_427_root_address_inst <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_base_plus_offset/sum_rename_req) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_base_plus_offset/sum_rename_ack)
  ptr_deref_427_addr_0 <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_word_addrgen/root_register_req) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_word_addrgen/root_register_ack)
  ptr_deref_427_gather_scatter <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_complete/merge_req) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_complete/merge_ack)
  ptr_deref_427_load_0 <=> (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_request/word_access/word_access_0/rr branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_complete/word_access/word_access_0/cr) (branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_request/word_access/word_access_0/ra branch_block_stmt_282/assign_stmt_424_to_assign_stmt_428/ptr_deref_427_complete/word_access/word_access_0/ca)
  // 		out_data_pipe := iNsTr_16
  //  file prog.linked.opt.aa, line 241
  // out_data_pipe
  simple_obj_ref_429_inst <=> (branch_block_stmt_282/assign_stmt_431/simple_obj_ref_429_complete/pipe_wreq) (branch_block_stmt_282/assign_stmt_431/simple_obj_ref_429_complete/pipe_wack)
  // 		iNsTr_19 := (idxx_x01x_xi4 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 242
  // (idxx_x01x_xi4 + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  binary_436_inst <=> (branch_block_stmt_282/assign_stmt_437_to_assign_stmt_443/binary_436_Sample/rr branch_block_stmt_282/assign_stmt_437_to_assign_stmt_443/binary_436_Update/cr) (branch_block_stmt_282/assign_stmt_437_to_assign_stmt_443/binary_436_Sample/ra branch_block_stmt_282/assign_stmt_437_to_assign_stmt_443/binary_436_Update/ca)
  // 		exitcond := (iNsTr_19 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  //  file prog.linked.opt.aa, line 243
  // (iNsTr_19 == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  binary_442_inst <=> (branch_block_stmt_282/assign_stmt_437_to_assign_stmt_443/binary_442_Sample/rr branch_block_stmt_282/assign_stmt_437_to_assign_stmt_443/binary_442_Update/cr) (branch_block_stmt_282/assign_stmt_437_to_assign_stmt_443/binary_442_Sample/ra branch_block_stmt_282/assign_stmt_437_to_assign_stmt_443/binary_442_Update/ca)
  // CP-DP links for if  
  //  file prog.linked.opt.aa, line 244
  if_stmt_444_branch <=> (branch_block_stmt_282/if_stmt_444_eval_test/branch_req) (branch_block_stmt_282/if_stmt_444_else_link/else_choice_transition branch_block_stmt_282/if_stmt_444_if_link/if_choice_transition)
}
$module [x_vectorSum_] 
{
  // pipe-declarations for block %x_vectorSum_
  //  file prog.linked.opt.aa, line 251
  // pipe-declarations for block %x_vectorSum_%body
  //  file prog.linked.opt.aa, line 256
  // pipe-declarations for block %x_vectorSum_%body%
  //  file prog.linked.opt.aa, line 259
  // pipe-declarations for block %x_vectorSum_%body%
  //  file prog.linked.opt.aa, line 277
  // pipe-declarations for block %x_vectorSum_%body%
  //  file prog.linked.opt.aa, line 280
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_453] // Branch Block  file prog.linked.opt.aa, line 256
    {
      $P [branch_block_stmt_453__entry__]
      branch_block_stmt_453__entry__ <-| ($entry)
      $P [branch_block_stmt_453__exit__]
      branch_block_stmt_453__exit__ |-> ($exit)
      $P [bbx_xnph_bb_1]
      $P [merge_stmt_455__exit__] 
      $P [do_while_stmt_462__entry__] 
      $P [do_while_stmt_462__exit__] 
      $P [bb_1_xx_x_crit_edge]
      $P [merge_stmt_518__exit__] 
      $P [return__]
      $P [merge_stmt_520__exit__] 
      // do-while-statement  
      //  file prog.linked.opt.aa, line 262
      <o> [do_while_stmt_462]  $depth 16 
      {
        $P[do_while_stmt_462__entry__] 
        $P[do_while_stmt_462__exit__] 
        $P[loop_back] 
        $P[condition_done] 
        $P[loop_body_done] 
        $pipeline[do_while_stmt_462_loop_body] 
        {
          // Pipelined!
          $T[back_edge_to_loop_body] 
          $T[first_time_through_loop_body] 
          $T[loop_body_start] 
          $transitionmerge [entry_tmerge] (back_edge_to_loop_body first_time_through_loop_body) (loop_body_start)
          $entry <-& (loop_body_start)
          // PHI statement phi_stmt_464
          // 			$phi indvar := 			  ($cast ($uint<32>) indvarx_xnext ) $on $loopback			  indvar_at_entry $on $entry // type of target is $uint<32>
          $T[phi_stmt_464_req_0_raw] 
          $T[phi_stmt_464_req_0] 
          phi_stmt_464_req_0_raw &-> (phi_stmt_464_req_0)
          $T[phi_stmt_464_trigger_from_back_edge_to_loop_body] 
          back_edge_to_loop_body &-> (phi_stmt_464_trigger_from_back_edge_to_loop_body)
          $T[phi_stmt_464_req_1_raw] 
          $T[phi_stmt_464_req_1] 
          phi_stmt_464_req_1_raw &-> (phi_stmt_464_req_1)
          $T[phi_stmt_464_trigger_from_first_time_through_loop_body] 
          first_time_through_loop_body &-> (phi_stmt_464_trigger_from_first_time_through_loop_body)
          $T[phi_stmt_464_phi_sequencer_reqs_merged] 
          $T[phi_stmt_464_phi_sequencer_done] 
          $T[phi_stmt_464_ack] 
          $T[phi_stmt_464_enable_] 
          $T[phi_stmt_464_trigger_] 
          $T[phi_stmt_464_active_] 
          $T[phi_stmt_464_completed_] 
          phi_stmt_464_trigger_ &-> (phi_stmt_464_enable_)
          $phisequencer [ phi_stmt_464_phi_seq] (  phi_stmt_464_trigger_from_back_edge_to_loop_body phi_stmt_464_trigger_from_first_time_through_loop_body : phi_stmt_464_enable_ : phi_stmt_464_ack ) (  phi_stmt_464_req_0_raw phi_stmt_464_req_1_raw : phi_stmt_464_phi_sequencer_done ) 
          $transitionmerge [phi_stmt_464_req_merger] ( phi_stmt_464_req_0 phi_stmt_464_req_1) (phi_stmt_464_phi_sequencer_reqs_merged)
          phi_stmt_464_phi_sequencer_reqs_merged &-> ($null)
          phi_stmt_464_active_ <-& (phi_stmt_464_phi_sequencer_done)
          phi_stmt_464_completed_ <-& (phi_stmt_464_active_)
          // ($cast ($uint<32>) indvarx_xnext )
          $T[type_cast_467_trigger_] 
          $T[type_cast_467_active_] 
          $T[type_cast_467_completed_] 
          // indvarx_xnext
          $T[simple_obj_ref_466_trigger_] 
          $T[simple_obj_ref_466_active_] 
          $T[simple_obj_ref_466_completed_] 
          // implicit reference
          simple_obj_ref_466_completed_ <-& (simple_obj_ref_466_active_)
          simple_obj_ref_466_active_ <-& (simple_obj_ref_466_trigger_)
          type_cast_467_trigger_ <-& (simple_obj_ref_466_completed_)
          ;;[type_cast_467_complete]
          {
            $T [req] $T [ack] //  type-conversion (bit-cast) 
          }
          type_cast_467_trigger_ &-> (type_cast_467_complete)
          type_cast_467_active_ <-& (type_cast_467_complete)
          type_cast_467_completed_ <-& (type_cast_467_active_)
          simple_obj_ref_466_trigger_ o<-& (type_cast_467_active_)
          phi_stmt_464_trigger_ <-& (type_cast_467_completed_)
          type_cast_467_active_ o<-& (phi_stmt_464_completed_)
          // indvar_at_entry
          $T[simple_obj_ref_468_trigger_] 
          $T[simple_obj_ref_468_active_] 
          $T[simple_obj_ref_468_completed_] 
          // implicit reference
          simple_obj_ref_468_completed_ <-& (simple_obj_ref_468_active_)
          simple_obj_ref_468_active_ <-& (simple_obj_ref_468_trigger_)
          phi_stmt_464_trigger_ <-& (simple_obj_ref_468_completed_)
          simple_obj_ref_468_trigger_ o<-& (phi_stmt_464_completed_)
          // 			scevgep3 := @(C[indvar])
          //  file prog.linked.opt.aa, line 266
          $T[assign_stmt_474_trigger_] 
          $T[assign_stmt_474_active_] 
          $T[assign_stmt_474_completed_] 
          assign_stmt_474_active_ <-& (assign_stmt_474_trigger_)
          // @(C[indvar])
          $T[addr_of_473_trigger_] 
          $T[addr_of_473_active_] 
          $T[addr_of_473_completed_] 
          $T[array_obj_ref_472_root_address_calculated] 
          $T[array_obj_ref_472_indices_scaled] 
          $T[array_obj_ref_472_offset_calculated] 
          $T[array_obj_ref_472_index_computed_0] 
          $T[array_obj_ref_472_index_resized_0] 
          // indvar
          $T[simple_obj_ref_471_trigger_] 
          $T[simple_obj_ref_471_active_] 
          $T[simple_obj_ref_471_completed_] 
          // implicit reference
          simple_obj_ref_471_trigger_ <-& (phi_stmt_464_completed_)
          simple_obj_ref_471_completed_ <-& (simple_obj_ref_471_active_)
          simple_obj_ref_471_active_ <-& (simple_obj_ref_471_trigger_)
          array_obj_ref_472_index_computed_0 <-& (simple_obj_ref_471_completed_)
          ;;[array_obj_ref_472_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_472_index_computed_0 &-> (array_obj_ref_472_index_resize_0)
          array_obj_ref_472_index_resized_0 <-& (array_obj_ref_472_index_resize_0)
          ;;[array_obj_ref_472_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_472_index_resized_0 &-> (array_obj_ref_472_index_scale_0)
          array_obj_ref_472_indices_scaled <-& (array_obj_ref_472_index_scale_0)
          ;;[array_obj_ref_472_add_indices] 
          {
            $T [final_index_req] $T [final_index_ack] // rename
          }
          array_obj_ref_472_indices_scaled &-> (array_obj_ref_472_add_indices)
          array_obj_ref_472_offset_calculated <-& (array_obj_ref_472_add_indices)
          ;;[array_obj_ref_472_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_472_offset_calculated &-> (array_obj_ref_472_base_plus_offset)
          array_obj_ref_472_root_address_calculated <-& (array_obj_ref_472_base_plus_offset)
          ;;[addr_of_473_complete] 
          {
            $T [final_reg_req] $T [final_reg_ack]
          }
          addr_of_473_active_ <-& (addr_of_473_trigger_)
          addr_of_473_active_ <-& (array_obj_ref_472_root_address_calculated)
          addr_of_473_active_ &-> (addr_of_473_complete)
          addr_of_473_completed_ <-& (addr_of_473_complete)
          phi_stmt_464_enable_ o<-& (addr_of_473_completed_)
          addr_of_473_active_ o<-& (addr_of_473_completed_)
          assign_stmt_474_trigger_ <-& (addr_of_473_completed_)
          addr_of_473_active_ o<-& (assign_stmt_474_completed_)
          // scevgep3
          // implicit reference
          assign_stmt_474_completed_ <-& (assign_stmt_474_active_)
          // 			scevgep2 := @(B[indvar])
          //  file prog.linked.opt.aa, line 267
          $T[assign_stmt_479_trigger_] 
          $T[assign_stmt_479_active_] 
          $T[assign_stmt_479_completed_] 
          assign_stmt_479_active_ <-& (assign_stmt_479_trigger_)
          // @(B[indvar])
          $T[addr_of_478_trigger_] 
          $T[addr_of_478_active_] 
          $T[addr_of_478_completed_] 
          $T[array_obj_ref_477_root_address_calculated] 
          $T[array_obj_ref_477_indices_scaled] 
          $T[array_obj_ref_477_offset_calculated] 
          $T[array_obj_ref_477_index_computed_0] 
          $T[array_obj_ref_477_index_resized_0] 
          // indvar
          $T[simple_obj_ref_476_trigger_] 
          $T[simple_obj_ref_476_active_] 
          $T[simple_obj_ref_476_completed_] 
          // implicit reference
          simple_obj_ref_476_trigger_ <-& (phi_stmt_464_completed_)
          simple_obj_ref_476_completed_ <-& (simple_obj_ref_476_active_)
          simple_obj_ref_476_active_ <-& (simple_obj_ref_476_trigger_)
          array_obj_ref_477_index_computed_0 <-& (simple_obj_ref_476_completed_)
          ;;[array_obj_ref_477_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_477_index_computed_0 &-> (array_obj_ref_477_index_resize_0)
          array_obj_ref_477_index_resized_0 <-& (array_obj_ref_477_index_resize_0)
          ;;[array_obj_ref_477_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_477_index_resized_0 &-> (array_obj_ref_477_index_scale_0)
          array_obj_ref_477_indices_scaled <-& (array_obj_ref_477_index_scale_0)
          ;;[array_obj_ref_477_add_indices] 
          {
            $T [final_index_req] $T [final_index_ack] // rename
          }
          array_obj_ref_477_indices_scaled &-> (array_obj_ref_477_add_indices)
          array_obj_ref_477_offset_calculated <-& (array_obj_ref_477_add_indices)
          ;;[array_obj_ref_477_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_477_offset_calculated &-> (array_obj_ref_477_base_plus_offset)
          array_obj_ref_477_root_address_calculated <-& (array_obj_ref_477_base_plus_offset)
          ;;[addr_of_478_complete] 
          {
            $T [final_reg_req] $T [final_reg_ack]
          }
          addr_of_478_active_ <-& (addr_of_478_trigger_)
          addr_of_478_active_ <-& (array_obj_ref_477_root_address_calculated)
          addr_of_478_active_ &-> (addr_of_478_complete)
          addr_of_478_completed_ <-& (addr_of_478_complete)
          phi_stmt_464_enable_ o<-& (addr_of_478_completed_)
          addr_of_478_active_ o<-& (addr_of_478_completed_)
          assign_stmt_479_trigger_ <-& (addr_of_478_completed_)
          addr_of_478_active_ o<-& (assign_stmt_479_completed_)
          // scevgep2
          // implicit reference
          assign_stmt_479_completed_ <-& (assign_stmt_479_active_)
          // 			scevgep := @(A[indvar])
          //  file prog.linked.opt.aa, line 268
          $T[assign_stmt_484_trigger_] 
          $T[assign_stmt_484_active_] 
          $T[assign_stmt_484_completed_] 
          assign_stmt_484_active_ <-& (assign_stmt_484_trigger_)
          // @(A[indvar])
          $T[addr_of_483_trigger_] 
          $T[addr_of_483_active_] 
          $T[addr_of_483_completed_] 
          $T[array_obj_ref_482_root_address_calculated] 
          $T[array_obj_ref_482_indices_scaled] 
          $T[array_obj_ref_482_offset_calculated] 
          $T[array_obj_ref_482_index_computed_0] 
          $T[array_obj_ref_482_index_resized_0] 
          // indvar
          $T[simple_obj_ref_481_trigger_] 
          $T[simple_obj_ref_481_active_] 
          $T[simple_obj_ref_481_completed_] 
          // implicit reference
          simple_obj_ref_481_trigger_ <-& (phi_stmt_464_completed_)
          simple_obj_ref_481_completed_ <-& (simple_obj_ref_481_active_)
          simple_obj_ref_481_active_ <-& (simple_obj_ref_481_trigger_)
          array_obj_ref_482_index_computed_0 <-& (simple_obj_ref_481_completed_)
          ;;[array_obj_ref_482_index_resize_0] 
          {
            $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
          }
          array_obj_ref_482_index_computed_0 &-> (array_obj_ref_482_index_resize_0)
          array_obj_ref_482_index_resized_0 <-& (array_obj_ref_482_index_resize_0)
          ;;[array_obj_ref_482_index_scale_0] 
          {
            $T [scale_rename_req] $T [scale_rename_ack] // rename 
          }
          array_obj_ref_482_index_resized_0 &-> (array_obj_ref_482_index_scale_0)
          array_obj_ref_482_indices_scaled <-& (array_obj_ref_482_index_scale_0)
          ;;[array_obj_ref_482_add_indices] 
          {
            $T [final_index_req] $T [final_index_ack] // rename
          }
          array_obj_ref_482_indices_scaled &-> (array_obj_ref_482_add_indices)
          array_obj_ref_482_offset_calculated <-& (array_obj_ref_482_add_indices)
          ;;[array_obj_ref_482_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          array_obj_ref_482_offset_calculated &-> (array_obj_ref_482_base_plus_offset)
          array_obj_ref_482_root_address_calculated <-& (array_obj_ref_482_base_plus_offset)
          ;;[addr_of_483_complete] 
          {
            $T [final_reg_req] $T [final_reg_ack]
          }
          addr_of_483_active_ <-& (addr_of_483_trigger_)
          addr_of_483_active_ <-& (array_obj_ref_482_root_address_calculated)
          addr_of_483_active_ &-> (addr_of_483_complete)
          addr_of_483_completed_ <-& (addr_of_483_complete)
          phi_stmt_464_enable_ o<-& (addr_of_483_completed_)
          addr_of_483_active_ o<-& (addr_of_483_completed_)
          assign_stmt_484_trigger_ <-& (addr_of_483_completed_)
          addr_of_483_active_ o<-& (assign_stmt_484_completed_)
          // scevgep
          // implicit reference
          assign_stmt_484_completed_ <-& (assign_stmt_484_active_)
          // 			iNsTr_2 := ->(scevgep)
          //  file prog.linked.opt.aa, line 269
          $T[assign_stmt_488_trigger_] 
          $T[assign_stmt_488_active_] 
          $T[assign_stmt_488_completed_] 
          assign_stmt_488_active_ <-& (assign_stmt_488_trigger_)
          // ->(scevgep)
          $T[ptr_deref_487_trigger_] 
          $T[ptr_deref_487_active_] 
          $T[ptr_deref_487_completed_] 
          $T[ptr_deref_487_base_address_calculated] 
          // scevgep
          $T[simple_obj_ref_486_trigger_] 
          $T[simple_obj_ref_486_active_] 
          $T[simple_obj_ref_486_completed_] 
          // implicit reference
          simple_obj_ref_486_trigger_ <-& (assign_stmt_484_completed_)
          simple_obj_ref_486_completed_ <-& (simple_obj_ref_486_active_)
          simple_obj_ref_486_active_ <-& (simple_obj_ref_486_trigger_)
          $T[ptr_deref_487_word_address_calculated] 
          $T[ptr_deref_487_root_address_calculated] 
          $T[ptr_deref_487_base_address_resized] 
          ;;[ptr_deref_487_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_487_base_address_calculated &-> (ptr_deref_487_base_addr_resize)
          ptr_deref_487_base_address_resized <-& (ptr_deref_487_base_addr_resize)
          ;;[ptr_deref_487_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_487_base_address_resized &-> (ptr_deref_487_base_plus_offset)
          ptr_deref_487_root_address_calculated <-& (ptr_deref_487_base_plus_offset)
          ;;[ptr_deref_487_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_487_root_address_calculated &-> (ptr_deref_487_word_addrgen)
          ptr_deref_487_word_address_calculated <-& (ptr_deref_487_word_addrgen)
          ;;[ptr_deref_487_request] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_487_complete] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            $T [merge_req] $T [merge_ack]
          }
          ptr_deref_487_trigger_ &-> (ptr_deref_487_request)
          ptr_deref_487_active_ <-& (ptr_deref_487_request)
          ptr_deref_487_active_ &-> (ptr_deref_487_complete)
          ptr_deref_487_completed_ <-& (ptr_deref_487_complete)
          ptr_deref_487_root_address_calculated o<-& (ptr_deref_487_active_)
          ptr_deref_487_trigger_ <-& (ptr_deref_487_word_address_calculated)
          ptr_deref_487_base_address_calculated <-& (simple_obj_ref_486_completed_)
          ptr_deref_487_trigger_ <-& (ptr_deref_487_base_address_calculated)
          addr_of_483_active_ o<-& (ptr_deref_487_active_)
          ptr_deref_487_trigger_ o<-& (ptr_deref_487_active_)
          ptr_deref_487_active_ o<-& (ptr_deref_487_completed_)
          assign_stmt_488_trigger_ <-& (ptr_deref_487_completed_)
          ptr_deref_487_active_ o<-& (assign_stmt_488_completed_)
          // iNsTr_2
          // implicit reference
          assign_stmt_488_completed_ <-& (assign_stmt_488_active_)
          // 			iNsTr_3 := ->(scevgep2)
          //  file prog.linked.opt.aa, line 270
          $T[assign_stmt_492_trigger_] 
          $T[assign_stmt_492_active_] 
          $T[assign_stmt_492_completed_] 
          assign_stmt_492_active_ <-& (assign_stmt_492_trigger_)
          // ->(scevgep2)
          $T[ptr_deref_491_trigger_] 
          $T[ptr_deref_491_active_] 
          $T[ptr_deref_491_completed_] 
          $T[ptr_deref_491_base_address_calculated] 
          // scevgep2
          $T[simple_obj_ref_490_trigger_] 
          $T[simple_obj_ref_490_active_] 
          $T[simple_obj_ref_490_completed_] 
          // implicit reference
          simple_obj_ref_490_trigger_ <-& (assign_stmt_479_completed_)
          simple_obj_ref_490_completed_ <-& (simple_obj_ref_490_active_)
          simple_obj_ref_490_active_ <-& (simple_obj_ref_490_trigger_)
          $T[ptr_deref_491_word_address_calculated] 
          $T[ptr_deref_491_root_address_calculated] 
          $T[ptr_deref_491_base_address_resized] 
          ;;[ptr_deref_491_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_491_base_address_calculated &-> (ptr_deref_491_base_addr_resize)
          ptr_deref_491_base_address_resized <-& (ptr_deref_491_base_addr_resize)
          ;;[ptr_deref_491_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_491_base_address_resized &-> (ptr_deref_491_base_plus_offset)
          ptr_deref_491_root_address_calculated <-& (ptr_deref_491_base_plus_offset)
          ;;[ptr_deref_491_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_491_root_address_calculated &-> (ptr_deref_491_word_addrgen)
          ptr_deref_491_word_address_calculated <-& (ptr_deref_491_word_addrgen)
          ;;[ptr_deref_491_request] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_491_complete] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [cr] $T [ca] 
              }
            }
            $T [merge_req] $T [merge_ack]
          }
          ptr_deref_491_trigger_ &-> (ptr_deref_491_request)
          ptr_deref_491_active_ <-& (ptr_deref_491_request)
          ptr_deref_491_active_ &-> (ptr_deref_491_complete)
          ptr_deref_491_completed_ <-& (ptr_deref_491_complete)
          ptr_deref_491_root_address_calculated o<-& (ptr_deref_491_active_)
          ptr_deref_491_trigger_ <-& (ptr_deref_491_word_address_calculated)
          ptr_deref_491_base_address_calculated <-& (simple_obj_ref_490_completed_)
          ptr_deref_491_trigger_ <-& (ptr_deref_491_base_address_calculated)
          addr_of_478_active_ o<-& (ptr_deref_491_active_)
          ptr_deref_491_trigger_ o<-& (ptr_deref_491_active_)
          ptr_deref_491_active_ o<-& (ptr_deref_491_completed_)
          assign_stmt_492_trigger_ <-& (ptr_deref_491_completed_)
          ptr_deref_491_active_ o<-& (assign_stmt_492_completed_)
          // iNsTr_3
          // implicit reference
          assign_stmt_492_completed_ <-& (assign_stmt_492_active_)
          // 			iNsTr_4 := (iNsTr_2 + iNsTr_3)
          //  file prog.linked.opt.aa, line 271
          $T[assign_stmt_497_trigger_] 
          $T[assign_stmt_497_active_] 
          $T[assign_stmt_497_completed_] 
          assign_stmt_497_active_ <-& (assign_stmt_497_trigger_)
          // (iNsTr_2 + iNsTr_3)
          $T[binary_496_trigger_] 
          $T[binary_496_active_] 
          $T[binary_496_completed_] 
          $T[binary_496_sample_start_] 
          $T[binary_496_sample_completed_] 
          $T[binary_496_update_start_] 
          $T[binary_496_update_completed_] 
          binary_496_sample_start_ <-& (binary_496_trigger_)
          binary_496_update_start_ <-& (binary_496_trigger_)
          binary_496_completed_ <-& (binary_496_update_completed_)
          binary_496_completed_ <-& (binary_496_sample_completed_)
          // iNsTr_2
          $T[simple_obj_ref_494_trigger_] 
          $T[simple_obj_ref_494_active_] 
          $T[simple_obj_ref_494_completed_] 
          // implicit reference
          simple_obj_ref_494_trigger_ <-& (assign_stmt_488_completed_)
          simple_obj_ref_494_completed_ <-& (simple_obj_ref_494_active_)
          simple_obj_ref_494_active_ <-& (simple_obj_ref_494_trigger_)
          // iNsTr_3
          $T[simple_obj_ref_495_trigger_] 
          $T[simple_obj_ref_495_active_] 
          $T[simple_obj_ref_495_completed_] 
          // implicit reference
          simple_obj_ref_495_trigger_ <-& (assign_stmt_492_completed_)
          simple_obj_ref_495_completed_ <-& (simple_obj_ref_495_active_)
          simple_obj_ref_495_active_ <-& (simple_obj_ref_495_trigger_)
          binary_496_trigger_ <-& (simple_obj_ref_494_completed_)
          binary_496_trigger_ <-& (simple_obj_ref_495_completed_)
          ;;[binary_496_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[binary_496_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          binary_496_sample_start_ &-> (binary_496_Sample)
          binary_496_sample_completed_ <-& (binary_496_Sample)
          binary_496_update_start_ &-> (binary_496_Update)
          binary_496_update_completed_ <-& (binary_496_Update)
          ptr_deref_487_active_ o<-& (binary_496_sample_completed_)
          ptr_deref_491_active_ o<-& (binary_496_sample_completed_)
          binary_496_sample_start_ o<-& (binary_496_sample_completed_)
          binary_496_update_start_ o<-& (binary_496_update_completed_)
          assign_stmt_497_trigger_ <-& (binary_496_completed_)
          binary_496_update_start_ o<-& (assign_stmt_497_completed_)
          // iNsTr_4
          // implicit reference
          assign_stmt_497_completed_ <-& (assign_stmt_497_active_)
          // 			->(scevgep3) := iNsTr_4
          //  file prog.linked.opt.aa, line 272
          $T[assign_stmt_501_trigger_] 
          $T[assign_stmt_501_active_] 
          $T[assign_stmt_501_completed_] 
          assign_stmt_501_active_ <-& (assign_stmt_501_trigger_)
          // iNsTr_4
          $T[simple_obj_ref_500_trigger_] 
          $T[simple_obj_ref_500_active_] 
          $T[simple_obj_ref_500_completed_] 
          // implicit reference
          simple_obj_ref_500_trigger_ <-& (assign_stmt_497_completed_)
          simple_obj_ref_500_completed_ <-& (simple_obj_ref_500_active_)
          simple_obj_ref_500_active_ <-& (simple_obj_ref_500_trigger_)
          assign_stmt_501_trigger_ <-& (simple_obj_ref_500_completed_)
          binary_496_update_start_ o<-& (assign_stmt_501_completed_)
          // ->(scevgep3)
          $T[ptr_deref_499_trigger_] 
          $T[ptr_deref_499_active_] 
          $T[ptr_deref_499_completed_] 
          $T[ptr_deref_499_base_address_calculated] 
          // scevgep3
          $T[simple_obj_ref_498_trigger_] 
          $T[simple_obj_ref_498_active_] 
          $T[simple_obj_ref_498_completed_] 
          // implicit reference
          simple_obj_ref_498_trigger_ <-& (assign_stmt_474_completed_)
          simple_obj_ref_498_completed_ <-& (simple_obj_ref_498_active_)
          simple_obj_ref_498_active_ <-& (simple_obj_ref_498_trigger_)
          $T[ptr_deref_499_word_address_calculated] 
          $T[ptr_deref_499_root_address_calculated] 
          $T[ptr_deref_499_base_address_resized] 
          ;;[ptr_deref_499_base_addr_resize] 
          {
            $T [base_resize_req] $T [base_resize_ack]
          }
          ptr_deref_499_base_address_calculated &-> (ptr_deref_499_base_addr_resize)
          ptr_deref_499_base_address_resized <-& (ptr_deref_499_base_addr_resize)
          ;;[ptr_deref_499_base_plus_offset] 
          {
            $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
          }
          ptr_deref_499_base_address_resized &-> (ptr_deref_499_base_plus_offset)
          ptr_deref_499_root_address_calculated <-& (ptr_deref_499_base_plus_offset)
          ;;[ptr_deref_499_word_addrgen] 
          {
            $T [root_register_req] $T [root_register_ack]
          }
          ptr_deref_499_root_address_calculated &-> (ptr_deref_499_word_addrgen)
          ptr_deref_499_word_address_calculated <-& (ptr_deref_499_word_addrgen)
          ;;[ptr_deref_499_request] 
          {
            $T [split_req] $T [split_ack]
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[ptr_deref_499_complete] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          ptr_deref_499_trigger_ &-> (ptr_deref_499_request)
          ptr_deref_499_active_ <-& (ptr_deref_499_request)
          ptr_deref_499_active_ &-> (ptr_deref_499_complete)
          ptr_deref_499_completed_ <-& (ptr_deref_499_complete)
          ptr_deref_499_root_address_calculated o<-& (ptr_deref_499_active_)
          ptr_deref_499_trigger_ <-& (ptr_deref_499_word_address_calculated)
          ptr_deref_499_base_address_calculated <-& (simple_obj_ref_498_completed_)
          ptr_deref_499_trigger_ <-& (ptr_deref_499_base_address_calculated)
          addr_of_473_active_ o<-& (ptr_deref_499_active_)
          ptr_deref_499_trigger_ o<-& (ptr_deref_499_active_)
          ptr_deref_499_active_ o<-& (ptr_deref_499_completed_)
          ptr_deref_499_trigger_ <-& (assign_stmt_501_active_)
          assign_stmt_501_completed_ <-& (ptr_deref_499_completed_)
          ptr_deref_499_active_ o<-& (ptr_deref_499_completed_)
          // 			indvarx_xnext := (indvar + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          //  file prog.linked.opt.aa, line 273
          $T[assign_stmt_507_trigger_] 
          $T[assign_stmt_507_active_] 
          $T[assign_stmt_507_completed_] 
          assign_stmt_507_active_ <-& (assign_stmt_507_trigger_)
          // (indvar + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          $T[binary_506_trigger_] 
          $T[binary_506_active_] 
          $T[binary_506_completed_] 
          $T[binary_506_sample_start_] 
          $T[binary_506_sample_completed_] 
          $T[binary_506_update_start_] 
          $T[binary_506_update_completed_] 
          binary_506_sample_start_ <-& (binary_506_trigger_)
          binary_506_update_start_ <-& (binary_506_trigger_)
          binary_506_completed_ <-& (binary_506_update_completed_)
          binary_506_completed_ <-& (binary_506_sample_completed_)
          // indvar
          $T[simple_obj_ref_503_trigger_] 
          $T[simple_obj_ref_503_active_] 
          $T[simple_obj_ref_503_completed_] 
          // implicit reference
          simple_obj_ref_503_trigger_ <-& (phi_stmt_464_completed_)
          simple_obj_ref_503_completed_ <-& (simple_obj_ref_503_active_)
          simple_obj_ref_503_active_ <-& (simple_obj_ref_503_trigger_)
          binary_506_trigger_ <-& (simple_obj_ref_503_completed_)
          ;;[binary_506_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[binary_506_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          binary_506_sample_start_ &-> (binary_506_Sample)
          binary_506_sample_completed_ <-& (binary_506_Sample)
          binary_506_update_start_ &-> (binary_506_Update)
          binary_506_update_completed_ <-& (binary_506_Update)
          phi_stmt_464_enable_ o<-& (binary_506_sample_completed_)
          binary_506_sample_start_ o<-& (binary_506_sample_completed_)
          binary_506_update_start_ o<-& (binary_506_update_completed_)
          assign_stmt_507_trigger_ <-& (binary_506_completed_)
          binary_506_update_start_ o<-& (assign_stmt_507_completed_)
          // indvarx_xnext
          // implicit reference
          assign_stmt_507_completed_ <-& (assign_stmt_507_active_)
          // WAR dependency: Read: indvarx_xnext before Write: 			indvarx_xnext := (indvar + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          binary_506_trigger_ <-& (phi_stmt_464_completed_)
          // WAR dependency: release  Read: indvarx_xnext with Write: 			indvarx_xnext := (indvar + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
          simple_obj_ref_466_trigger_ o<-& (assign_stmt_507_completed_)
          // 			exitcond1 := (indvarx_xnext == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
          //  file prog.linked.opt.aa, line 274
          $T[assign_stmt_513_trigger_] 
          $T[assign_stmt_513_active_] 
          $T[assign_stmt_513_completed_] 
          assign_stmt_513_active_ <-& (assign_stmt_513_trigger_)
          // (indvarx_xnext == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
          $T[binary_512_trigger_] 
          $T[binary_512_active_] 
          $T[binary_512_completed_] 
          $T[binary_512_sample_start_] 
          $T[binary_512_sample_completed_] 
          $T[binary_512_update_start_] 
          $T[binary_512_update_completed_] 
          binary_512_sample_start_ <-& (binary_512_trigger_)
          binary_512_update_start_ <-& (binary_512_trigger_)
          binary_512_completed_ <-& (binary_512_update_completed_)
          binary_512_completed_ <-& (binary_512_sample_completed_)
          // indvarx_xnext
          $T[simple_obj_ref_509_trigger_] 
          $T[simple_obj_ref_509_active_] 
          $T[simple_obj_ref_509_completed_] 
          // implicit reference
          simple_obj_ref_509_trigger_ <-& (assign_stmt_507_completed_)
          simple_obj_ref_509_completed_ <-& (simple_obj_ref_509_active_)
          simple_obj_ref_509_active_ <-& (simple_obj_ref_509_trigger_)
          binary_512_trigger_ <-& (simple_obj_ref_509_completed_)
          ;;[binary_512_Sample] 
          {
            // binary expression 
            $T [rr] $T [ra]  // (split) binary operation 
          }
          ;;[binary_512_Update] 
          {
            // binary expression 
            $T [cr] $T [ca] // (split) binary operation 
          }
          binary_512_sample_start_ &-> (binary_512_Sample)
          binary_512_sample_completed_ <-& (binary_512_Sample)
          binary_512_update_start_ &-> (binary_512_Update)
          binary_512_update_completed_ <-& (binary_512_Update)
          binary_506_update_start_ o<-& (binary_512_sample_completed_)
          binary_512_sample_start_ o<-& (binary_512_sample_completed_)
          binary_512_update_start_ o<-& (binary_512_update_completed_)
          assign_stmt_513_trigger_ <-& (binary_512_completed_)
          binary_512_update_start_ o<-& (assign_stmt_513_completed_)
          // exitcond1
          // implicit reference
          assign_stmt_513_completed_ <-& (assign_stmt_513_active_)
          $T[condition_evaluated] 
          // ( ~ exitcond1 )
          $T[unary_516_trigger_] 
          $T[unary_516_active_] 
          $T[unary_516_completed_] 
          $T[unary_516_sample_start_] 
          $T[unary_516_sample_completed_] 
          $T[unary_516_update_start_] 
          $T[unary_516_update_completed_] 
          unary_516_sample_start_ <-& (unary_516_trigger_)
          unary_516_update_start_ <-& (unary_516_trigger_)
          unary_516_completed_ <-& (unary_516_update_completed_)
          unary_516_completed_ <-& (unary_516_sample_completed_)
          // exitcond1
          $T[simple_obj_ref_515_trigger_] 
          $T[simple_obj_ref_515_active_] 
          $T[simple_obj_ref_515_completed_] 
          // implicit reference
          simple_obj_ref_515_trigger_ <-& (assign_stmt_513_completed_)
          simple_obj_ref_515_completed_ <-& (simple_obj_ref_515_active_)
          simple_obj_ref_515_active_ <-& (simple_obj_ref_515_trigger_)
          unary_516_trigger_ <-& (simple_obj_ref_515_completed_)
          ;;[unary_516_Sample] 
          {
            // unary expression 
            $T [rr] $T [ra] // (split) unary operation
          }
          ;;[unary_516_Update] 
          {
            // unary expression 
            $T [cr] $T [ca] //(split) unary operation
          }
          unary_516_sample_start_ &-> (unary_516_Sample)
          unary_516_sample_completed_ <-& (unary_516_Sample)
          unary_516_update_start_ &-> (unary_516_Update)
          unary_516_update_completed_ <-& (unary_516_Update)
          binary_512_update_start_ o<-& (unary_516_active_)
          unary_516_sample_start_ o<-& (unary_516_sample_completed_)
          unary_516_update_start_ o<-& (unary_516_update_completed_)
          unary_516_completed_ &-> (condition_evaluated)
          condition_evaluated &-> ($null)
          // load-store dependencies..
          // reenable across ring for memory space memory_space_0
          // leading and trailing sets are the same... no ring dependency
          // reenable across ring for memory space memory_space_1
          // leading and trailing sets are the same... no ring dependency
          // reenable across ring for memory space memory_space_2
          // leading and trailing sets are the same... no ring dependency
        }
        (back_edge_to_loop_body first_time_through_loop_body) // exported inputs
        ( condition_evaluated ) // exported outputs
        // do_while_stmt_462_loop_body
        ;; [loop_exit] 
        {
          $T [ack] 
        }
        ;; [loop_taken] 
        {
          $T [ack] 
        }
        do_while_stmt_462__entry__ <-| ($entry)
        loop_body_done <-| ( do_while_stmt_462_loop_body ) 
        condition_done |-> (loop_exit loop_taken)
        do_while_stmt_462__exit__ |-> ($exit)
        $bind condition_done <= do_while_stmt_462_loop_body : condition_evaluated$bind do_while_stmt_462__entry__  => do_while_stmt_462_loop_body : first_time_through_loop_body 
        $bind loop_back  => do_while_stmt_462_loop_body : back_edge_to_loop_body 
        $terminate (loop_exit loop_taken loop_body_done) (loop_back do_while_stmt_462__exit__)
      }
      do_while_stmt_462__entry__ |-> (do_while_stmt_462)
      do_while_stmt_462__exit__ <-| (do_while_stmt_462)
      // control-path for merge  
      //  file prog.linked.opt.aa, line 259
      //---------------------   merge statement  file prog.linked.opt.aa, line 259  --------------------------
      ||[bbx_xnph_bb_1_PhiReq] 
      {
        ;;[phi_stmt_456] 
        {
          ||[phi_stmt_456_sources] 
          {
            // sources for 			$phi indvar_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1 // type of target is $uint<32>
          }
          $T [phi_stmt_456_req] 
        }
      }
      bbx_xnph_bb_1 |-> (bbx_xnph_bb_1_PhiReq)
      $P [merge_stmt_455_PhiReqMerge] 
      merge_stmt_455_PhiReqMerge <-| ( bbx_xnph_bb_1_PhiReq )
      ||[merge_stmt_455_PhiAck] 
      {
        $T [phi_stmt_456_ack] 
      }
      merge_stmt_455_PhiReqMerge |-> (merge_stmt_455_PhiAck)
      merge_stmt_455__exit__  <-| (merge_stmt_455_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 259  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 277
      //---------------------   merge statement  file prog.linked.opt.aa, line 277  --------------------------
      ||[bb_1_xx_x_crit_edge_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_xx_x_crit_edge |-> (bb_1_xx_x_crit_edge_PhiReq)
      $P [merge_stmt_518_PhiReqMerge] 
      merge_stmt_518_PhiReqMerge <-| ( bb_1_xx_x_crit_edge_PhiReq )
      ||[merge_stmt_518_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_518_PhiReqMerge |-> (merge_stmt_518_PhiAck)
      merge_stmt_518__exit__  <-| (merge_stmt_518_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 277  --------------------------
      // control-path for merge  
      //  file prog.linked.opt.aa, line 280
      //---------------------   merge statement  file prog.linked.opt.aa, line 280  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_520_PhiReqMerge] 
      merge_stmt_520_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_520_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_520_PhiReqMerge |-> (merge_stmt_520_PhiAck)
      merge_stmt_520__exit__  <-| (merge_stmt_520_PhiAck)
      //---------------------  end of merge statement  file prog.linked.opt.aa, line 280  --------------------------
      bbx_xnph_bb_1 <-| (branch_block_stmt_453__entry__)
      do_while_stmt_462__entry__ <-| (merge_stmt_455__exit__)
      bb_1_xx_x_crit_edge <-| (do_while_stmt_462__exit__)
      return__ <-| (merge_stmt_518__exit__)
      merge_stmt_520__exit__ |-> (branch_block_stmt_453__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %x_vectorSum_%body%
    //  file prog.linked.opt.aa, line 259
    // constant-object-declarations for block %x_vectorSum_%body%
    //  file prog.linked.opt.aa, line 263
    // constant-object-declarations for block %x_vectorSum_%body%
    //  file prog.linked.opt.aa, line 277
    // constant-object-declarations for block %x_vectorSum_%body%
    //  file prog.linked.opt.aa, line 280
    // constant-object-declarations for block %x_vectorSum_%body
    //  file prog.linked.opt.aa, line 256
    // constant-object-declarations for block %x_vectorSum_
    //  file prog.linked.opt.aa, line 251
    // constant-declarations for block %x_vectorSum_%body
    //  file prog.linked.opt.aa, line 256
    // constant-declarations for block %x_vectorSum_%body%
    //  file prog.linked.opt.aa, line 259
    // constant-declarations for phi:  			$phi indvar_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 260
    // ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) )
    $constant $W[type_cast_460_wire_constant] : $int<32> := _b00000000000000000000000000000000// 0
    // do-while statement  
    //  file prog.linked.opt.aa, line 262
    // constant-declarations for block %x_vectorSum_%body%
    //  file prog.linked.opt.aa, line 263
    // constant-declarations for phi:  			$phi indvar := 			  ($cast ($uint<32>) indvarx_xnext ) $on $loopback			  indvar_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 264
    // @(C[indvar])
    $constant $W[array_obj_ref_472_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_472_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // @(B[indvar])
    $constant $W[array_obj_ref_477_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_477_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // @(A[indvar])
    $constant $W[array_obj_ref_482_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_482_offset_scale_factor_0] : $int<7> := _b0000001// 1
    // ->(scevgep)
    $constant $W[ptr_deref_487_word_offset_0] : $int<7> := _b0000000// 0
    // ->(scevgep2)
    $constant $W[ptr_deref_491_word_offset_0] : $int<7> := _b0000000// 0
    // ->(scevgep3)
    $constant $W[ptr_deref_499_word_offset_0] : $int<7> := _b0000000// 0
    // ($bitcast ($uint<32>) _b00000000000000000000000000000001  )
    $constant $W[type_cast_505_wire_constant] : $int<32> := _b00000000000000000000000000000001// 1
    // ($bitcast ($uint<32>) _b00000000000000000000000001000000  )
    $constant $W[type_cast_511_wire_constant] : $int<32> := _b00000000000000000000000001000000// 64
    // constant-declarations for block %x_vectorSum_%body%
    //  file prog.linked.opt.aa, line 277
    // constant-declarations for block %x_vectorSum_%body%
    //  file prog.linked.opt.aa, line 280
    // block %x_vectorSum_%body
    //  file prog.linked.opt.aa, line 256
    // merge-statement  
    //  file prog.linked.opt.aa, line 259
    // 			$phi indvar_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 260
    // indvar_at_entry
    $W[indvar_at_entry_456] : $int<32>
    // do-while statement  
    //  file prog.linked.opt.aa, line 262
    // ( ~ exitcond1 )
    $intermediate $W[unary_516_wire] : $int<1>
    // merge-statement  
    //  file prog.linked.opt.aa, line 263
    // 			$phi indvar := 			  ($cast ($uint<32>) indvarx_xnext ) $on $loopback			  indvar_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 264
    // ($cast ($uint<32>) indvarx_xnext )
    $intermediate $W[type_cast_467_wire] : $int<32>
    // indvar
    $W[indvar_464] : $int<32>
    // 			scevgep3 := @(C[indvar])
    //  file prog.linked.opt.aa, line 266
    // @(C[indvar])
    $intermediate $W[simple_obj_ref_471_resized] : $int<7>
    $intermediate $W[simple_obj_ref_471_scaled] : $int<7>
    $intermediate $W[array_obj_ref_472_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_472_root_address] : $int<7>
    // scevgep3
    $W[scevgep3_474] : $int<32>
    // 			scevgep2 := @(B[indvar])
    //  file prog.linked.opt.aa, line 267
    // @(B[indvar])
    $intermediate $W[simple_obj_ref_476_resized] : $int<7>
    $intermediate $W[simple_obj_ref_476_scaled] : $int<7>
    $intermediate $W[array_obj_ref_477_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_477_root_address] : $int<7>
    // scevgep2
    $W[scevgep2_479] : $int<32>
    // 			scevgep := @(A[indvar])
    //  file prog.linked.opt.aa, line 268
    // @(A[indvar])
    $intermediate $W[simple_obj_ref_481_resized] : $int<7>
    $intermediate $W[simple_obj_ref_481_scaled] : $int<7>
    $intermediate $W[array_obj_ref_482_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_482_root_address] : $int<7>
    // scevgep
    $W[scevgep_484] : $int<32>
    // 			iNsTr_2 := ->(scevgep)
    //  file prog.linked.opt.aa, line 269
    // ->(scevgep)
    $intermediate $W[ptr_deref_487_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_487_root_address] : $int<7>
    $W[ptr_deref_487_word_address_0] : $pointer<memory_space_0>
    $W[ptr_deref_487_data_0] : $int<32>
    // iNsTr_2
    $W[iNsTr_2_488] : $float<8,23>
    // 			iNsTr_3 := ->(scevgep2)
    //  file prog.linked.opt.aa, line 270
    // ->(scevgep2)
    $intermediate $W[ptr_deref_491_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_491_root_address] : $int<7>
    $W[ptr_deref_491_word_address_0] : $pointer<memory_space_1>
    $W[ptr_deref_491_data_0] : $int<32>
    // iNsTr_3
    $W[iNsTr_3_492] : $float<8,23>
    // 			iNsTr_4 := (iNsTr_2 + iNsTr_3)
    //  file prog.linked.opt.aa, line 271
    // iNsTr_4
    $W[iNsTr_4_497] : $float<8,23>
    // 			->(scevgep3) := iNsTr_4
    //  file prog.linked.opt.aa, line 272
    // ->(scevgep3)
    $intermediate $W[ptr_deref_499_wire] : $float<8,23>
    $intermediate $W[ptr_deref_499_resized_base_address] : $int<7>
    $intermediate $W[ptr_deref_499_root_address] : $int<7>
    $W[ptr_deref_499_word_address_0] : $pointer<memory_space_2>
    $W[ptr_deref_499_data_0] : $int<32>
    // 			indvarx_xnext := (indvar + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 273
    // indvarx_xnext
    $W[indvarx_xnext_507] : $int<32>
    // 			exitcond1 := (indvarx_xnext == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 274
    // exitcond1
    $W[exitcond1_513] : $int<1>
    // datapath-instances for block %x_vectorSum_%body
    //  file prog.linked.opt.aa, line 256
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 259
    // 			$phi indvar_at_entry := 			  ($cast ($uint<32>) ($bitcast ($uint<32>) _b00000000000000000000000000000000  ) ) $on bbx_xnph_bb_1 // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 260
    $phi [phi_stmt_456] (type_cast_460_wire_constant) ( indvar_at_entry_456 )
    // datapath-instances for do-while  
    //  file prog.linked.opt.aa, line 262
    // ( ~ exitcond1 )
    ~ [unary_516_inst] (exitcond1_513) (unary_516_wire)  
    ==0? [do_while_stmt_462_branch] (unary_516_wire)
    // data-path instances for merge  
    //  file prog.linked.opt.aa, line 263
    // 			$phi indvar := 			  ($cast ($uint<32>) indvarx_xnext ) $on $loopback			  indvar_at_entry $on $entry // type of target is $uint<32>
    //  file prog.linked.opt.aa, line 264
    // ($cast ($uint<32>) indvarx_xnext )
    := [type_cast_467_inst] (indvarx_xnext_507) (type_cast_467_wire)  
    $phi [phi_stmt_464] (type_cast_467_wire indvar_at_entry_456) ( indvar_464 )
    // 			scevgep3 := @(C[indvar])
    //  file prog.linked.opt.aa, line 266
    &/ [array_obj_ref_472_index_0_resize] (indvar_464) (simple_obj_ref_471_resized) 
    &/ [array_obj_ref_472_index_0_rename] (simple_obj_ref_471_resized) (simple_obj_ref_471_scaled) 
    &/ [array_obj_ref_472_offset_inst] (simple_obj_ref_471_scaled) (array_obj_ref_472_final_offset) 
    &/ [array_obj_ref_472_root_address_inst] (array_obj_ref_472_final_offset) (array_obj_ref_472_root_address) 
    := [addr_of_473_final_reg] (array_obj_ref_472_root_address) (scevgep3_474)  
    // 			scevgep2 := @(B[indvar])
    //  file prog.linked.opt.aa, line 267
    &/ [array_obj_ref_477_index_0_resize] (indvar_464) (simple_obj_ref_476_resized) 
    &/ [array_obj_ref_477_index_0_rename] (simple_obj_ref_476_resized) (simple_obj_ref_476_scaled) 
    &/ [array_obj_ref_477_offset_inst] (simple_obj_ref_476_scaled) (array_obj_ref_477_final_offset) 
    &/ [array_obj_ref_477_root_address_inst] (array_obj_ref_477_final_offset) (array_obj_ref_477_root_address) 
    := [addr_of_478_final_reg] (array_obj_ref_477_root_address) (scevgep2_479)  
    // 			scevgep := @(A[indvar])
    //  file prog.linked.opt.aa, line 268
    &/ [array_obj_ref_482_index_0_resize] (indvar_464) (simple_obj_ref_481_resized) 
    &/ [array_obj_ref_482_index_0_rename] (simple_obj_ref_481_resized) (simple_obj_ref_481_scaled) 
    &/ [array_obj_ref_482_offset_inst] (simple_obj_ref_481_scaled) (array_obj_ref_482_final_offset) 
    &/ [array_obj_ref_482_root_address_inst] (array_obj_ref_482_final_offset) (array_obj_ref_482_root_address) 
    := [addr_of_483_final_reg] (array_obj_ref_482_root_address) (scevgep_484)  
    // 			iNsTr_2 := ->(scevgep)
    //  file prog.linked.opt.aa, line 269
    // ->(scevgep)
    &/ [ptr_deref_487_base_resize] (scevgep_484) (ptr_deref_487_resized_base_address) 
    &/ [ptr_deref_487_root_address_inst] (ptr_deref_487_resized_base_address) (ptr_deref_487_root_address) 
    &/ [ptr_deref_487_addr_0] (ptr_deref_487_root_address) (ptr_deref_487_word_address_0) 
    $load [ptr_deref_487_load_0] $from memory_space_0 (ptr_deref_487_word_address_0) (ptr_deref_487_data_0) 
    &/ [ptr_deref_487_gather_scatter] (ptr_deref_487_data_0) (iNsTr_2_488) 
    // 			iNsTr_3 := ->(scevgep2)
    //  file prog.linked.opt.aa, line 270
    // ->(scevgep2)
    &/ [ptr_deref_491_base_resize] (scevgep2_479) (ptr_deref_491_resized_base_address) 
    &/ [ptr_deref_491_root_address_inst] (ptr_deref_491_resized_base_address) (ptr_deref_491_root_address) 
    &/ [ptr_deref_491_addr_0] (ptr_deref_491_root_address) (ptr_deref_491_word_address_0) 
    $load [ptr_deref_491_load_0] $from memory_space_1 (ptr_deref_491_word_address_0) (ptr_deref_491_data_0) 
    &/ [ptr_deref_491_gather_scatter] (ptr_deref_491_data_0) (iNsTr_3_492) 
    // 			iNsTr_4 := (iNsTr_2 + iNsTr_3)
    //  file prog.linked.opt.aa, line 271
    // (iNsTr_2 + iNsTr_3)
    +[binary_496_inst] (iNsTr_2_488 iNsTr_3_492) (iNsTr_4_497) 
    // 			->(scevgep3) := iNsTr_4
    //  file prog.linked.opt.aa, line 272
    // ->(scevgep3)
    &/ [ptr_deref_499_base_resize] (scevgep3_474) (ptr_deref_499_resized_base_address) 
    &/ [ptr_deref_499_root_address_inst] (ptr_deref_499_resized_base_address) (ptr_deref_499_root_address) 
    &/ [ptr_deref_499_addr_0] (ptr_deref_499_root_address) (ptr_deref_499_word_address_0) 
    $store [ptr_deref_499_store_0] $to memory_space_2 (ptr_deref_499_word_address_0 ptr_deref_499_data_0) 
    &/ [ptr_deref_499_gather_scatter] (iNsTr_4_497) (ptr_deref_499_data_0) 
    // 			indvarx_xnext := (indvar + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    //  file prog.linked.opt.aa, line 273
    // (indvar + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
    +[binary_506_inst] (indvar_464 type_cast_505_wire_constant) (indvarx_xnext_507) 
    // 			exitcond1 := (indvarx_xnext == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    //  file prog.linked.opt.aa, line 274
    // (indvarx_xnext == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
    ==[binary_512_inst] (indvarx_xnext_507 type_cast_511_wire_constant) (exitcond1_513) 
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 259
  phi_stmt_456 <=> (branch_block_stmt_453/bbx_xnph_bb_1_PhiReq/phi_stmt_456/phi_stmt_456_req) (branch_block_stmt_453/merge_stmt_455_PhiAck/phi_stmt_456_ack)
  // CP-DP links for do-while  do_while_stmt_462
  //  file prog.linked.opt.aa, line 262
  phi_stmt_464 <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/phi_stmt_464_req_0 branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/phi_stmt_464_req_1) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/phi_stmt_464_ack)
  // ($cast ($uint<32>) indvarx_xnext )
  type_cast_467_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/type_cast_467_complete/req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/type_cast_467_complete/ack)
  // 			scevgep3 := @(C[indvar])
  //  file prog.linked.opt.aa, line 266
  array_obj_ref_472_index_0_resize <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_472_index_resize_0/index_resize_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_472_index_resize_0/index_resize_ack)
  array_obj_ref_472_index_0_rename <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_472_index_scale_0/scale_rename_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_472_index_scale_0/scale_rename_ack)
  array_obj_ref_472_offset_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_472_add_indices/final_index_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_472_add_indices/final_index_ack)
  array_obj_ref_472_root_address_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_472_base_plus_offset/sum_rename_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_472_base_plus_offset/sum_rename_ack)
  addr_of_473_final_reg <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/addr_of_473_complete/final_reg_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/addr_of_473_complete/final_reg_ack)
  // 			scevgep2 := @(B[indvar])
  //  file prog.linked.opt.aa, line 267
  array_obj_ref_477_index_0_resize <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_477_index_resize_0/index_resize_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_477_index_resize_0/index_resize_ack)
  array_obj_ref_477_index_0_rename <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_477_index_scale_0/scale_rename_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_477_index_scale_0/scale_rename_ack)
  array_obj_ref_477_offset_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_477_add_indices/final_index_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_477_add_indices/final_index_ack)
  array_obj_ref_477_root_address_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_477_base_plus_offset/sum_rename_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_477_base_plus_offset/sum_rename_ack)
  addr_of_478_final_reg <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/addr_of_478_complete/final_reg_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/addr_of_478_complete/final_reg_ack)
  // 			scevgep := @(A[indvar])
  //  file prog.linked.opt.aa, line 268
  array_obj_ref_482_index_0_resize <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_482_index_resize_0/index_resize_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_482_index_resize_0/index_resize_ack)
  array_obj_ref_482_index_0_rename <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_482_index_scale_0/scale_rename_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_482_index_scale_0/scale_rename_ack)
  array_obj_ref_482_offset_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_482_add_indices/final_index_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_482_add_indices/final_index_ack)
  array_obj_ref_482_root_address_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_482_base_plus_offset/sum_rename_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/array_obj_ref_482_base_plus_offset/sum_rename_ack)
  addr_of_483_final_reg <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/addr_of_483_complete/final_reg_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/addr_of_483_complete/final_reg_ack)
  // 			iNsTr_2 := ->(scevgep)
  //  file prog.linked.opt.aa, line 269
  ptr_deref_487_base_resize <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_base_addr_resize/base_resize_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_base_addr_resize/base_resize_ack)
  ptr_deref_487_root_address_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_base_plus_offset/sum_rename_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_base_plus_offset/sum_rename_ack)
  ptr_deref_487_addr_0 <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_word_addrgen/root_register_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_word_addrgen/root_register_ack)
  ptr_deref_487_gather_scatter <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_complete/merge_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_complete/merge_ack)
  ptr_deref_487_load_0 <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_request/word_access/word_access_0/rr branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_complete/word_access/word_access_0/cr) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_request/word_access/word_access_0/ra branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_487_complete/word_access/word_access_0/ca)
  // 			iNsTr_3 := ->(scevgep2)
  //  file prog.linked.opt.aa, line 270
  ptr_deref_491_base_resize <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_base_addr_resize/base_resize_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_base_addr_resize/base_resize_ack)
  ptr_deref_491_root_address_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_base_plus_offset/sum_rename_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_base_plus_offset/sum_rename_ack)
  ptr_deref_491_addr_0 <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_word_addrgen/root_register_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_word_addrgen/root_register_ack)
  ptr_deref_491_gather_scatter <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_complete/merge_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_complete/merge_ack)
  ptr_deref_491_load_0 <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_request/word_access/word_access_0/rr branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_complete/word_access/word_access_0/cr) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_request/word_access/word_access_0/ra branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_491_complete/word_access/word_access_0/ca)
  // 			iNsTr_4 := (iNsTr_2 + iNsTr_3)
  //  file prog.linked.opt.aa, line 271
  // (iNsTr_2 + iNsTr_3)
  binary_496_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_496_Sample/rr branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_496_Update/cr) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_496_Sample/ra branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_496_Update/ca)
  // 			->(scevgep3) := iNsTr_4
  //  file prog.linked.opt.aa, line 272
  ptr_deref_499_base_resize <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_base_addr_resize/base_resize_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_base_addr_resize/base_resize_ack)
  ptr_deref_499_root_address_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_base_plus_offset/sum_rename_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_base_plus_offset/sum_rename_ack)
  ptr_deref_499_addr_0 <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_word_addrgen/root_register_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_word_addrgen/root_register_ack)
  ptr_deref_499_gather_scatter <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_request/split_req) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_request/split_ack)
  ptr_deref_499_store_0 <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_request/word_access/word_access_0/rr branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_complete/word_access/word_access_0/cr) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_request/word_access/word_access_0/ra branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/ptr_deref_499_complete/word_access/word_access_0/ca)
  // 			indvarx_xnext := (indvar + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  //  file prog.linked.opt.aa, line 273
  // (indvar + ($bitcast ($uint<32>) _b00000000000000000000000000000001  ))
  binary_506_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_506_Sample/rr branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_506_Update/cr) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_506_Sample/ra branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_506_Update/ca)
  // 			exitcond1 := (indvarx_xnext == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  //  file prog.linked.opt.aa, line 274
  // (indvarx_xnext == ($bitcast ($uint<32>) _b00000000000000000000000001000000  ))
  binary_512_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_512_Sample/rr branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_512_Update/cr) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_512_Sample/ra branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/binary_512_Update/ca)
  // ( ~ exitcond1 )
  unary_516_inst <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/unary_516_Sample/rr branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/unary_516_Update/cr) (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/unary_516_Sample/ra branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/unary_516_Update/ca)
  do_while_stmt_462_branch <=> (branch_block_stmt_453/do_while_stmt_462/do_while_stmt_462_loop_body/condition_evaluated) (branch_block_stmt_453/do_while_stmt_462/loop_exit/ack branch_block_stmt_453/do_while_stmt_462/loop_taken/ack)
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 277
  // CP-DP links for merge  
  //  file prog.linked.opt.aa, line 280
}
