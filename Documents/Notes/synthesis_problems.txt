
1. The call and return tags on the system are unconstrained.

Since the size of these tags depends on the number of callers to the
sytem itself, the tag ports are unconstrained std_logic_vectors. The
result is a compiler error that looks like this:

--------------------------------------------
ERROR:HDLCompiler:432 -
"/home/kevin/GIT_AHIR/examples/memory_try/system.vhdl" Line 17: Formal
<env_call_tag> has no actual or default value.
--------------------------------------------

The solution is to connect constrained signals to these ports either
in a wrapper entity for synthesis, or in the test-bench for
simulation.

2. Xilinx XST has problems dealing with unconstrained ports ---
whenever a component with unconstrained port is instantiated two times
with different port widths, XST complains that the second instance is
illegal. In particular, this problem is triggered by the instantiation
of InputMuxBase inside OperatorShared.

The current solution is the following hack, that is good enough for
the fft_io being used by Kevin. A new component InputMuxBase_32 was
introduced whose internals are same as InputMuxBase but uses a
constrained type for its ports. OperatorShared.vhd has been modified
to instantiated either this or the original InputMuxBase depending on
the inferred port width. This is ``good enough'' for Kevin's work
because only two widths are required --- 16 and 32.
