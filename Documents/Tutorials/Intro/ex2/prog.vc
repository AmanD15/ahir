// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  in_data : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [in_data] 32 $depth 1 
// $pipe  out_data : $uint<32>  $depth 1 
// can point into 
// in scope  top-level
$pipe [out_data] 32 $depth 1 
$module [maxDaemon] 
{
  // pipe-declarations for block %maxDaemon
  //  file prog.aa, line 4
  // pipe-declarations for block %maxDaemon%body
  //  file prog.aa, line 9
  // pipe-declarations for block %maxDaemon%body%
  //  file prog.aa, line 14
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_4] // Branch Block  file prog.aa, line 9
    {
      $P [branch_block_stmt_4__entry__]
      branch_block_stmt_4__entry__ <-| ($entry)
      $P [branch_block_stmt_4__exit__]
      branch_block_stmt_4__exit__ |-> ($exit)
      $P [bb_0_bb_1]
      $P [merge_stmt_6__exit__] 
      $P [assign_stmt_9__entry__] 
      $P [assign_stmt_9__exit__] 
      $P [assign_stmt_12__entry__] 
      $P [assign_stmt_12__exit__] 
      $P [assign_stmt_18_to_assign_stmt_24__entry__] 
      $P [assign_stmt_18_to_assign_stmt_24__exit__] 
      $P [assign_stmt_27__entry__] 
      $P [assign_stmt_27__exit__] 
      $P [bb_1_bb_1]
      ::[assign_stmt_9] 
      {
        // 		iNsTr_2 := in_data
        //  file prog.aa, line 16
        // Source expression
        // in_data
        $T[RPIPE_in_data_8_sample_start_] 
        $T[RPIPE_in_data_8_sample_completed_] 
        $T[RPIPE_in_data_8_update_start_] 
        $T[RPIPE_in_data_8_update_completed_] 
        ;;[RPIPE_in_data_8_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_8_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_8_sample_start_ &-> (RPIPE_in_data_8_Sample)
        RPIPE_in_data_8_sample_completed_ <-& (RPIPE_in_data_8_Sample)
        RPIPE_in_data_8_sample_completed_ &-> ($null)
        RPIPE_in_data_8_update_start_ &-> (RPIPE_in_data_8_Update)
        RPIPE_in_data_8_update_completed_ <-& (RPIPE_in_data_8_Update)
        // Target expression
        // (as target) iNsTr_2
        // iNsTr_2
        // implicit reference
        // barrier: 		iNsTr_2 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_9__entry__ |-> (assign_stmt_9)
      assign_stmt_9__exit__ <-| (assign_stmt_9)
      ::[assign_stmt_12] 
      {
        // 		iNsTr_4 := in_data
        //  file prog.aa, line 17
        // Source expression
        // in_data
        $T[RPIPE_in_data_11_sample_start_] 
        $T[RPIPE_in_data_11_sample_completed_] 
        $T[RPIPE_in_data_11_update_start_] 
        $T[RPIPE_in_data_11_update_completed_] 
        ;;[RPIPE_in_data_11_Sample] 
        {
          // pipe read sample
          $T [rr] $T [ra] 
        }
        ;;[RPIPE_in_data_11_Update] 
        {
          // pipe read update
          $T [cr] $T [ca] 
        }
        RPIPE_in_data_11_sample_start_ &-> (RPIPE_in_data_11_Sample)
        RPIPE_in_data_11_sample_completed_ <-& (RPIPE_in_data_11_Sample)
        RPIPE_in_data_11_sample_completed_ &-> ($null)
        RPIPE_in_data_11_update_start_ &-> (RPIPE_in_data_11_Update)
        RPIPE_in_data_11_update_completed_ <-& (RPIPE_in_data_11_Update)
        // Target expression
        // (as target) iNsTr_4
        // iNsTr_4
        // implicit reference
        // barrier: 		iNsTr_4 := in_data
        // load-store dependencies..
        // pipe read/write dependencies for pipe in_data
      }
      assign_stmt_12__entry__ |-> (assign_stmt_12)
      assign_stmt_12__exit__ <-| (assign_stmt_12)
      ::[assign_stmt_18_to_assign_stmt_24] 
      {
        // 		iNsTr_5 := (iNsTr_2 > iNsTr_4)
        //  file prog.aa, line 19
        // Source expression
        // (iNsTr_2 > iNsTr_4)
        $T[UGT_u32_u1_16_sample_start_] 
        $T[UGT_u32_u1_16_sample_completed_] 
        $T[UGT_u32_u1_16_update_start_] 
        $T[UGT_u32_u1_16_update_completed_] 
        // iNsTr_2
        $T[R_iNsTr_2_14_sample_start_] 
        $T[R_iNsTr_2_14_sample_completed_] 
        $T[R_iNsTr_2_14_update_start_] 
        $T[R_iNsTr_2_14_update_completed_] 
        // implicit reference
        R_iNsTr_2_14_sample_start_ <-& ($entry)
        R_iNsTr_2_14_sample_completed_ <-& (R_iNsTr_2_14_sample_start_)
        R_iNsTr_2_14_update_start_ <-& (R_iNsTr_2_14_sample_completed_)
        R_iNsTr_2_14_update_completed_ <-& (R_iNsTr_2_14_update_start_)
        // iNsTr_4
        $T[R_iNsTr_4_15_sample_start_] 
        $T[R_iNsTr_4_15_sample_completed_] 
        $T[R_iNsTr_4_15_update_start_] 
        $T[R_iNsTr_4_15_update_completed_] 
        // implicit reference
        R_iNsTr_4_15_sample_start_ <-& ($entry)
        R_iNsTr_4_15_sample_completed_ <-& (R_iNsTr_4_15_sample_start_)
        R_iNsTr_4_15_update_start_ <-& (R_iNsTr_4_15_sample_completed_)
        R_iNsTr_4_15_update_completed_ <-& (R_iNsTr_4_15_update_start_)
        UGT_u32_u1_16_sample_start_ <-& (R_iNsTr_2_14_update_completed_)
        UGT_u32_u1_16_sample_start_ <-& (R_iNsTr_4_15_update_completed_)
        ;;[UGT_u32_u1_16_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_16_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_16_sample_start_ &-> (UGT_u32_u1_16_Sample)
        UGT_u32_u1_16_sample_completed_ <-& (UGT_u32_u1_16_Sample)
        UGT_u32_u1_16_sample_completed_ &-> ($null)
        UGT_u32_u1_16_update_start_ &-> (UGT_u32_u1_16_Update)
        UGT_u32_u1_16_update_completed_ <-& (UGT_u32_u1_16_Update)
        // Target expression
        // (as target) iNsTr_5
        // iNsTr_5
        // implicit reference
        // 		iNsTr_6 := ( $mux iNsTr_5 iNsTr_2  iNsTr_4 ) 
        //  file prog.aa, line 20
        // Source expression
        // ( $mux iNsTr_5 iNsTr_2  iNsTr_4 ) 
        $T[MUX_23_sample_start_] 
        $T[MUX_23_sample_completed_] 
        $T[MUX_23_update_start_] 
        $T[MUX_23_update_completed_] 
        // iNsTr_5
        $T[R_iNsTr_5_20_sample_start_] 
        $T[R_iNsTr_5_20_sample_completed_] 
        $T[R_iNsTr_5_20_update_start_] 
        $T[R_iNsTr_5_20_update_completed_] 
        // implicit reference
        R_iNsTr_5_20_sample_start_ <-& (UGT_u32_u1_16_update_completed_)
        R_iNsTr_5_20_sample_completed_ <-& (R_iNsTr_5_20_sample_start_)
        R_iNsTr_5_20_update_start_ <-& (R_iNsTr_5_20_sample_completed_)
        R_iNsTr_5_20_update_completed_ <-& (R_iNsTr_5_20_update_start_)
        // iNsTr_2
        $T[R_iNsTr_2_21_sample_start_] 
        $T[R_iNsTr_2_21_sample_completed_] 
        $T[R_iNsTr_2_21_update_start_] 
        $T[R_iNsTr_2_21_update_completed_] 
        // implicit reference
        R_iNsTr_2_21_sample_start_ <-& ($entry)
        R_iNsTr_2_21_sample_completed_ <-& (R_iNsTr_2_21_sample_start_)
        R_iNsTr_2_21_update_start_ <-& (R_iNsTr_2_21_sample_completed_)
        R_iNsTr_2_21_update_completed_ <-& (R_iNsTr_2_21_update_start_)
        // iNsTr_4
        $T[R_iNsTr_4_22_sample_start_] 
        $T[R_iNsTr_4_22_sample_completed_] 
        $T[R_iNsTr_4_22_update_start_] 
        $T[R_iNsTr_4_22_update_completed_] 
        // implicit reference
        R_iNsTr_4_22_sample_start_ <-& ($entry)
        R_iNsTr_4_22_sample_completed_ <-& (R_iNsTr_4_22_sample_start_)
        R_iNsTr_4_22_update_start_ <-& (R_iNsTr_4_22_sample_completed_)
        R_iNsTr_4_22_update_completed_ <-& (R_iNsTr_4_22_update_start_)
        MUX_23_sample_start_ <-& (R_iNsTr_5_20_update_completed_)
        MUX_23_sample_start_ <-& (R_iNsTr_2_21_update_completed_)
        MUX_23_sample_start_ <-& (R_iNsTr_4_22_update_completed_)
        ;;[MUX_23_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_23_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_23_sample_start_ &-> (MUX_23_start)
        MUX_23_sample_completed_ <-& (MUX_23_start)
        MUX_23_update_start_ &-> (MUX_23_complete)
        MUX_23_update_completed_ <-& (MUX_23_complete)
        MUX_23_sample_completed_ &-> ($null)
        // Target expression
        // (as target) iNsTr_6
        // iNsTr_6
        // implicit reference
        // load-store dependencies..
      }
      assign_stmt_18_to_assign_stmt_24__entry__ |-> (assign_stmt_18_to_assign_stmt_24)
      assign_stmt_18_to_assign_stmt_24__exit__ <-| (assign_stmt_18_to_assign_stmt_24)
      ::[assign_stmt_27] 
      {
        // 		out_data := iNsTr_6
        //  file prog.aa, line 21
        // Source expression
        // iNsTr_6
        $T[R_iNsTr_6_26_sample_start_] 
        $T[R_iNsTr_6_26_sample_completed_] 
        $T[R_iNsTr_6_26_update_start_] 
        $T[R_iNsTr_6_26_update_completed_] 
        // implicit reference
        R_iNsTr_6_26_sample_start_ <-& ($entry)
        R_iNsTr_6_26_sample_completed_ <-& (R_iNsTr_6_26_sample_start_)
        R_iNsTr_6_26_update_start_ <-& (R_iNsTr_6_26_sample_completed_)
        R_iNsTr_6_26_update_completed_ <-& (R_iNsTr_6_26_update_start_)
        // Target expression
        // (as target) out_data
        $T[WPIPE_out_data_25_sample_start_] 
        $T[WPIPE_out_data_25_sample_completed_] 
        $T[WPIPE_out_data_25_update_start_] 
        $T[WPIPE_out_data_25_update_completed_] 
        ;;[WPIPE_out_data_25_Sample] 
        {
          // pipe write sample-start out_data
          $T [req] $T [ack] 
        }
        ;;[WPIPE_out_data_25_Update] 
        {
          // pipe write update (complete) out_data
          $T [req] $T [ack] 
        }
        WPIPE_out_data_25_sample_start_ &-> (WPIPE_out_data_25_Sample)
        WPIPE_out_data_25_sample_completed_ <-& (WPIPE_out_data_25_Sample)
        WPIPE_out_data_25_sample_completed_ &-> ($null)
        WPIPE_out_data_25_update_start_ &-> (WPIPE_out_data_25_Update)
        WPIPE_out_data_25_update_completed_ <-& (WPIPE_out_data_25_Update)
        WPIPE_out_data_25_sample_start_ <-& (R_iNsTr_6_26_update_completed_)
        // barrier: 		out_data := iNsTr_6
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_data
      }
      assign_stmt_27__entry__ |-> (assign_stmt_27)
      assign_stmt_27__exit__ <-| (assign_stmt_27)
      // control-path for merge  
      //  file prog.aa, line 14
      //---------------------   merge statement  file prog.aa, line 14  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      ||[bb_1_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bb_1 |-> (bb_1_bb_1_PhiReq)
      $P [merge_stmt_6_PhiReqMerge] 
      merge_stmt_6_PhiReqMerge <-| ( bb_0_bb_1_PhiReq  bb_1_bb_1_PhiReq )
      ||[merge_stmt_6_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_6_PhiReqMerge |-> (merge_stmt_6_PhiAck)
      merge_stmt_6__exit__  <-| (merge_stmt_6_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 14  --------------------------
      bb_0_bb_1 <-| (branch_block_stmt_4__entry__)
      assign_stmt_9__entry__ <-| (merge_stmt_6__exit__)
      assign_stmt_12__entry__ <-| (assign_stmt_9__exit__)
      assign_stmt_18_to_assign_stmt_24__entry__ <-| (assign_stmt_12__exit__)
      assign_stmt_27__entry__ <-| (assign_stmt_18_to_assign_stmt_24__exit__)
      bb_1_bb_1 <-| (assign_stmt_27__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %maxDaemon%body%
    //  file prog.aa, line 14
    // constant-object-declarations for block %maxDaemon%body
    //  file prog.aa, line 9
    // constant-object-declarations for block %maxDaemon
    //  file prog.aa, line 4
    // constant-declarations for block %maxDaemon%body
    //  file prog.aa, line 9
    // constant-declarations for block %maxDaemon%body%
    //  file prog.aa, line 14
    // ( $mux iNsTr_5 iNsTr_2  iNsTr_4 ) 
    // block %maxDaemon%body
    //  file prog.aa, line 9
    // 		iNsTr_2 := in_data
    //  file prog.aa, line 16
    // iNsTr_2
    $W[iNsTr_2_9] : $int<32>
    // 		iNsTr_4 := in_data
    //  file prog.aa, line 17
    // iNsTr_4
    $W[iNsTr_4_12] : $int<32>
    // 		iNsTr_5 := (iNsTr_2 > iNsTr_4)
    //  file prog.aa, line 19
    // iNsTr_5
    $W[iNsTr_5_18] : $int<1>
    // 		iNsTr_6 := ( $mux iNsTr_5 iNsTr_2  iNsTr_4 ) 
    //  file prog.aa, line 20
    // iNsTr_6
    $W[iNsTr_6_24] : $int<32>
    // 		out_data := iNsTr_6
    //  file prog.aa, line 21
    // out_data
    // datapath-instances for block %maxDaemon%body
    //  file prog.aa, line 9
    // 		iNsTr_2 := in_data
    //  file prog.aa, line 16
    // in_data
    $ioport $in [RPIPE_in_data_8_inst] (in_data) (iNsTr_2_9) 
    // 		iNsTr_4 := in_data
    //  file prog.aa, line 17
    // in_data
    $ioport $in [RPIPE_in_data_11_inst] (in_data) (iNsTr_4_12) 
    // 		iNsTr_5 := (iNsTr_2 > iNsTr_4)
    //  file prog.aa, line 19
    // (iNsTr_2 > iNsTr_4)
    >[UGT_u32_u1_16_inst] (iNsTr_2_9 iNsTr_4_12) (iNsTr_5_18) 
    $delay UGT_u32_u1_16_inst 1
    // 		iNsTr_6 := ( $mux iNsTr_5 iNsTr_2  iNsTr_4 ) 
    //  file prog.aa, line 20
    // ( $mux iNsTr_5 iNsTr_2  iNsTr_4 ) 
    ? [MUX_23_inst] (iNsTr_5_18 iNsTr_2_9 iNsTr_4_12) (iNsTr_6_24) 
    // 		out_data := iNsTr_6
    //  file prog.aa, line 21
    // out_data
    $ioport $out [WPIPE_out_data_25_inst]  (iNsTr_6_24) (out_data) 
    $buffering $in WPIPE_out_data_25_inst iNsTr_6_24 1
  }
  // end data-path
  // CP-DP links for merge  
  //  file prog.aa, line 14
  // 		iNsTr_2 := in_data
  //  file prog.aa, line 16
  // in_data
  RPIPE_in_data_8_inst <=> (branch_block_stmt_4/assign_stmt_9/RPIPE_in_data_8_Sample/rr branch_block_stmt_4/assign_stmt_9/RPIPE_in_data_8_Update/cr) (branch_block_stmt_4/assign_stmt_9/RPIPE_in_data_8_Sample/ra branch_block_stmt_4/assign_stmt_9/RPIPE_in_data_8_Update/ca)
  // 		iNsTr_4 := in_data
  //  file prog.aa, line 17
  // in_data
  RPIPE_in_data_11_inst <=> (branch_block_stmt_4/assign_stmt_12/RPIPE_in_data_11_Sample/rr branch_block_stmt_4/assign_stmt_12/RPIPE_in_data_11_Update/cr) (branch_block_stmt_4/assign_stmt_12/RPIPE_in_data_11_Sample/ra branch_block_stmt_4/assign_stmt_12/RPIPE_in_data_11_Update/ca)
  // 		iNsTr_5 := (iNsTr_2 > iNsTr_4)
  //  file prog.aa, line 19
  // (iNsTr_2 > iNsTr_4)
  UGT_u32_u1_16_inst <=> (branch_block_stmt_4/assign_stmt_18_to_assign_stmt_24/UGT_u32_u1_16_Sample/rr branch_block_stmt_4/assign_stmt_18_to_assign_stmt_24/UGT_u32_u1_16_Update/cr) (branch_block_stmt_4/assign_stmt_18_to_assign_stmt_24/UGT_u32_u1_16_Sample/ra branch_block_stmt_4/assign_stmt_18_to_assign_stmt_24/UGT_u32_u1_16_Update/ca)
  // 		iNsTr_6 := ( $mux iNsTr_5 iNsTr_2  iNsTr_4 ) 
  //  file prog.aa, line 20
  // ( $mux iNsTr_5 iNsTr_2  iNsTr_4 ) 
  MUX_23_inst <=> (branch_block_stmt_4/assign_stmt_18_to_assign_stmt_24/MUX_23_start/req branch_block_stmt_4/assign_stmt_18_to_assign_stmt_24/MUX_23_complete/req) (branch_block_stmt_4/assign_stmt_18_to_assign_stmt_24/MUX_23_start/ack branch_block_stmt_4/assign_stmt_18_to_assign_stmt_24/MUX_23_complete/ack)
  // 		out_data := iNsTr_6
  //  file prog.aa, line 21
  // out_data
  WPIPE_out_data_25_inst <=> (branch_block_stmt_4/assign_stmt_27/WPIPE_out_data_25_Sample/req branch_block_stmt_4/assign_stmt_27/WPIPE_out_data_25_Update/req) (branch_block_stmt_4/assign_stmt_27/WPIPE_out_data_25_Sample/ack branch_block_stmt_4/assign_stmt_27/WPIPE_out_data_25_Update/ack)
}
