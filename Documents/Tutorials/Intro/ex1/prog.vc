// Virtual circuit produced from Aa description by Aa2VC 
$module [maxOfTwo] 
{
  $in a:$int<32>
  // can point into  foreign( $void )
  b:$int<32>
  // can point into  foreign( $void )
  $out ret_val__:$int<32>
  // can point into  foreign( $void )
  // pipe-declarations for block %maxOfTwo
  //  file prog.aa, line 2
  // pipe-declarations for block %maxOfTwo%body
  //  file prog.aa, line 7
  // pipe-declarations for block %maxOfTwo%body%
  //  file prog.aa, line 14
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_5] // Branch Block  file prog.aa, line 7
    {
      $P [branch_block_stmt_5__entry__]
      branch_block_stmt_5__entry__ <-| ($entry)
      $P [branch_block_stmt_5__exit__]
      branch_block_stmt_5__exit__ |-> ($exit)
      $P [assign_stmt_11_to_assign_stmt_17__entry__] 
      $P [assign_stmt_11_to_assign_stmt_17__exit__] 
      $P [return__]
      $P [merge_stmt_19__exit__] 
      ::[assign_stmt_11_to_assign_stmt_17] 
      {
        // 		iNsTr_0 := (a > b)
        //  file prog.aa, line 11
        // Source expression
        // (a > b)
        $T[UGT_u32_u1_9_sample_start_] 
        $T[UGT_u32_u1_9_sample_completed_] 
        $T[UGT_u32_u1_9_update_start_] 
        $T[UGT_u32_u1_9_update_completed_] 
        // a
        $T[R_a_7_sample_start_] 
        $T[R_a_7_sample_completed_] 
        $T[R_a_7_update_start_] 
        $T[R_a_7_update_completed_] 
        // reference to interface object
        R_a_7_sample_start_ <-& ($entry)
        R_a_7_sample_completed_ <-& (R_a_7_sample_start_)
        R_a_7_update_start_ <-& (R_a_7_sample_completed_)
        R_a_7_update_completed_ <-& (R_a_7_update_start_)
        // b
        $T[R_b_8_sample_start_] 
        $T[R_b_8_sample_completed_] 
        $T[R_b_8_update_start_] 
        $T[R_b_8_update_completed_] 
        // reference to interface object
        R_b_8_sample_start_ <-& ($entry)
        R_b_8_sample_completed_ <-& (R_b_8_sample_start_)
        R_b_8_update_start_ <-& (R_b_8_sample_completed_)
        R_b_8_update_completed_ <-& (R_b_8_update_start_)
        UGT_u32_u1_9_sample_start_ <-& (R_a_7_update_completed_)
        UGT_u32_u1_9_sample_start_ <-& (R_b_8_update_completed_)
        ;;[UGT_u32_u1_9_Sample] 
        {
          // binary expression 
          $T [rr] $T [ra]  // (split) binary operation 
        }
        ;;[UGT_u32_u1_9_Update] 
        {
          // binary expression 
          $T [cr] $T [ca] // (split) binary operation 
        }
        UGT_u32_u1_9_sample_start_ &-> (UGT_u32_u1_9_Sample)
        UGT_u32_u1_9_sample_completed_ <-& (UGT_u32_u1_9_Sample)
        UGT_u32_u1_9_sample_completed_ &-> ($null)
        UGT_u32_u1_9_update_start_ &-> (UGT_u32_u1_9_Update)
        UGT_u32_u1_9_update_completed_ <-& (UGT_u32_u1_9_Update)
        // Target expression
        // (as target) iNsTr_0
        // iNsTr_0
        // implicit reference
        // 		ret_val__ := ( $mux iNsTr_0 a  b ) 
        //  file prog.aa, line 12
        // Source expression
        // ( $mux iNsTr_0 a  b ) 
        $T[MUX_16_sample_start_] 
        $T[MUX_16_sample_completed_] 
        $T[MUX_16_update_start_] 
        $T[MUX_16_update_completed_] 
        // iNsTr_0
        $T[R_iNsTr_0_13_sample_start_] 
        $T[R_iNsTr_0_13_sample_completed_] 
        $T[R_iNsTr_0_13_update_start_] 
        $T[R_iNsTr_0_13_update_completed_] 
        // implicit reference
        R_iNsTr_0_13_sample_start_ <-& (UGT_u32_u1_9_update_completed_)
        R_iNsTr_0_13_sample_completed_ <-& (R_iNsTr_0_13_sample_start_)
        R_iNsTr_0_13_update_start_ <-& (R_iNsTr_0_13_sample_completed_)
        R_iNsTr_0_13_update_completed_ <-& (R_iNsTr_0_13_update_start_)
        // a
        $T[R_a_14_sample_start_] 
        $T[R_a_14_sample_completed_] 
        $T[R_a_14_update_start_] 
        $T[R_a_14_update_completed_] 
        // reference to interface object
        R_a_14_sample_start_ <-& ($entry)
        R_a_14_sample_completed_ <-& (R_a_14_sample_start_)
        R_a_14_update_start_ <-& (R_a_14_sample_completed_)
        R_a_14_update_completed_ <-& (R_a_14_update_start_)
        // b
        $T[R_b_15_sample_start_] 
        $T[R_b_15_sample_completed_] 
        $T[R_b_15_update_start_] 
        $T[R_b_15_update_completed_] 
        // reference to interface object
        R_b_15_sample_start_ <-& ($entry)
        R_b_15_sample_completed_ <-& (R_b_15_sample_start_)
        R_b_15_update_start_ <-& (R_b_15_sample_completed_)
        R_b_15_update_completed_ <-& (R_b_15_update_start_)
        MUX_16_sample_start_ <-& (R_iNsTr_0_13_update_completed_)
        MUX_16_sample_start_ <-& (R_a_14_update_completed_)
        MUX_16_sample_start_ <-& (R_b_15_update_completed_)
        ;;[MUX_16_start] 
        {
          // ternary expression: 
          $T [req] $T [ack] // sample req/ack
        }
        ;;[MUX_16_complete] 
        {
          // ternary expression: 
          $T [req] $T [ack] // update req/ack
        }
        MUX_16_sample_start_ &-> (MUX_16_start)
        MUX_16_sample_completed_ <-& (MUX_16_start)
        MUX_16_update_start_ &-> (MUX_16_complete)
        MUX_16_update_completed_ <-& (MUX_16_complete)
        MUX_16_sample_completed_ &-> ($null)
        // Target expression
        // (as target) ret_val__
        // ret_val__
        // write to interface object
        // load-store dependencies..
      }
      assign_stmt_11_to_assign_stmt_17__entry__ |-> (assign_stmt_11_to_assign_stmt_17)
      assign_stmt_11_to_assign_stmt_17__exit__ <-| (assign_stmt_11_to_assign_stmt_17)
      // control-path for merge  
      //  file prog.aa, line 14
      //---------------------   merge statement  file prog.aa, line 14  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_19_PhiReqMerge] 
      merge_stmt_19_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_19_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_19_PhiReqMerge |-> (merge_stmt_19_PhiAck)
      merge_stmt_19__exit__  <-| (merge_stmt_19_PhiAck)
      //---------------------  end of merge statement  file prog.aa, line 14  --------------------------
      assign_stmt_11_to_assign_stmt_17__entry__ <-| (branch_block_stmt_5__entry__)
      return__ <-| (assign_stmt_11_to_assign_stmt_17__exit__)
      merge_stmt_19__exit__ |-> (branch_block_stmt_5__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %maxOfTwo%body%
    //  file prog.aa, line 14
    // constant-object-declarations for block %maxOfTwo%body
    //  file prog.aa, line 7
    // constant-object-declarations for block %maxOfTwo
    //  file prog.aa, line 2
    // constant-declarations for block %maxOfTwo%body
    //  file prog.aa, line 7
    // ( $mux iNsTr_0 a  b ) 
    // constant-declarations for block %maxOfTwo%body%
    //  file prog.aa, line 14
    // block %maxOfTwo%body
    //  file prog.aa, line 7
    // 		iNsTr_0 := (a > b)
    //  file prog.aa, line 11
    // iNsTr_0
    $W[iNsTr_0_11] : $int<1>
    // 		ret_val__ := ( $mux iNsTr_0 a  b ) 
    //  file prog.aa, line 12
    // ret_val__
    // datapath-instances for block %maxOfTwo%body
    //  file prog.aa, line 7
    // 		iNsTr_0 := (a > b)
    //  file prog.aa, line 11
    // (a > b)
    >[UGT_u32_u1_9_inst] (a b) (iNsTr_0_11) 
    $delay UGT_u32_u1_9_inst 1
    // 		ret_val__ := ( $mux iNsTr_0 a  b ) 
    //  file prog.aa, line 12
    // ( $mux iNsTr_0 a  b ) 
    ? [MUX_16_inst] (iNsTr_0_11 a b) (ret_val__) 
  }
  // end data-path
  // 		iNsTr_0 := (a > b)
  //  file prog.aa, line 11
  // (a > b)
  UGT_u32_u1_9_inst <=> (branch_block_stmt_5/assign_stmt_11_to_assign_stmt_17/UGT_u32_u1_9_Sample/rr branch_block_stmt_5/assign_stmt_11_to_assign_stmt_17/UGT_u32_u1_9_Update/cr) (branch_block_stmt_5/assign_stmt_11_to_assign_stmt_17/UGT_u32_u1_9_Sample/ra branch_block_stmt_5/assign_stmt_11_to_assign_stmt_17/UGT_u32_u1_9_Update/ca)
  // 		ret_val__ := ( $mux iNsTr_0 a  b ) 
  //  file prog.aa, line 12
  // ( $mux iNsTr_0 a  b ) 
  MUX_16_inst <=> (branch_block_stmt_5/assign_stmt_11_to_assign_stmt_17/MUX_16_start/req branch_block_stmt_5/assign_stmt_11_to_assign_stmt_17/MUX_16_complete/req) (branch_block_stmt_5/assign_stmt_11_to_assign_stmt_17/MUX_16_start/ack branch_block_stmt_5/assign_stmt_11_to_assign_stmt_17/MUX_16_complete/ack)
  // CP-DP links for merge  
  //  file prog.aa, line 14
}
