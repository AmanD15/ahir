Overview
	This example illustrates how you can use your "normal" software
	to verify the hardware generated out of the AhirV2 flow.

Pre-requisites
  
        You will need clang, llvm2aa, Aa2VC and vc2vhdl to
        run the AhirV2 flow.  

	The library ../../../iolib/libio.a is necessary to 
	get access to the the read/write methods for inter-process
	communication. Go to ../../../iolib/ and type scons
	to build these libraries.

The original program

	prog.c contains the stuff we want to put in hardware:
	This program describes a system consisting of two
	independent agents foo and bar, which communicate with
	the environment and also with each other through pipes.

	The multi-threaded program testbench.c is used to drive
	foo and bar.
	
	We compile the software version of the program using
	SoftwareCompile.sh.  This produces an executable testbench.
 
        $   . SoftwareCompile.sh

	Note that here we will link to ../../../iolib to get the
        write/read functions.

To VHDL

	Run ToVHDL.sh.  This produces VHDL and two C-wrapper
	files, vhdlCStubs.h and vhdlCStubs.c

        $  . ToVHDL.sh

	We will later compile testbench.c (with a few small modifications)
        together with vhdlCStubs.c to generate a "software testbench"
        for the generated VHDL.

        The generated VHDL itself contains a VHDL testbench which
        starts a server and polls from messages from the "software testbench".

	Now copy prog_o_linked_aa_vc.vhdl to the vhdl/ directory
	and also the vhdlCStubs.c and vhdlCStubs.h files generated by
	Aa2VC -C to the vhdl/ directory.  
	
 	$ cp prog_o_linked_aa_vc.vhdl vhdl/system.vhdl
	$ cp vhdlCStubs.* vhdl/

	Also copy the testbench to the vhdl directory

        $ cp testbench.c vhdl/


Continue
	go to the VHDL directory.

	$ cd vhdl/

