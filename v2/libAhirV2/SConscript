import os

env = Environment(ENV = {'PATH' : os.environ['PATH']})
ANTLR_LIB=os.environ['ANTLR_LIB_PATH']
ANTLR_INCLUDE=os.environ['ANTLR_INCLUDE_PATH']

SConscript(['grammar/SConscript'])

#env.Append(CPPPATH=ANTLR_INCLUDE) 
env.Append(CPPPATH='./src/:./include:' + ANTLR_INCLUDE)

VariantDir('obj','src',duplicate=0)

env.Library('lib/libVC', Glob('obj/*.cpp'), CCFLAGS='-g ')
env.Program('bin/vcParse', 'util/vcParseMain.cpp', CCFLAGS='-g ',LINKFLAGS='-g ', LIBS=['VC', 'antlr' ], LIBPATH=Split('/usr/local/lib/ ./lib/'))
env.Program('bin/vcAnalyze', 'util/vcAnalyze.cpp', CCFLAGS='-g ',LINKFLAGS='-g ', LIBS=['VC', 'antlr' ], LIBPATH=Split('/usr/local/lib/ ./lib/'))
env.Program('bin/vcFormat', 'util/vcFormat.cpp',CCFLAGS='-g ', LINKFLAGS='-g ')
env.Program('bin/vhdlFormat', 'util/vhdlFormat.cpp',CCFLAGS='-g ', LINKFLAGS='-g ')
env.Program('bin/vc2vhdl', 'util/vc2vhdl.cpp', CCFLAGS='-g ',LINKFLAGS='-g ', LIBS=['VC', 'antlr' ], LIBPATH=Split('./lib/ ' + ANTLR_LIB))

