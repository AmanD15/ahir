#ifndef INC_vcParserTokenTypes_hpp_
#define INC_vcParserTokenTypes_hpp_

/* $ANTLR 2.7.7 (2006-11-01): "vc.g" -> "vcParserTokenTypes.hpp"$ */

#ifndef CUSTOM_API
# define CUSTOM_API
#endif

#ifdef __cplusplus
struct CUSTOM_API vcParserTokenTypes {
#endif
	enum {
		EOF_ = 1,
		LIFO = 4,
		NOBLOCK = 5,
		SHIFTREG = 6,
		PIPE = 7,
		UINTEGER = 8,
		DEPTH = 9,
		IN = 10,
		OUT = 11,
		SIGNAL = 12,
		P2P = 13,
		FULLRATE = 14,
		BYPASS = 15,
		MEMORYSPACE = 16,
		UNORDERED = 17,
		LBRACE = 18,
		RBRACE = 19,
		CAPACITY = 20,
		DATAWIDTH = 21,
		ADDRWIDTH = 22,
		MAXACCESSWIDTH = 23,
		OBJECT = 24,
		COLON = 25,
		FOREIGN = 26,
		PIPELINE = 27,
		BUFFERING = 28,
		DETERMINISTIC = 29,
		OPERATOR = 30,
		VOLATILE = 31,
		MODULE = 32,
		SIMPLE_IDENTIFIER = 33,
		EQUIVALENT = 34,
		LPAREN = 35,
		RPAREN = 36,
		OPEN = 37,
		DIV_OP = 38,
		ENTRY = 39,
		EXIT = 40,
		CONTROLPATH = 41,
		ALIAS = 42,
		PLACE = 43,
		LEFT_OPEN = 44,
		TRANSITION = 45,
		DEAD = 46,
		TIED_HIGH = 47,
		DELAY = 48,
		SERIESBLOCK = 49,
		PARALLELBLOCK = 50,
		BRANCHBLOCK = 51,
		LOOPBLOCK = 52,
		TERMINATE = 53,
		PHISEQUENCER = 54,
		TRANSITIONMERGE = 55,
		BIND = 56,
		IMPLIES = 57,
		ULE_OP = 58,
		MERGE = 59,
		BRANCH = 60,
		FORKBLOCK = 61,
		PIPELINEDFORKBLOCK = 62,
		N_ULL = 63,
		JOIN = 64,
		MARKEDJOIN = 65,
		FORK = 66,
		DATAPATH = 67,
		WAR = 68,
		GUARD = 69,
		NOT_OP = 70,
		FLOWTHROUGH = 71,
		PLUS_OP = 72,
		MINUS_OP = 73,
		MUL_OP = 74,
		SHL_OP = 75,
		SHR_OP = 76,
		ROL_OP = 77,
		ROR_OP = 78,
		UGT_OP = 79,
		UGE_OP = 80,
		EQ_OP = 81,
		ULT_OP = 82,
		NEQ_OP = 83,
		BITSEL_OP = 84,
		CONCAT_OP = 85,
		UNORDERED_OP = 86,
		OR_OP = 87,
		AND_OP = 88,
		XOR_OP = 89,
		NOR_OP = 90,
		NAND_OP = 91,
		XNOR_OP = 92,
		SHRA_OP = 93,
		SGT_OP = 94,
		SGE_OP = 95,
		SLT_OP = 96,
		SLE_OP = 97,
		StoS_ASSIGN_OP = 98,
		StoU_ASSIGN_OP = 99,
		UtoS_ASSIGN_OP = 100,
		FtoS_ASSIGN_OP = 101,
		FtoU_ASSIGN_OP = 102,
		StoF_ASSIGN_OP = 103,
		UtoF_ASSIGN_OP = 104,
		FtoF_ASSIGN_OP = 105,
		DECODE_OP = 106,
		ENCODE_OP = 107,
		P_ENCODE_OP = 108,
		BITREDUCE_OR_OP = 109,
		BITREDUCE_AND_OP = 110,
		BITREDUCE_XOR_OP = 111,
		BRANCH_OP = 112,
		SELECT_OP = 113,
		SLICE_OP = 114,
		PERMUTE_OP = 115,
		ASSIGN_OP = 116,
		HASH = 117,
		EQUIVALENCE_OP = 118,
		CALL = 119,
		INLINE = 120,
		IOPORT = 121,
		LOAD = 122,
		FROM = 123,
		STORE = 124,
		TO = 125,
		PHI = 126,
		LBRACKET = 127,
		RBRACKET = 128,
		CONSTANT = 129,
		INTERMEDIATE = 130,
		WIRE = 131,
		BINARYSTRING = 132,
		HEXSTRING = 133,
		COMMA = 134,
		INT = 135,
		FLOAT = 136,
		POINTER = 137,
		ARRAY = 138,
		OF = 139,
		RECORD = 140,
		SIMPLE_IDENTIFER = 141,
		ATTRIBUTE = 142,
		QUOTED_STRING = 143,
		DPE = 144,
		LIBRARY = 145,
		REQS = 146,
		ACKS = 147,
		HIDDEN = 148,
		PARAMETER = 149,
		PORT = 150,
		MAP = 151,
		MIN = 152,
		MAX = 153,
		DPEINSTANCE = 154,
		LINK = 155,
		AT = 156,
		ORDERED_OP = 157,
		WHITESPACE = 158,
		SINGLELINECOMMENT = 159,
		ALPHA = 160,
		DIGIT = 161,
		NULL_TREE_LOOKAHEAD = 3
	};
#ifdef __cplusplus
};
#endif
#endif /*INC_vcParserTokenTypes_hpp_*/
