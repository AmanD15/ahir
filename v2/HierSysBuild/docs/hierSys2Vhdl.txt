hierSys2Vhdl [hierarchical-system-description-file-name]+

AUTHOR
  	Madhav Desai.

SYNOPSYS
	The hierSys2Vhdl utility is intended to assemble 
	a system out of sub-systems which interact through
        FIFO (or pipe) interfaces.  

ARGUMENTS

       The only arguments are files describing a netlist in the 
       hierarchical system format, which is a simple 
       way of describing a system hierarchy.

       For example
	$system Left  $library LLIB
		$in 
			$pipe A 16
			$signal  Asig 16
		$out 
			$pipe TMP 16
			$signal TMPsig 16
	{
		// empty, this treated as a leaf
		// module
	}
	
	$system Right  $library RLIB
	
		$in 
			$pipe TMP 16
			$signal TMPsig 16
		$out 
			$pipe B 16
			$signal Bsig 16
	{
		// empty, this treated as a leaf
		// module
	}
	
	$system Top 
		$in 
			$pipe a 16 
	 		$signal asig 16
        	$out 
			$pipe b 16
			$signal bsig 16
	{
		// non-empty, this treated as a structural
		// module

        	$pipe tmp 16
        	$signal tmp_sig 16
        	$instance i0  LLIB:Left   A => a Asig => asig  TMP => tmp TMPsig => tmp_sig 
        	$instance i1  RLIB:Right  TMPsig => tmp_sig TMP => tmp B => b Bsig => bsig
	}
	

       This describes a system whose top-level is
       Top,  which contains two instances of systems
       (component instances i0 and i1 of Left and
        Right respectively).  The connections are
       through pipe interfaces.

       Left and Right are considered leaf-level
       systems whose entity/architecture descriptions
       are assumed to exist somewhere.  In this
       case, hierSys2Vhdl will generate VHDL
       code (entity/architecture) for Top.  In 
       general, entity/architecture pairs are generated
       for all systems which have component instances,
       while those that do not are considered as leaf
       systems.

NOTES

       The systems should be specified from leaves to
       the root.

       The last system specified is considered to be the
       root, for which the top-level VHDL file is generated.

       The systems are organized into libraries (think VHDL)!

OUTPUTS
	
       The utility generates a single file stream on
       stdout.  This is a VHDL description which 
       contains a component declaration package
       named HierSysComponentPackage, followed
       by entity/architecture pairs for all non-leaf
       systems.

       The last system specified is considered to be the
       root, for which the top-level VHDL file is generated.

RETURN VALUES

	Returns 0 on success, non-zero on failure.

