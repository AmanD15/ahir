library ieee;
use ieee.std_logic_1164.all;
package vc_system_package is -- 
  -- 
end package vc_system_package;
library ieee;
use ieee.std_logic_1164.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
library work;
use work.vc_system_package.all;
entity sum_mod is -- 
  port ( -- 
    a : in  std_logic_vector(9 downto 0);
    b : in  std_logic_vector(9 downto 0);
    aXb : out  std_logic_vector(19 downto 0);
    clk : in std_logic;
    reset : in std_logic;
    start : in std_logic;
    fin   : out std_logic;
    tag_in: in std_logic_vector(0 downto 0);
    tag_out: out std_logic_vector(0 downto 0)-- 
  );
  -- 
end entity sum_mod;
architecture Default of sum_mod is -- 
  -- always true...
  signal always_true_symbol: Boolean;
  -- links between control-path and data-path
  signal branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xif_stmt_29_eval_testXbranch_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xif_stmt_29_if_linkXif_choice_transition_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xreq_cp_to_dp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xack_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_50Xbinary_49Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_50Xbinary_49Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_50Xbinary_49Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xif_stmt_29_else_linkXelse_choice_transition_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_50Xbinary_49Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xassign_stmt_67Xbinary_66Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_78Xtype_cast_77Xreq_cp_to_dp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_78Xtype_cast_77Xack_dp_to_cp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xrr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xra_dp_to_cp : boolean;
  signal branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xcr_cp_to_dp : boolean;
  signal branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xca_dp_to_cp : boolean;
  signal branch_block_stmt_14Xif_stmt_85_eval_testXbranch_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xif_stmt_85_if_linkXif_choice_transition_dp_to_cp : boolean;
  signal branch_block_stmt_14Xif_stmt_85_else_linkXelse_choice_transition_dp_to_cp : boolean;
  signal branch_block_stmt_14Xbranch_block_stmt_14_x_xentry_x_xx_xPhiReqXphi_stmt_16_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xbranch_block_stmt_14_x_xentry_x_xx_xPhiReqXphi_stmt_20_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xbranch_block_stmt_14_x_xentry_x_xx_xPhiReqXphi_stmt_24_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xloopback_PhiReqXphi_stmt_16_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xloopback_PhiReqXphi_stmt_20_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xloopback_PhiReqXphi_stmt_24_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xmerge_stmt_15_PhiAckXphi_stmt_16_ack_dp_to_cp : boolean;
  signal branch_block_stmt_14Xmerge_stmt_15_PhiAckXphi_stmt_20_ack_dp_to_cp : boolean;
  signal branch_block_stmt_14Xmerge_stmt_15_PhiAckXphi_stmt_24_ack_dp_to_cp : boolean;
  signal branch_block_stmt_14Xif0_PhiReqXphi_stmt_54_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xif1_PhiReqXphi_stmt_54_req_cp_to_dp : boolean;
  signal branch_block_stmt_14Xmerge_stmt_53_PhiAckXphi_stmt_54_ack_dp_to_cp : boolean;
  signal assign_stmt_98Xbinary_97Xrr_cp_to_dp : boolean;
  signal assign_stmt_98Xbinary_97Xra_dp_to_cp : boolean;
  signal assign_stmt_98Xbinary_97Xcr_cp_to_dp : boolean;
  signal assign_stmt_98Xbinary_97Xca_dp_to_cp : boolean;
  -- 
begin --  
  -- tag register
  process(clk) 
  begin -- 
    if clk'event and clk = '1' then -- 
      if start='1' then -- 
        tag_out <= tag_in; -- 
      end if; -- 
    end if; -- 
  end process;
  -- the control path
  always_true_symbol <= true; 
  sum_mod_CP_0: Block -- control-path 
    signal sum_mod_CP_0_start: Boolean;
    signal Xentry_1_symbol: Boolean;
    signal Xexit_2_symbol: Boolean;
    signal branch_block_stmt_14_3_symbol : Boolean;
    signal assign_stmt_98_237_symbol : Boolean;
    -- 
  begin -- 
    sum_mod_CP_0_start <=  true when start = '1' else false; -- control passed to control-path.
    Xentry_1_symbol  <= sum_mod_CP_0_start; -- transition $entry
    branch_block_stmt_14_3: Block -- branch_block_stmt_14 
      signal branch_block_stmt_14_3_start: Boolean;
      signal Xentry_4_symbol: Boolean;
      signal Xexit_5_symbol: Boolean;
      signal branch_block_stmt_14_x_xentry_x_xx_x6_symbol : Boolean;
      signal branch_block_stmt_14_x_xexit_x_xx_x7_symbol : Boolean;
      signal merge_stmt_15_x_xexit_x_xx_x8_symbol : Boolean;
      signal if_stmt_29_x_xentry_x_xx_x9_symbol : Boolean;
      signal merge_stmt_53_x_xexit_x_xx_x10_symbol : Boolean;
      signal assign_stmt_67_x_xentry_x_xx_x11_symbol : Boolean;
      signal assign_stmt_67_x_xexit_x_xx_x12_symbol : Boolean;
      signal parallel_block_stmt_68_x_xentry_x_xx_x13_symbol : Boolean;
      signal parallel_block_stmt_68_x_xexit_x_xx_x14_symbol : Boolean;
      signal if_stmt_85_x_xentry_x_xx_x15_symbol : Boolean;
      signal if_stmt_29_eval_test_16_symbol : Boolean;
      signal binary_32_place_30_symbol : Boolean;
      signal if_stmt_29_if_link_31_symbol : Boolean;
      signal if_stmt_29_else_link_35_symbol : Boolean;
      signal assign_stmt_41_x_xentry_x_xx_x39_symbol : Boolean;
      signal assign_stmt_41_x_xexit_x_xx_x40_symbol : Boolean;
      signal if1_41_symbol : Boolean;
      signal assign_stmt_41_42_symbol : Boolean;
      signal assign_stmt_50_x_xentry_x_xx_x75_symbol : Boolean;
      signal assign_stmt_50_x_xexit_x_xx_x76_symbol : Boolean;
      signal if0_77_symbol : Boolean;
      signal assign_stmt_50_78_symbol : Boolean;
      signal assign_stmt_67_101_symbol : Boolean;
      signal parallel_block_stmt_68_134_symbol : Boolean;
      signal if_stmt_85_eval_test_176_symbol : Boolean;
      signal binary_88_place_190_symbol : Boolean;
      signal if_stmt_85_if_link_191_symbol : Boolean;
      signal if_stmt_85_else_link_195_symbol : Boolean;
      signal stmt_89_x_xentry_x_xx_x199_symbol : Boolean;
      signal stmt_89_x_xexit_x_xx_x200_symbol : Boolean;
      signal stmt_89_201_symbol : Boolean;
      signal loopback_204_symbol : Boolean;
      signal branch_block_stmt_14_x_xentry_x_xx_xPhiReq_205_symbol : Boolean;
      signal loopback_PhiReq_211_symbol : Boolean;
      signal merge_stmt_15_PhiReqMerge_217_symbol : Boolean;
      signal merge_stmt_15_PhiAck_218_symbol : Boolean;
      signal if0_PhiReq_224_symbol : Boolean;
      signal if1_PhiReq_228_symbol : Boolean;
      signal merge_stmt_53_PhiReqMerge_232_symbol : Boolean;
      signal merge_stmt_53_PhiAck_233_symbol : Boolean;
      -- 
    begin -- 
      branch_block_stmt_14_3_start <= Xentry_1_symbol; -- control passed to block
      Xentry_4_symbol  <= branch_block_stmt_14_3_start; -- transition branch_block_stmt_14/$entry
      branch_block_stmt_14_x_xentry_x_xx_x6_symbol  <=  Xentry_4_symbol; -- place branch_block_stmt_14/branch_block_stmt_14__entry__ (optimized away) 
      branch_block_stmt_14_x_xexit_x_xx_x7_symbol  <=  stmt_89_x_xexit_x_xx_x200_symbol; -- place branch_block_stmt_14/branch_block_stmt_14__exit__ (optimized away) 
      merge_stmt_15_x_xexit_x_xx_x8_symbol  <=  merge_stmt_15_PhiAck_218_symbol; -- place branch_block_stmt_14/merge_stmt_15__exit__ (optimized away) 
      if_stmt_29_x_xentry_x_xx_x9_symbol  <=  merge_stmt_15_x_xexit_x_xx_x8_symbol; -- place branch_block_stmt_14/if_stmt_29__entry__ (optimized away) 
      merge_stmt_53_x_xexit_x_xx_x10_symbol  <=  merge_stmt_53_PhiAck_233_symbol; -- place branch_block_stmt_14/merge_stmt_53__exit__ (optimized away) 
      assign_stmt_67_x_xentry_x_xx_x11_symbol  <=  merge_stmt_53_x_xexit_x_xx_x10_symbol; -- place branch_block_stmt_14/assign_stmt_67__entry__ (optimized away) 
      assign_stmt_67_x_xexit_x_xx_x12_symbol  <=  assign_stmt_67_101_symbol; -- place branch_block_stmt_14/assign_stmt_67__exit__ (optimized away) 
      parallel_block_stmt_68_x_xentry_x_xx_x13_symbol  <=  assign_stmt_67_x_xexit_x_xx_x12_symbol; -- place branch_block_stmt_14/parallel_block_stmt_68__entry__ (optimized away) 
      parallel_block_stmt_68_x_xexit_x_xx_x14_symbol  <=  parallel_block_stmt_68_134_symbol; -- place branch_block_stmt_14/parallel_block_stmt_68__exit__ (optimized away) 
      if_stmt_85_x_xentry_x_xx_x15_symbol  <=  parallel_block_stmt_68_x_xexit_x_xx_x14_symbol; -- place branch_block_stmt_14/if_stmt_85__entry__ (optimized away) 
      if_stmt_29_eval_test_16: Block -- branch_block_stmt_14/if_stmt_29_eval_test 
        signal if_stmt_29_eval_test_16_start: Boolean;
        signal Xentry_17_symbol: Boolean;
        signal Xexit_18_symbol: Boolean;
        signal binary_32_19_symbol : Boolean;
        signal branch_req_29_symbol : Boolean;
        -- 
      begin -- 
        if_stmt_29_eval_test_16_start <= if_stmt_29_x_xentry_x_xx_x9_symbol; -- control passed to block
        Xentry_17_symbol  <= if_stmt_29_eval_test_16_start; -- transition branch_block_stmt_14/if_stmt_29_eval_test/$entry
        binary_32_19: Block -- branch_block_stmt_14/if_stmt_29_eval_test/binary_32 
          signal binary_32_19_start: Boolean;
          signal Xentry_20_symbol: Boolean;
          signal Xexit_21_symbol: Boolean;
          signal binary_32_inputs_22_symbol : Boolean;
          signal rr_25_symbol : Boolean;
          signal ra_26_symbol : Boolean;
          signal cr_27_symbol : Boolean;
          signal ca_28_symbol : Boolean;
          -- 
        begin -- 
          binary_32_19_start <= Xentry_17_symbol; -- control passed to block
          Xentry_20_symbol  <= binary_32_19_start; -- transition branch_block_stmt_14/if_stmt_29_eval_test/binary_32/$entry
          binary_32_inputs_22: Block -- branch_block_stmt_14/if_stmt_29_eval_test/binary_32/binary_32_inputs 
            signal binary_32_inputs_22_start: Boolean;
            signal Xentry_23_symbol: Boolean;
            signal Xexit_24_symbol: Boolean;
            -- 
          begin -- 
            binary_32_inputs_22_start <= Xentry_20_symbol; -- control passed to block
            Xentry_23_symbol  <= binary_32_inputs_22_start; -- transition branch_block_stmt_14/if_stmt_29_eval_test/binary_32/binary_32_inputs/$entry
            Xexit_24_symbol <= Xentry_23_symbol; -- transition branch_block_stmt_14/if_stmt_29_eval_test/binary_32/binary_32_inputs/$exit
            binary_32_inputs_22_symbol <= Xexit_24_symbol; -- control passed from block 
            -- 
          end Block; -- branch_block_stmt_14/if_stmt_29_eval_test/binary_32/binary_32_inputs
          rr_25_symbol <= binary_32_inputs_22_symbol; -- transition branch_block_stmt_14/if_stmt_29_eval_test/binary_32/rr
          branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xrr_cp_to_dp <= rr_25_symbol; -- link to DP
          ra_26_symbol <= branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xra_dp_to_cp; -- transition branch_block_stmt_14/if_stmt_29_eval_test/binary_32/ra
          cr_27_symbol <= ra_26_symbol; -- transition branch_block_stmt_14/if_stmt_29_eval_test/binary_32/cr
          branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xcr_cp_to_dp <= cr_27_symbol; -- link to DP
          ca_28_symbol <= branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xca_dp_to_cp; -- transition branch_block_stmt_14/if_stmt_29_eval_test/binary_32/ca
          Xexit_21_symbol <= ca_28_symbol; -- transition branch_block_stmt_14/if_stmt_29_eval_test/binary_32/$exit
          binary_32_19_symbol <= Xexit_21_symbol; -- control passed from block 
          -- 
        end Block; -- branch_block_stmt_14/if_stmt_29_eval_test/binary_32
        branch_req_29_symbol <= binary_32_19_symbol; -- transition branch_block_stmt_14/if_stmt_29_eval_test/branch_req
        branch_block_stmt_14Xif_stmt_29_eval_testXbranch_req_cp_to_dp <= branch_req_29_symbol; -- link to DP
        Xexit_18_symbol <= branch_req_29_symbol; -- transition branch_block_stmt_14/if_stmt_29_eval_test/$exit
        if_stmt_29_eval_test_16_symbol <= Xexit_18_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/if_stmt_29_eval_test
      binary_32_place_30_symbol  <=  if_stmt_29_eval_test_16_symbol; -- place branch_block_stmt_14/binary_32_place (optimized away) 
      if_stmt_29_if_link_31: Block -- branch_block_stmt_14/if_stmt_29_if_link 
        signal if_stmt_29_if_link_31_start: Boolean;
        signal Xentry_32_symbol: Boolean;
        signal Xexit_33_symbol: Boolean;
        signal if_choice_transition_34_symbol : Boolean;
        -- 
      begin -- 
        if_stmt_29_if_link_31_start <= binary_32_place_30_symbol; -- control passed to block
        Xentry_32_symbol  <= if_stmt_29_if_link_31_start; -- transition branch_block_stmt_14/if_stmt_29_if_link/$entry
        if_choice_transition_34_symbol <= branch_block_stmt_14Xif_stmt_29_if_linkXif_choice_transition_dp_to_cp; -- transition branch_block_stmt_14/if_stmt_29_if_link/if_choice_transition
        Xexit_33_symbol <= if_choice_transition_34_symbol; -- transition branch_block_stmt_14/if_stmt_29_if_link/$exit
        if_stmt_29_if_link_31_symbol <= Xexit_33_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/if_stmt_29_if_link
      if_stmt_29_else_link_35: Block -- branch_block_stmt_14/if_stmt_29_else_link 
        signal if_stmt_29_else_link_35_start: Boolean;
        signal Xentry_36_symbol: Boolean;
        signal Xexit_37_symbol: Boolean;
        signal else_choice_transition_38_symbol : Boolean;
        -- 
      begin -- 
        if_stmt_29_else_link_35_start <= binary_32_place_30_symbol; -- control passed to block
        Xentry_36_symbol  <= if_stmt_29_else_link_35_start; -- transition branch_block_stmt_14/if_stmt_29_else_link/$entry
        else_choice_transition_38_symbol <= branch_block_stmt_14Xif_stmt_29_else_linkXelse_choice_transition_dp_to_cp; -- transition branch_block_stmt_14/if_stmt_29_else_link/else_choice_transition
        Xexit_37_symbol <= else_choice_transition_38_symbol; -- transition branch_block_stmt_14/if_stmt_29_else_link/$exit
        if_stmt_29_else_link_35_symbol <= Xexit_37_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/if_stmt_29_else_link
      assign_stmt_41_x_xentry_x_xx_x39_symbol  <=  if_stmt_29_if_link_31_symbol; -- place branch_block_stmt_14/assign_stmt_41__entry__ (optimized away) 
      assign_stmt_41_x_xexit_x_xx_x40_symbol  <=  assign_stmt_41_42_symbol; -- place branch_block_stmt_14/assign_stmt_41__exit__ (optimized away) 
      if1_41_symbol  <=  assign_stmt_41_x_xexit_x_xx_x40_symbol; -- place branch_block_stmt_14/if1 (optimized away) 
      assign_stmt_41_42: Block -- branch_block_stmt_14/assign_stmt_41 
        signal assign_stmt_41_42_start: Boolean;
        signal Xentry_43_symbol: Boolean;
        signal Xexit_44_symbol: Boolean;
        signal binary_40_45_symbol : Boolean;
        -- 
      begin -- 
        assign_stmt_41_42_start <= assign_stmt_41_x_xentry_x_xx_x39_symbol; -- control passed to block
        Xentry_43_symbol  <= assign_stmt_41_42_start; -- transition branch_block_stmt_14/assign_stmt_41/$entry
        binary_40_45: Block -- branch_block_stmt_14/assign_stmt_41/binary_40 
          signal binary_40_45_start: Boolean;
          signal Xentry_46_symbol: Boolean;
          signal Xexit_47_symbol: Boolean;
          signal binary_40_inputs_48_symbol : Boolean;
          signal rr_71_symbol : Boolean;
          signal ra_72_symbol : Boolean;
          signal cr_73_symbol : Boolean;
          signal ca_74_symbol : Boolean;
          -- 
        begin -- 
          binary_40_45_start <= Xentry_43_symbol; -- control passed to block
          Xentry_46_symbol  <= binary_40_45_start; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/$entry
          binary_40_inputs_48: Block -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs 
            signal binary_40_inputs_48_start: Boolean;
            signal Xentry_49_symbol: Boolean;
            signal Xexit_50_symbol: Boolean;
            signal binary_38_51_symbol : Boolean;
            -- 
          begin -- 
            binary_40_inputs_48_start <= Xentry_46_symbol; -- control passed to block
            Xentry_49_symbol  <= binary_40_inputs_48_start; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/$entry
            binary_38_51: Block -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38 
              signal binary_38_51_start: Boolean;
              signal Xentry_52_symbol: Boolean;
              signal Xexit_53_symbol: Boolean;
              signal binary_38_inputs_54_symbol : Boolean;
              signal rr_67_symbol : Boolean;
              signal ra_68_symbol : Boolean;
              signal cr_69_symbol : Boolean;
              signal ca_70_symbol : Boolean;
              -- 
            begin -- 
              binary_38_51_start <= Xentry_49_symbol; -- control passed to block
              Xentry_52_symbol  <= binary_38_51_start; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/$entry
              binary_38_inputs_54: Block -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs 
                signal binary_38_inputs_54_start: Boolean;
                signal Xentry_55_symbol: Boolean;
                signal Xexit_56_symbol: Boolean;
                signal binary_36_57_symbol : Boolean;
                -- 
              begin -- 
                binary_38_inputs_54_start <= Xentry_52_symbol; -- control passed to block
                Xentry_55_symbol  <= binary_38_inputs_54_start; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/$entry
                binary_36_57: Block -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36 
                  signal binary_36_57_start: Boolean;
                  signal Xentry_58_symbol: Boolean;
                  signal Xexit_59_symbol: Boolean;
                  signal binary_36_inputs_60_symbol : Boolean;
                  signal rr_63_symbol : Boolean;
                  signal ra_64_symbol : Boolean;
                  signal cr_65_symbol : Boolean;
                  signal ca_66_symbol : Boolean;
                  -- 
                begin -- 
                  binary_36_57_start <= Xentry_55_symbol; -- control passed to block
                  Xentry_58_symbol  <= binary_36_57_start; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/$entry
                  binary_36_inputs_60: Block -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/binary_36_inputs 
                    signal binary_36_inputs_60_start: Boolean;
                    signal Xentry_61_symbol: Boolean;
                    signal Xexit_62_symbol: Boolean;
                    -- 
                  begin -- 
                    binary_36_inputs_60_start <= Xentry_58_symbol; -- control passed to block
                    Xentry_61_symbol  <= binary_36_inputs_60_start; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/binary_36_inputs/$entry
                    Xexit_62_symbol <= Xentry_61_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/binary_36_inputs/$exit
                    binary_36_inputs_60_symbol <= Xexit_62_symbol; -- control passed from block 
                    -- 
                  end Block; -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/binary_36_inputs
                  rr_63_symbol <= binary_36_inputs_60_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/rr
                  branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xrr_cp_to_dp <= rr_63_symbol; -- link to DP
                  ra_64_symbol <= branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xra_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/ra
                  cr_65_symbol <= ra_64_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/cr
                  branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xcr_cp_to_dp <= cr_65_symbol; -- link to DP
                  ca_66_symbol <= branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xca_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/ca
                  Xexit_59_symbol <= ca_66_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36/$exit
                  binary_36_57_symbol <= Xexit_59_symbol; -- control passed from block 
                  -- 
                end Block; -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/binary_36
                Xexit_56_symbol <= binary_36_57_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs/$exit
                binary_38_inputs_54_symbol <= Xexit_56_symbol; -- control passed from block 
                -- 
              end Block; -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/binary_38_inputs
              rr_67_symbol <= binary_38_inputs_54_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/rr
              branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xrr_cp_to_dp <= rr_67_symbol; -- link to DP
              ra_68_symbol <= branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xra_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/ra
              cr_69_symbol <= ra_68_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/cr
              branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xcr_cp_to_dp <= cr_69_symbol; -- link to DP
              ca_70_symbol <= branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xca_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/ca
              Xexit_53_symbol <= ca_70_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38/$exit
              binary_38_51_symbol <= Xexit_53_symbol; -- control passed from block 
              -- 
            end Block; -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/binary_38
            Xexit_50_symbol <= binary_38_51_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs/$exit
            binary_40_inputs_48_symbol <= Xexit_50_symbol; -- control passed from block 
            -- 
          end Block; -- branch_block_stmt_14/assign_stmt_41/binary_40/binary_40_inputs
          rr_71_symbol <= binary_40_inputs_48_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/rr
          branch_block_stmt_14Xassign_stmt_41Xbinary_40Xrr_cp_to_dp <= rr_71_symbol; -- link to DP
          ra_72_symbol <= branch_block_stmt_14Xassign_stmt_41Xbinary_40Xra_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/ra
          cr_73_symbol <= ra_72_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/cr
          branch_block_stmt_14Xassign_stmt_41Xbinary_40Xcr_cp_to_dp <= cr_73_symbol; -- link to DP
          ca_74_symbol <= branch_block_stmt_14Xassign_stmt_41Xbinary_40Xca_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/ca
          Xexit_47_symbol <= ca_74_symbol; -- transition branch_block_stmt_14/assign_stmt_41/binary_40/$exit
          binary_40_45_symbol <= Xexit_47_symbol; -- control passed from block 
          -- 
        end Block; -- branch_block_stmt_14/assign_stmt_41/binary_40
        Xexit_44_symbol <= binary_40_45_symbol; -- transition branch_block_stmt_14/assign_stmt_41/$exit
        assign_stmt_41_42_symbol <= Xexit_44_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/assign_stmt_41
      assign_stmt_50_x_xentry_x_xx_x75_symbol  <=  if_stmt_29_else_link_35_symbol; -- place branch_block_stmt_14/assign_stmt_50__entry__ (optimized away) 
      assign_stmt_50_x_xexit_x_xx_x76_symbol  <=  assign_stmt_50_78_symbol; -- place branch_block_stmt_14/assign_stmt_50__exit__ (optimized away) 
      if0_77_symbol  <=  assign_stmt_50_x_xexit_x_xx_x76_symbol; -- place branch_block_stmt_14/if0 (optimized away) 
      assign_stmt_50_78: Block -- branch_block_stmt_14/assign_stmt_50 
        signal assign_stmt_50_78_start: Boolean;
        signal Xentry_79_symbol: Boolean;
        signal Xexit_80_symbol: Boolean;
        signal binary_49_81_symbol : Boolean;
        -- 
      begin -- 
        assign_stmt_50_78_start <= assign_stmt_50_x_xentry_x_xx_x75_symbol; -- control passed to block
        Xentry_79_symbol  <= assign_stmt_50_78_start; -- transition branch_block_stmt_14/assign_stmt_50/$entry
        binary_49_81: Block -- branch_block_stmt_14/assign_stmt_50/binary_49 
          signal binary_49_81_start: Boolean;
          signal Xentry_82_symbol: Boolean;
          signal Xexit_83_symbol: Boolean;
          signal binary_49_inputs_84_symbol : Boolean;
          signal rr_97_symbol : Boolean;
          signal ra_98_symbol : Boolean;
          signal cr_99_symbol : Boolean;
          signal ca_100_symbol : Boolean;
          -- 
        begin -- 
          binary_49_81_start <= Xentry_79_symbol; -- control passed to block
          Xentry_82_symbol  <= binary_49_81_start; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/$entry
          binary_49_inputs_84: Block -- branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs 
            signal binary_49_inputs_84_start: Boolean;
            signal Xentry_85_symbol: Boolean;
            signal Xexit_86_symbol: Boolean;
            signal binary_47_87_symbol : Boolean;
            -- 
          begin -- 
            binary_49_inputs_84_start <= Xentry_82_symbol; -- control passed to block
            Xentry_85_symbol  <= binary_49_inputs_84_start; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/$entry
            binary_47_87: Block -- branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47 
              signal binary_47_87_start: Boolean;
              signal Xentry_88_symbol: Boolean;
              signal Xexit_89_symbol: Boolean;
              signal binary_47_inputs_90_symbol : Boolean;
              signal rr_93_symbol : Boolean;
              signal ra_94_symbol : Boolean;
              signal cr_95_symbol : Boolean;
              signal ca_96_symbol : Boolean;
              -- 
            begin -- 
              binary_47_87_start <= Xentry_85_symbol; -- control passed to block
              Xentry_88_symbol  <= binary_47_87_start; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/$entry
              binary_47_inputs_90: Block -- branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/binary_47_inputs 
                signal binary_47_inputs_90_start: Boolean;
                signal Xentry_91_symbol: Boolean;
                signal Xexit_92_symbol: Boolean;
                -- 
              begin -- 
                binary_47_inputs_90_start <= Xentry_88_symbol; -- control passed to block
                Xentry_91_symbol  <= binary_47_inputs_90_start; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/binary_47_inputs/$entry
                Xexit_92_symbol <= Xentry_91_symbol; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/binary_47_inputs/$exit
                binary_47_inputs_90_symbol <= Xexit_92_symbol; -- control passed from block 
                -- 
              end Block; -- branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/binary_47_inputs
              rr_93_symbol <= binary_47_inputs_90_symbol; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/rr
              branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xrr_cp_to_dp <= rr_93_symbol; -- link to DP
              ra_94_symbol <= branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xra_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/ra
              cr_95_symbol <= ra_94_symbol; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/cr
              branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xcr_cp_to_dp <= cr_95_symbol; -- link to DP
              ca_96_symbol <= branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xca_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/ca
              Xexit_89_symbol <= ca_96_symbol; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47/$exit
              binary_47_87_symbol <= Xexit_89_symbol; -- control passed from block 
              -- 
            end Block; -- branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/binary_47
            Xexit_86_symbol <= binary_47_87_symbol; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs/$exit
            binary_49_inputs_84_symbol <= Xexit_86_symbol; -- control passed from block 
            -- 
          end Block; -- branch_block_stmt_14/assign_stmt_50/binary_49/binary_49_inputs
          rr_97_symbol <= binary_49_inputs_84_symbol; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/rr
          branch_block_stmt_14Xassign_stmt_50Xbinary_49Xrr_cp_to_dp <= rr_97_symbol; -- link to DP
          ra_98_symbol <= branch_block_stmt_14Xassign_stmt_50Xbinary_49Xra_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/ra
          cr_99_symbol <= ra_98_symbol; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/cr
          branch_block_stmt_14Xassign_stmt_50Xbinary_49Xcr_cp_to_dp <= cr_99_symbol; -- link to DP
          ca_100_symbol <= branch_block_stmt_14Xassign_stmt_50Xbinary_49Xca_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/ca
          Xexit_83_symbol <= ca_100_symbol; -- transition branch_block_stmt_14/assign_stmt_50/binary_49/$exit
          binary_49_81_symbol <= Xexit_83_symbol; -- control passed from block 
          -- 
        end Block; -- branch_block_stmt_14/assign_stmt_50/binary_49
        Xexit_80_symbol <= binary_49_81_symbol; -- transition branch_block_stmt_14/assign_stmt_50/$exit
        assign_stmt_50_78_symbol <= Xexit_80_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/assign_stmt_50
      assign_stmt_67_101: Block -- branch_block_stmt_14/assign_stmt_67 
        signal assign_stmt_67_101_start: Boolean;
        signal Xentry_102_symbol: Boolean;
        signal Xexit_103_symbol: Boolean;
        signal binary_66_104_symbol : Boolean;
        -- 
      begin -- 
        assign_stmt_67_101_start <= assign_stmt_67_x_xentry_x_xx_x11_symbol; -- control passed to block
        Xentry_102_symbol  <= assign_stmt_67_101_start; -- transition branch_block_stmt_14/assign_stmt_67/$entry
        binary_66_104: Block -- branch_block_stmt_14/assign_stmt_67/binary_66 
          signal binary_66_104_start: Boolean;
          signal Xentry_105_symbol: Boolean;
          signal Xexit_106_symbol: Boolean;
          signal binary_66_inputs_107_symbol : Boolean;
          signal rr_130_symbol : Boolean;
          signal ra_131_symbol : Boolean;
          signal cr_132_symbol : Boolean;
          signal ca_133_symbol : Boolean;
          -- 
        begin -- 
          binary_66_104_start <= Xentry_102_symbol; -- control passed to block
          Xentry_105_symbol  <= binary_66_104_start; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/$entry
          binary_66_inputs_107: Block -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs 
            signal binary_66_inputs_107_start: Boolean;
            signal Xentry_108_symbol: Boolean;
            signal Xexit_109_symbol: Boolean;
            signal binary_64_110_symbol : Boolean;
            -- 
          begin -- 
            binary_66_inputs_107_start <= Xentry_105_symbol; -- control passed to block
            Xentry_108_symbol  <= binary_66_inputs_107_start; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/$entry
            binary_64_110: Block -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64 
              signal binary_64_110_start: Boolean;
              signal Xentry_111_symbol: Boolean;
              signal Xexit_112_symbol: Boolean;
              signal binary_64_inputs_113_symbol : Boolean;
              signal rr_126_symbol : Boolean;
              signal ra_127_symbol : Boolean;
              signal cr_128_symbol : Boolean;
              signal ca_129_symbol : Boolean;
              -- 
            begin -- 
              binary_64_110_start <= Xentry_108_symbol; -- control passed to block
              Xentry_111_symbol  <= binary_64_110_start; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/$entry
              binary_64_inputs_113: Block -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs 
                signal binary_64_inputs_113_start: Boolean;
                signal Xentry_114_symbol: Boolean;
                signal Xexit_115_symbol: Boolean;
                signal binary_62_116_symbol : Boolean;
                -- 
              begin -- 
                binary_64_inputs_113_start <= Xentry_111_symbol; -- control passed to block
                Xentry_114_symbol  <= binary_64_inputs_113_start; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/$entry
                binary_62_116: Block -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62 
                  signal binary_62_116_start: Boolean;
                  signal Xentry_117_symbol: Boolean;
                  signal Xexit_118_symbol: Boolean;
                  signal binary_62_inputs_119_symbol : Boolean;
                  signal rr_122_symbol : Boolean;
                  signal ra_123_symbol : Boolean;
                  signal cr_124_symbol : Boolean;
                  signal ca_125_symbol : Boolean;
                  -- 
                begin -- 
                  binary_62_116_start <= Xentry_114_symbol; -- control passed to block
                  Xentry_117_symbol  <= binary_62_116_start; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/$entry
                  binary_62_inputs_119: Block -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/binary_62_inputs 
                    signal binary_62_inputs_119_start: Boolean;
                    signal Xentry_120_symbol: Boolean;
                    signal Xexit_121_symbol: Boolean;
                    -- 
                  begin -- 
                    binary_62_inputs_119_start <= Xentry_117_symbol; -- control passed to block
                    Xentry_120_symbol  <= binary_62_inputs_119_start; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/binary_62_inputs/$entry
                    Xexit_121_symbol <= Xentry_120_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/binary_62_inputs/$exit
                    binary_62_inputs_119_symbol <= Xexit_121_symbol; -- control passed from block 
                    -- 
                  end Block; -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/binary_62_inputs
                  rr_122_symbol <= binary_62_inputs_119_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/rr
                  branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xrr_cp_to_dp <= rr_122_symbol; -- link to DP
                  ra_123_symbol <= branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xra_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/ra
                  cr_124_symbol <= ra_123_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/cr
                  branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xcr_cp_to_dp <= cr_124_symbol; -- link to DP
                  ca_125_symbol <= branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xca_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/ca
                  Xexit_118_symbol <= ca_125_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62/$exit
                  binary_62_116_symbol <= Xexit_118_symbol; -- control passed from block 
                  -- 
                end Block; -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/binary_62
                Xexit_115_symbol <= binary_62_116_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs/$exit
                binary_64_inputs_113_symbol <= Xexit_115_symbol; -- control passed from block 
                -- 
              end Block; -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/binary_64_inputs
              rr_126_symbol <= binary_64_inputs_113_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/rr
              branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xrr_cp_to_dp <= rr_126_symbol; -- link to DP
              ra_127_symbol <= branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xra_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/ra
              cr_128_symbol <= ra_127_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/cr
              branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xcr_cp_to_dp <= cr_128_symbol; -- link to DP
              ca_129_symbol <= branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xca_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/ca
              Xexit_112_symbol <= ca_129_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64/$exit
              binary_64_110_symbol <= Xexit_112_symbol; -- control passed from block 
              -- 
            end Block; -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/binary_64
            Xexit_109_symbol <= binary_64_110_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs/$exit
            binary_66_inputs_107_symbol <= Xexit_109_symbol; -- control passed from block 
            -- 
          end Block; -- branch_block_stmt_14/assign_stmt_67/binary_66/binary_66_inputs
          rr_130_symbol <= binary_66_inputs_107_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/rr
          branch_block_stmt_14Xassign_stmt_67Xbinary_66Xrr_cp_to_dp <= rr_130_symbol; -- link to DP
          ra_131_symbol <= branch_block_stmt_14Xassign_stmt_67Xbinary_66Xra_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/ra
          cr_132_symbol <= ra_131_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/cr
          branch_block_stmt_14Xassign_stmt_67Xbinary_66Xcr_cp_to_dp <= cr_132_symbol; -- link to DP
          ca_133_symbol <= branch_block_stmt_14Xassign_stmt_67Xbinary_66Xca_dp_to_cp; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/ca
          Xexit_106_symbol <= ca_133_symbol; -- transition branch_block_stmt_14/assign_stmt_67/binary_66/$exit
          binary_66_104_symbol <= Xexit_106_symbol; -- control passed from block 
          -- 
        end Block; -- branch_block_stmt_14/assign_stmt_67/binary_66
        Xexit_103_symbol <= binary_66_104_symbol; -- transition branch_block_stmt_14/assign_stmt_67/$exit
        assign_stmt_67_101_symbol <= Xexit_103_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/assign_stmt_67
      parallel_block_stmt_68_134: Block -- branch_block_stmt_14/parallel_block_stmt_68 
        signal parallel_block_stmt_68_134_start: Boolean;
        signal Xentry_135_symbol: Boolean;
        signal Xexit_136_symbol: Boolean;
        signal assign_stmt_74_137_symbol : Boolean;
        signal assign_stmt_78_155_symbol : Boolean;
        signal assign_stmt_83_163_symbol : Boolean;
        -- 
      begin -- 
        parallel_block_stmt_68_134_start <= parallel_block_stmt_68_x_xentry_x_xx_x13_symbol; -- control passed to block
        Xentry_135_symbol  <= parallel_block_stmt_68_134_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/$entry
        assign_stmt_74_137: Block -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74 
          signal assign_stmt_74_137_start: Boolean;
          signal Xentry_138_symbol: Boolean;
          signal Xexit_139_symbol: Boolean;
          signal type_cast_73_140_symbol : Boolean;
          -- 
        begin -- 
          assign_stmt_74_137_start <= Xentry_135_symbol; -- control passed to block
          Xentry_138_symbol  <= assign_stmt_74_137_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/$entry
          type_cast_73_140: Block -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73 
            signal type_cast_73_140_start: Boolean;
            signal Xentry_141_symbol: Boolean;
            signal Xexit_142_symbol: Boolean;
            signal binary_72_143_symbol : Boolean;
            signal req_153_symbol : Boolean;
            signal ack_154_symbol : Boolean;
            -- 
          begin -- 
            type_cast_73_140_start <= Xentry_138_symbol; -- control passed to block
            Xentry_141_symbol  <= type_cast_73_140_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/$entry
            binary_72_143: Block -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72 
              signal binary_72_143_start: Boolean;
              signal Xentry_144_symbol: Boolean;
              signal Xexit_145_symbol: Boolean;
              signal binary_72_inputs_146_symbol : Boolean;
              signal rr_149_symbol : Boolean;
              signal ra_150_symbol : Boolean;
              signal cr_151_symbol : Boolean;
              signal ca_152_symbol : Boolean;
              -- 
            begin -- 
              binary_72_143_start <= Xentry_141_symbol; -- control passed to block
              Xentry_144_symbol  <= binary_72_143_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/$entry
              binary_72_inputs_146: Block -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/binary_72_inputs 
                signal binary_72_inputs_146_start: Boolean;
                signal Xentry_147_symbol: Boolean;
                signal Xexit_148_symbol: Boolean;
                -- 
              begin -- 
                binary_72_inputs_146_start <= Xentry_144_symbol; -- control passed to block
                Xentry_147_symbol  <= binary_72_inputs_146_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/binary_72_inputs/$entry
                Xexit_148_symbol <= Xentry_147_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/binary_72_inputs/$exit
                binary_72_inputs_146_symbol <= Xexit_148_symbol; -- control passed from block 
                -- 
              end Block; -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/binary_72_inputs
              rr_149_symbol <= binary_72_inputs_146_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/rr
              branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xrr_cp_to_dp <= rr_149_symbol; -- link to DP
              ra_150_symbol <= branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xra_dp_to_cp; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/ra
              cr_151_symbol <= ra_150_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/cr
              branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xcr_cp_to_dp <= cr_151_symbol; -- link to DP
              ca_152_symbol <= branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xca_dp_to_cp; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/ca
              Xexit_145_symbol <= ca_152_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72/$exit
              binary_72_143_symbol <= Xexit_145_symbol; -- control passed from block 
              -- 
            end Block; -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/binary_72
            req_153_symbol <= binary_72_143_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/req
            branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xreq_cp_to_dp <= req_153_symbol; -- link to DP
            ack_154_symbol <= branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xack_dp_to_cp; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/ack
            Xexit_142_symbol <= ack_154_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73/$exit
            type_cast_73_140_symbol <= Xexit_142_symbol; -- control passed from block 
            -- 
          end Block; -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/type_cast_73
          Xexit_139_symbol <= type_cast_73_140_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74/$exit
          assign_stmt_74_137_symbol <= Xexit_139_symbol; -- control passed from block 
          -- 
        end Block; -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_74
        assign_stmt_78_155: Block -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78 
          signal assign_stmt_78_155_start: Boolean;
          signal Xentry_156_symbol: Boolean;
          signal Xexit_157_symbol: Boolean;
          signal type_cast_77_158_symbol : Boolean;
          -- 
        begin -- 
          assign_stmt_78_155_start <= Xentry_135_symbol; -- control passed to block
          Xentry_156_symbol  <= assign_stmt_78_155_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78/$entry
          type_cast_77_158: Block -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78/type_cast_77 
            signal type_cast_77_158_start: Boolean;
            signal Xentry_159_symbol: Boolean;
            signal Xexit_160_symbol: Boolean;
            signal req_161_symbol : Boolean;
            signal ack_162_symbol : Boolean;
            -- 
          begin -- 
            type_cast_77_158_start <= Xentry_156_symbol; -- control passed to block
            Xentry_159_symbol  <= type_cast_77_158_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78/type_cast_77/$entry
            req_161_symbol <= Xentry_159_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78/type_cast_77/req
            branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_78Xtype_cast_77Xreq_cp_to_dp <= req_161_symbol; -- link to DP
            ack_162_symbol <= branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_78Xtype_cast_77Xack_dp_to_cp; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78/type_cast_77/ack
            Xexit_160_symbol <= ack_162_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78/type_cast_77/$exit
            type_cast_77_158_symbol <= Xexit_160_symbol; -- control passed from block 
            -- 
          end Block; -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78/type_cast_77
          Xexit_157_symbol <= type_cast_77_158_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78/$exit
          assign_stmt_78_155_symbol <= Xexit_157_symbol; -- control passed from block 
          -- 
        end Block; -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_78
        assign_stmt_83_163: Block -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83 
          signal assign_stmt_83_163_start: Boolean;
          signal Xentry_164_symbol: Boolean;
          signal Xexit_165_symbol: Boolean;
          signal binary_82_166_symbol : Boolean;
          -- 
        begin -- 
          assign_stmt_83_163_start <= Xentry_135_symbol; -- control passed to block
          Xentry_164_symbol  <= assign_stmt_83_163_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/$entry
          binary_82_166: Block -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82 
            signal binary_82_166_start: Boolean;
            signal Xentry_167_symbol: Boolean;
            signal Xexit_168_symbol: Boolean;
            signal binary_82_inputs_169_symbol : Boolean;
            signal rr_172_symbol : Boolean;
            signal ra_173_symbol : Boolean;
            signal cr_174_symbol : Boolean;
            signal ca_175_symbol : Boolean;
            -- 
          begin -- 
            binary_82_166_start <= Xentry_164_symbol; -- control passed to block
            Xentry_167_symbol  <= binary_82_166_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/$entry
            binary_82_inputs_169: Block -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/binary_82_inputs 
              signal binary_82_inputs_169_start: Boolean;
              signal Xentry_170_symbol: Boolean;
              signal Xexit_171_symbol: Boolean;
              -- 
            begin -- 
              binary_82_inputs_169_start <= Xentry_167_symbol; -- control passed to block
              Xentry_170_symbol  <= binary_82_inputs_169_start; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/binary_82_inputs/$entry
              Xexit_171_symbol <= Xentry_170_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/binary_82_inputs/$exit
              binary_82_inputs_169_symbol <= Xexit_171_symbol; -- control passed from block 
              -- 
            end Block; -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/binary_82_inputs
            rr_172_symbol <= binary_82_inputs_169_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/rr
            branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xrr_cp_to_dp <= rr_172_symbol; -- link to DP
            ra_173_symbol <= branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xra_dp_to_cp; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/ra
            cr_174_symbol <= ra_173_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/cr
            branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xcr_cp_to_dp <= cr_174_symbol; -- link to DP
            ca_175_symbol <= branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xca_dp_to_cp; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/ca
            Xexit_168_symbol <= ca_175_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82/$exit
            binary_82_166_symbol <= Xexit_168_symbol; -- control passed from block 
            -- 
          end Block; -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/binary_82
          Xexit_165_symbol <= binary_82_166_symbol; -- transition branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83/$exit
          assign_stmt_83_163_symbol <= Xexit_165_symbol; -- control passed from block 
          -- 
        end Block; -- branch_block_stmt_14/parallel_block_stmt_68/assign_stmt_83
        Xexit_136_block : Block -- non-trivial join transition branch_block_stmt_14/parallel_block_stmt_68/$exit 
          signal Xexit_136_predecessors: BooleanArray(2 downto 0);
          signal Xexit_136_p0_pred: BooleanArray(0 downto 0);
          signal Xexit_136_p0_succ: BooleanArray(0 downto 0);
          signal Xexit_136_p1_pred: BooleanArray(0 downto 0);
          signal Xexit_136_p1_succ: BooleanArray(0 downto 0);
          signal Xexit_136_p2_pred: BooleanArray(0 downto 0);
          signal Xexit_136_p2_succ: BooleanArray(0 downto 0);
          -- 
        begin -- 
          Xexit_136_0_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_136_p0_pred, Xexit_136_p0_succ, Xexit_136_predecessors(0), clk, reset-- 
            ); -- 
          Xexit_136_p0_succ(0) <=  Xexit_136_symbol;
          Xexit_136_p0_pred(0) <=  assign_stmt_74_137_symbol;
          Xexit_136_1_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_136_p1_pred, Xexit_136_p1_succ, Xexit_136_predecessors(1), clk, reset-- 
            ); -- 
          Xexit_136_p1_succ(0) <=  Xexit_136_symbol;
          Xexit_136_p1_pred(0) <=  assign_stmt_78_155_symbol;
          Xexit_136_2_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_136_p2_pred, Xexit_136_p2_succ, Xexit_136_predecessors(2), clk, reset-- 
            ); -- 
          Xexit_136_p2_succ(0) <=  Xexit_136_symbol;
          Xexit_136_p2_pred(0) <=  assign_stmt_83_163_symbol;
          Xexit_136_symbol <= AndReduce(Xexit_136_predecessors); 
          -- 
        end Block; -- non-trivial join transition branch_block_stmt_14/parallel_block_stmt_68/$exit
        parallel_block_stmt_68_134_symbol <= Xexit_136_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/parallel_block_stmt_68
      if_stmt_85_eval_test_176: Block -- branch_block_stmt_14/if_stmt_85_eval_test 
        signal if_stmt_85_eval_test_176_start: Boolean;
        signal Xentry_177_symbol: Boolean;
        signal Xexit_178_symbol: Boolean;
        signal binary_88_179_symbol : Boolean;
        signal branch_req_189_symbol : Boolean;
        -- 
      begin -- 
        if_stmt_85_eval_test_176_start <= if_stmt_85_x_xentry_x_xx_x15_symbol; -- control passed to block
        Xentry_177_symbol  <= if_stmt_85_eval_test_176_start; -- transition branch_block_stmt_14/if_stmt_85_eval_test/$entry
        binary_88_179: Block -- branch_block_stmt_14/if_stmt_85_eval_test/binary_88 
          signal binary_88_179_start: Boolean;
          signal Xentry_180_symbol: Boolean;
          signal Xexit_181_symbol: Boolean;
          signal binary_88_inputs_182_symbol : Boolean;
          signal rr_185_symbol : Boolean;
          signal ra_186_symbol : Boolean;
          signal cr_187_symbol : Boolean;
          signal ca_188_symbol : Boolean;
          -- 
        begin -- 
          binary_88_179_start <= Xentry_177_symbol; -- control passed to block
          Xentry_180_symbol  <= binary_88_179_start; -- transition branch_block_stmt_14/if_stmt_85_eval_test/binary_88/$entry
          binary_88_inputs_182: Block -- branch_block_stmt_14/if_stmt_85_eval_test/binary_88/binary_88_inputs 
            signal binary_88_inputs_182_start: Boolean;
            signal Xentry_183_symbol: Boolean;
            signal Xexit_184_symbol: Boolean;
            -- 
          begin -- 
            binary_88_inputs_182_start <= Xentry_180_symbol; -- control passed to block
            Xentry_183_symbol  <= binary_88_inputs_182_start; -- transition branch_block_stmt_14/if_stmt_85_eval_test/binary_88/binary_88_inputs/$entry
            Xexit_184_symbol <= Xentry_183_symbol; -- transition branch_block_stmt_14/if_stmt_85_eval_test/binary_88/binary_88_inputs/$exit
            binary_88_inputs_182_symbol <= Xexit_184_symbol; -- control passed from block 
            -- 
          end Block; -- branch_block_stmt_14/if_stmt_85_eval_test/binary_88/binary_88_inputs
          rr_185_symbol <= binary_88_inputs_182_symbol; -- transition branch_block_stmt_14/if_stmt_85_eval_test/binary_88/rr
          branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xrr_cp_to_dp <= rr_185_symbol; -- link to DP
          ra_186_symbol <= branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xra_dp_to_cp; -- transition branch_block_stmt_14/if_stmt_85_eval_test/binary_88/ra
          cr_187_symbol <= ra_186_symbol; -- transition branch_block_stmt_14/if_stmt_85_eval_test/binary_88/cr
          branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xcr_cp_to_dp <= cr_187_symbol; -- link to DP
          ca_188_symbol <= branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xca_dp_to_cp; -- transition branch_block_stmt_14/if_stmt_85_eval_test/binary_88/ca
          Xexit_181_symbol <= ca_188_symbol; -- transition branch_block_stmt_14/if_stmt_85_eval_test/binary_88/$exit
          binary_88_179_symbol <= Xexit_181_symbol; -- control passed from block 
          -- 
        end Block; -- branch_block_stmt_14/if_stmt_85_eval_test/binary_88
        branch_req_189_symbol <= binary_88_179_symbol; -- transition branch_block_stmt_14/if_stmt_85_eval_test/branch_req
        branch_block_stmt_14Xif_stmt_85_eval_testXbranch_req_cp_to_dp <= branch_req_189_symbol; -- link to DP
        Xexit_178_symbol <= branch_req_189_symbol; -- transition branch_block_stmt_14/if_stmt_85_eval_test/$exit
        if_stmt_85_eval_test_176_symbol <= Xexit_178_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/if_stmt_85_eval_test
      binary_88_place_190_symbol  <=  if_stmt_85_eval_test_176_symbol; -- place branch_block_stmt_14/binary_88_place (optimized away) 
      if_stmt_85_if_link_191: Block -- branch_block_stmt_14/if_stmt_85_if_link 
        signal if_stmt_85_if_link_191_start: Boolean;
        signal Xentry_192_symbol: Boolean;
        signal Xexit_193_symbol: Boolean;
        signal if_choice_transition_194_symbol : Boolean;
        -- 
      begin -- 
        if_stmt_85_if_link_191_start <= binary_88_place_190_symbol; -- control passed to block
        Xentry_192_symbol  <= if_stmt_85_if_link_191_start; -- transition branch_block_stmt_14/if_stmt_85_if_link/$entry
        if_choice_transition_194_symbol <= branch_block_stmt_14Xif_stmt_85_if_linkXif_choice_transition_dp_to_cp; -- transition branch_block_stmt_14/if_stmt_85_if_link/if_choice_transition
        Xexit_193_symbol <= if_choice_transition_194_symbol; -- transition branch_block_stmt_14/if_stmt_85_if_link/$exit
        if_stmt_85_if_link_191_symbol <= Xexit_193_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/if_stmt_85_if_link
      if_stmt_85_else_link_195: Block -- branch_block_stmt_14/if_stmt_85_else_link 
        signal if_stmt_85_else_link_195_start: Boolean;
        signal Xentry_196_symbol: Boolean;
        signal Xexit_197_symbol: Boolean;
        signal else_choice_transition_198_symbol : Boolean;
        -- 
      begin -- 
        if_stmt_85_else_link_195_start <= binary_88_place_190_symbol; -- control passed to block
        Xentry_196_symbol  <= if_stmt_85_else_link_195_start; -- transition branch_block_stmt_14/if_stmt_85_else_link/$entry
        else_choice_transition_198_symbol <= branch_block_stmt_14Xif_stmt_85_else_linkXelse_choice_transition_dp_to_cp; -- transition branch_block_stmt_14/if_stmt_85_else_link/else_choice_transition
        Xexit_197_symbol <= else_choice_transition_198_symbol; -- transition branch_block_stmt_14/if_stmt_85_else_link/$exit
        if_stmt_85_else_link_195_symbol <= Xexit_197_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/if_stmt_85_else_link
      stmt_89_x_xentry_x_xx_x199_symbol  <=  if_stmt_85_if_link_191_symbol; -- place branch_block_stmt_14/stmt_89__entry__ (optimized away) 
      stmt_89_x_xexit_x_xx_x200_symbol  <=  stmt_89_201_symbol; -- place branch_block_stmt_14/stmt_89__exit__ (optimized away) 
      stmt_89_201: Block -- branch_block_stmt_14/stmt_89 
        signal stmt_89_201_start: Boolean;
        signal Xentry_202_symbol: Boolean;
        signal Xexit_203_symbol: Boolean;
        -- 
      begin -- 
        stmt_89_201_start <= stmt_89_x_xentry_x_xx_x199_symbol; -- control passed to block
        Xentry_202_symbol  <= stmt_89_201_start; -- transition branch_block_stmt_14/stmt_89/$entry
        Xexit_203_symbol <= Xentry_202_symbol; -- transition branch_block_stmt_14/stmt_89/$exit
        stmt_89_201_symbol <= Xexit_203_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/stmt_89
      loopback_204_symbol  <=  if_stmt_85_else_link_195_symbol; -- place branch_block_stmt_14/loopback (optimized away) 
      branch_block_stmt_14_x_xentry_x_xx_xPhiReq_205: Block -- branch_block_stmt_14/branch_block_stmt_14__entry___PhiReq 
        signal branch_block_stmt_14_x_xentry_x_xx_xPhiReq_205_start: Boolean;
        signal Xentry_206_symbol: Boolean;
        signal Xexit_207_symbol: Boolean;
        signal phi_stmt_16_req_208_symbol : Boolean;
        signal phi_stmt_20_req_209_symbol : Boolean;
        signal phi_stmt_24_req_210_symbol : Boolean;
        -- 
      begin -- 
        branch_block_stmt_14_x_xentry_x_xx_xPhiReq_205_start <= branch_block_stmt_14_x_xentry_x_xx_x6_symbol; -- control passed to block
        Xentry_206_symbol  <= branch_block_stmt_14_x_xentry_x_xx_xPhiReq_205_start; -- transition branch_block_stmt_14/branch_block_stmt_14__entry___PhiReq/$entry
        phi_stmt_16_req_208_symbol <= Xentry_206_symbol; -- transition branch_block_stmt_14/branch_block_stmt_14__entry___PhiReq/phi_stmt_16_req
        branch_block_stmt_14Xbranch_block_stmt_14_x_xentry_x_xx_xPhiReqXphi_stmt_16_req_cp_to_dp <= phi_stmt_16_req_208_symbol; -- link to DP
        phi_stmt_20_req_209_symbol <= Xentry_206_symbol; -- transition branch_block_stmt_14/branch_block_stmt_14__entry___PhiReq/phi_stmt_20_req
        branch_block_stmt_14Xbranch_block_stmt_14_x_xentry_x_xx_xPhiReqXphi_stmt_20_req_cp_to_dp <= phi_stmt_20_req_209_symbol; -- link to DP
        phi_stmt_24_req_210_symbol <= Xentry_206_symbol; -- transition branch_block_stmt_14/branch_block_stmt_14__entry___PhiReq/phi_stmt_24_req
        branch_block_stmt_14Xbranch_block_stmt_14_x_xentry_x_xx_xPhiReqXphi_stmt_24_req_cp_to_dp <= phi_stmt_24_req_210_symbol; -- link to DP
        Xexit_207_block : Block -- non-trivial join transition branch_block_stmt_14/branch_block_stmt_14__entry___PhiReq/$exit 
          signal Xexit_207_predecessors: BooleanArray(2 downto 0);
          signal Xexit_207_p0_pred: BooleanArray(0 downto 0);
          signal Xexit_207_p0_succ: BooleanArray(0 downto 0);
          signal Xexit_207_p1_pred: BooleanArray(0 downto 0);
          signal Xexit_207_p1_succ: BooleanArray(0 downto 0);
          signal Xexit_207_p2_pred: BooleanArray(0 downto 0);
          signal Xexit_207_p2_succ: BooleanArray(0 downto 0);
          -- 
        begin -- 
          Xexit_207_0_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_207_p0_pred, Xexit_207_p0_succ, Xexit_207_predecessors(0), clk, reset-- 
            ); -- 
          Xexit_207_p0_succ(0) <=  Xexit_207_symbol;
          Xexit_207_p0_pred(0) <=  phi_stmt_16_req_208_symbol;
          Xexit_207_1_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_207_p1_pred, Xexit_207_p1_succ, Xexit_207_predecessors(1), clk, reset-- 
            ); -- 
          Xexit_207_p1_succ(0) <=  Xexit_207_symbol;
          Xexit_207_p1_pred(0) <=  phi_stmt_20_req_209_symbol;
          Xexit_207_2_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_207_p2_pred, Xexit_207_p2_succ, Xexit_207_predecessors(2), clk, reset-- 
            ); -- 
          Xexit_207_p2_succ(0) <=  Xexit_207_symbol;
          Xexit_207_p2_pred(0) <=  phi_stmt_24_req_210_symbol;
          Xexit_207_symbol <= AndReduce(Xexit_207_predecessors); 
          -- 
        end Block; -- non-trivial join transition branch_block_stmt_14/branch_block_stmt_14__entry___PhiReq/$exit
        branch_block_stmt_14_x_xentry_x_xx_xPhiReq_205_symbol <= Xexit_207_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/branch_block_stmt_14__entry___PhiReq
      loopback_PhiReq_211: Block -- branch_block_stmt_14/loopback_PhiReq 
        signal loopback_PhiReq_211_start: Boolean;
        signal Xentry_212_symbol: Boolean;
        signal Xexit_213_symbol: Boolean;
        signal phi_stmt_16_req_214_symbol : Boolean;
        signal phi_stmt_20_req_215_symbol : Boolean;
        signal phi_stmt_24_req_216_symbol : Boolean;
        -- 
      begin -- 
        loopback_PhiReq_211_start <= loopback_204_symbol; -- control passed to block
        Xentry_212_symbol  <= loopback_PhiReq_211_start; -- transition branch_block_stmt_14/loopback_PhiReq/$entry
        phi_stmt_16_req_214_symbol <= Xentry_212_symbol; -- transition branch_block_stmt_14/loopback_PhiReq/phi_stmt_16_req
        branch_block_stmt_14Xloopback_PhiReqXphi_stmt_16_req_cp_to_dp <= phi_stmt_16_req_214_symbol; -- link to DP
        phi_stmt_20_req_215_symbol <= Xentry_212_symbol; -- transition branch_block_stmt_14/loopback_PhiReq/phi_stmt_20_req
        branch_block_stmt_14Xloopback_PhiReqXphi_stmt_20_req_cp_to_dp <= phi_stmt_20_req_215_symbol; -- link to DP
        phi_stmt_24_req_216_symbol <= Xentry_212_symbol; -- transition branch_block_stmt_14/loopback_PhiReq/phi_stmt_24_req
        branch_block_stmt_14Xloopback_PhiReqXphi_stmt_24_req_cp_to_dp <= phi_stmt_24_req_216_symbol; -- link to DP
        Xexit_213_block : Block -- non-trivial join transition branch_block_stmt_14/loopback_PhiReq/$exit 
          signal Xexit_213_predecessors: BooleanArray(2 downto 0);
          signal Xexit_213_p0_pred: BooleanArray(0 downto 0);
          signal Xexit_213_p0_succ: BooleanArray(0 downto 0);
          signal Xexit_213_p1_pred: BooleanArray(0 downto 0);
          signal Xexit_213_p1_succ: BooleanArray(0 downto 0);
          signal Xexit_213_p2_pred: BooleanArray(0 downto 0);
          signal Xexit_213_p2_succ: BooleanArray(0 downto 0);
          -- 
        begin -- 
          Xexit_213_0_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_213_p0_pred, Xexit_213_p0_succ, Xexit_213_predecessors(0), clk, reset-- 
            ); -- 
          Xexit_213_p0_succ(0) <=  Xexit_213_symbol;
          Xexit_213_p0_pred(0) <=  phi_stmt_16_req_214_symbol;
          Xexit_213_1_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_213_p1_pred, Xexit_213_p1_succ, Xexit_213_predecessors(1), clk, reset-- 
            ); -- 
          Xexit_213_p1_succ(0) <=  Xexit_213_symbol;
          Xexit_213_p1_pred(0) <=  phi_stmt_20_req_215_symbol;
          Xexit_213_2_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_213_p2_pred, Xexit_213_p2_succ, Xexit_213_predecessors(2), clk, reset-- 
            ); -- 
          Xexit_213_p2_succ(0) <=  Xexit_213_symbol;
          Xexit_213_p2_pred(0) <=  phi_stmt_24_req_216_symbol;
          Xexit_213_symbol <= AndReduce(Xexit_213_predecessors); 
          -- 
        end Block; -- non-trivial join transition branch_block_stmt_14/loopback_PhiReq/$exit
        loopback_PhiReq_211_symbol <= Xexit_213_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/loopback_PhiReq
      merge_stmt_15_PhiReqMerge_217_symbol  <=  branch_block_stmt_14_x_xentry_x_xx_xPhiReq_205_symbol or loopback_PhiReq_211_symbol; -- place branch_block_stmt_14/merge_stmt_15_PhiReqMerge (optimized away) 
      merge_stmt_15_PhiAck_218: Block -- branch_block_stmt_14/merge_stmt_15_PhiAck 
        signal merge_stmt_15_PhiAck_218_start: Boolean;
        signal Xentry_219_symbol: Boolean;
        signal Xexit_220_symbol: Boolean;
        signal phi_stmt_16_ack_221_symbol : Boolean;
        signal phi_stmt_20_ack_222_symbol : Boolean;
        signal phi_stmt_24_ack_223_symbol : Boolean;
        -- 
      begin -- 
        merge_stmt_15_PhiAck_218_start <= merge_stmt_15_PhiReqMerge_217_symbol; -- control passed to block
        Xentry_219_symbol  <= merge_stmt_15_PhiAck_218_start; -- transition branch_block_stmt_14/merge_stmt_15_PhiAck/$entry
        phi_stmt_16_ack_221_symbol <= branch_block_stmt_14Xmerge_stmt_15_PhiAckXphi_stmt_16_ack_dp_to_cp; -- transition branch_block_stmt_14/merge_stmt_15_PhiAck/phi_stmt_16_ack
        phi_stmt_20_ack_222_symbol <= branch_block_stmt_14Xmerge_stmt_15_PhiAckXphi_stmt_20_ack_dp_to_cp; -- transition branch_block_stmt_14/merge_stmt_15_PhiAck/phi_stmt_20_ack
        phi_stmt_24_ack_223_symbol <= branch_block_stmt_14Xmerge_stmt_15_PhiAckXphi_stmt_24_ack_dp_to_cp; -- transition branch_block_stmt_14/merge_stmt_15_PhiAck/phi_stmt_24_ack
        Xexit_220_block : Block -- non-trivial join transition branch_block_stmt_14/merge_stmt_15_PhiAck/$exit 
          signal Xexit_220_predecessors: BooleanArray(2 downto 0);
          signal Xexit_220_p0_pred: BooleanArray(0 downto 0);
          signal Xexit_220_p0_succ: BooleanArray(0 downto 0);
          signal Xexit_220_p1_pred: BooleanArray(0 downto 0);
          signal Xexit_220_p1_succ: BooleanArray(0 downto 0);
          signal Xexit_220_p2_pred: BooleanArray(0 downto 0);
          signal Xexit_220_p2_succ: BooleanArray(0 downto 0);
          -- 
        begin -- 
          Xexit_220_0_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_220_p0_pred, Xexit_220_p0_succ, Xexit_220_predecessors(0), clk, reset-- 
            ); -- 
          Xexit_220_p0_succ(0) <=  Xexit_220_symbol;
          Xexit_220_p0_pred(0) <=  phi_stmt_16_ack_221_symbol;
          Xexit_220_1_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_220_p1_pred, Xexit_220_p1_succ, Xexit_220_predecessors(1), clk, reset-- 
            ); -- 
          Xexit_220_p1_succ(0) <=  Xexit_220_symbol;
          Xexit_220_p1_pred(0) <=  phi_stmt_20_ack_222_symbol;
          Xexit_220_2_place: Place -- 
            generic map(marking => false)
            port map( -- 
              Xexit_220_p2_pred, Xexit_220_p2_succ, Xexit_220_predecessors(2), clk, reset-- 
            ); -- 
          Xexit_220_p2_succ(0) <=  Xexit_220_symbol;
          Xexit_220_p2_pred(0) <=  phi_stmt_24_ack_223_symbol;
          Xexit_220_symbol <= AndReduce(Xexit_220_predecessors); 
          -- 
        end Block; -- non-trivial join transition branch_block_stmt_14/merge_stmt_15_PhiAck/$exit
        merge_stmt_15_PhiAck_218_symbol <= Xexit_220_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/merge_stmt_15_PhiAck
      if0_PhiReq_224: Block -- branch_block_stmt_14/if0_PhiReq 
        signal if0_PhiReq_224_start: Boolean;
        signal Xentry_225_symbol: Boolean;
        signal Xexit_226_symbol: Boolean;
        signal phi_stmt_54_req_227_symbol : Boolean;
        -- 
      begin -- 
        if0_PhiReq_224_start <= if0_77_symbol; -- control passed to block
        Xentry_225_symbol  <= if0_PhiReq_224_start; -- transition branch_block_stmt_14/if0_PhiReq/$entry
        phi_stmt_54_req_227_symbol <= Xentry_225_symbol; -- transition branch_block_stmt_14/if0_PhiReq/phi_stmt_54_req
        branch_block_stmt_14Xif0_PhiReqXphi_stmt_54_req_cp_to_dp <= phi_stmt_54_req_227_symbol; -- link to DP
        Xexit_226_symbol <= phi_stmt_54_req_227_symbol; -- transition branch_block_stmt_14/if0_PhiReq/$exit
        if0_PhiReq_224_symbol <= Xexit_226_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/if0_PhiReq
      if1_PhiReq_228: Block -- branch_block_stmt_14/if1_PhiReq 
        signal if1_PhiReq_228_start: Boolean;
        signal Xentry_229_symbol: Boolean;
        signal Xexit_230_symbol: Boolean;
        signal phi_stmt_54_req_231_symbol : Boolean;
        -- 
      begin -- 
        if1_PhiReq_228_start <= if1_41_symbol; -- control passed to block
        Xentry_229_symbol  <= if1_PhiReq_228_start; -- transition branch_block_stmt_14/if1_PhiReq/$entry
        phi_stmt_54_req_231_symbol <= Xentry_229_symbol; -- transition branch_block_stmt_14/if1_PhiReq/phi_stmt_54_req
        branch_block_stmt_14Xif1_PhiReqXphi_stmt_54_req_cp_to_dp <= phi_stmt_54_req_231_symbol; -- link to DP
        Xexit_230_symbol <= phi_stmt_54_req_231_symbol; -- transition branch_block_stmt_14/if1_PhiReq/$exit
        if1_PhiReq_228_symbol <= Xexit_230_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/if1_PhiReq
      merge_stmt_53_PhiReqMerge_232_symbol  <=  if0_PhiReq_224_symbol or if1_PhiReq_228_symbol; -- place branch_block_stmt_14/merge_stmt_53_PhiReqMerge (optimized away) 
      merge_stmt_53_PhiAck_233: Block -- branch_block_stmt_14/merge_stmt_53_PhiAck 
        signal merge_stmt_53_PhiAck_233_start: Boolean;
        signal Xentry_234_symbol: Boolean;
        signal Xexit_235_symbol: Boolean;
        signal phi_stmt_54_ack_236_symbol : Boolean;
        -- 
      begin -- 
        merge_stmt_53_PhiAck_233_start <= merge_stmt_53_PhiReqMerge_232_symbol; -- control passed to block
        Xentry_234_symbol  <= merge_stmt_53_PhiAck_233_start; -- transition branch_block_stmt_14/merge_stmt_53_PhiAck/$entry
        phi_stmt_54_ack_236_symbol <= branch_block_stmt_14Xmerge_stmt_53_PhiAckXphi_stmt_54_ack_dp_to_cp; -- transition branch_block_stmt_14/merge_stmt_53_PhiAck/phi_stmt_54_ack
        Xexit_235_symbol <= phi_stmt_54_ack_236_symbol; -- transition branch_block_stmt_14/merge_stmt_53_PhiAck/$exit
        merge_stmt_53_PhiAck_233_symbol <= Xexit_235_symbol; -- control passed from block 
        -- 
      end Block; -- branch_block_stmt_14/merge_stmt_53_PhiAck
      Xexit_5_symbol <= branch_block_stmt_14_x_xexit_x_xx_x7_symbol; -- transition branch_block_stmt_14/$exit
      branch_block_stmt_14_3_symbol <= Xexit_5_symbol; -- control passed from block 
      -- 
    end Block; -- branch_block_stmt_14
    assign_stmt_98_237: Block -- assign_stmt_98 
      signal assign_stmt_98_237_start: Boolean;
      signal Xentry_238_symbol: Boolean;
      signal Xexit_239_symbol: Boolean;
      signal binary_97_240_symbol : Boolean;
      -- 
    begin -- 
      assign_stmt_98_237_start <= branch_block_stmt_14_3_symbol; -- control passed to block
      Xentry_238_symbol  <= assign_stmt_98_237_start; -- transition assign_stmt_98/$entry
      binary_97_240: Block -- assign_stmt_98/binary_97 
        signal binary_97_240_start: Boolean;
        signal Xentry_241_symbol: Boolean;
        signal Xexit_242_symbol: Boolean;
        signal binary_97_inputs_243_symbol : Boolean;
        signal rr_246_symbol : Boolean;
        signal ra_247_symbol : Boolean;
        signal cr_248_symbol : Boolean;
        signal ca_249_symbol : Boolean;
        -- 
      begin -- 
        binary_97_240_start <= Xentry_238_symbol; -- control passed to block
        Xentry_241_symbol  <= binary_97_240_start; -- transition assign_stmt_98/binary_97/$entry
        binary_97_inputs_243: Block -- assign_stmt_98/binary_97/binary_97_inputs 
          signal binary_97_inputs_243_start: Boolean;
          signal Xentry_244_symbol: Boolean;
          signal Xexit_245_symbol: Boolean;
          -- 
        begin -- 
          binary_97_inputs_243_start <= Xentry_241_symbol; -- control passed to block
          Xentry_244_symbol  <= binary_97_inputs_243_start; -- transition assign_stmt_98/binary_97/binary_97_inputs/$entry
          Xexit_245_symbol <= Xentry_244_symbol; -- transition assign_stmt_98/binary_97/binary_97_inputs/$exit
          binary_97_inputs_243_symbol <= Xexit_245_symbol; -- control passed from block 
          -- 
        end Block; -- assign_stmt_98/binary_97/binary_97_inputs
        rr_246_symbol <= binary_97_inputs_243_symbol; -- transition assign_stmt_98/binary_97/rr
        assign_stmt_98Xbinary_97Xrr_cp_to_dp <= rr_246_symbol; -- link to DP
        ra_247_symbol <= assign_stmt_98Xbinary_97Xra_dp_to_cp; -- transition assign_stmt_98/binary_97/ra
        cr_248_symbol <= ra_247_symbol; -- transition assign_stmt_98/binary_97/cr
        assign_stmt_98Xbinary_97Xcr_cp_to_dp <= cr_248_symbol; -- link to DP
        ca_249_symbol <= assign_stmt_98Xbinary_97Xca_dp_to_cp; -- transition assign_stmt_98/binary_97/ca
        Xexit_242_symbol <= ca_249_symbol; -- transition assign_stmt_98/binary_97/$exit
        binary_97_240_symbol <= Xexit_242_symbol; -- control passed from block 
        -- 
      end Block; -- assign_stmt_98/binary_97
      Xexit_239_symbol <= binary_97_240_symbol; -- transition assign_stmt_98/$exit
      assign_stmt_98_237_symbol <= Xexit_239_symbol; -- control passed from block 
      -- 
    end Block; -- assign_stmt_98
    Xexit_2_symbol <= assign_stmt_98_237_symbol; -- transition $exit
    fin  <=  '1' when Xexit_2_symbol else '0'; -- fin symbol when control-path exits
    -- 
  end Block; -- control-path
  -- the data path
  data_path: Block -- 
    signal binary_32_wire : std_logic_vector(0 downto 0);
    signal binary_36_wire : std_logic_vector(9 downto 0);
    signal binary_38_wire : std_logic_vector(10 downto 0);
    signal binary_47_wire : std_logic_vector(10 downto 0);
    signal binary_62_wire : std_logic_vector(0 downto 0);
    signal binary_64_wire : std_logic_vector(10 downto 0);
    signal binary_72_wire : std_logic_vector(10 downto 0);
    signal binary_88_wire : std_logic_vector(0 downto 0);
    signal count_83 : std_logic_vector(3 downto 0);
    signal count_in_24 : std_logic_vector(3 downto 0);
    signal expr_18_wire_constant : std_logic_vector(9 downto 0);
    signal expr_22_wire_constant : std_logic_vector(9 downto 0);
    signal expr_26_wire_constant : std_logic_vector(3 downto 0);
    signal expr_39_wire_constant : std_logic_vector(3 downto 0);
    signal expr_48_wire_constant : std_logic_vector(3 downto 0);
    signal expr_61_wire_constant : std_logic_vector(3 downto 0);
    signal expr_65_wire_constant : std_logic_vector(3 downto 0);
    signal expr_71_wire_constant : std_logic_vector(3 downto 0);
    signal expr_81_wire_constant : std_logic_vector(3 downto 0);
    signal expr_87_wire_constant : std_logic_vector(3 downto 0);
    signal nu_54 : std_logic_vector(10 downto 0);
    signal nu_else_50 : std_logic_vector(10 downto 0);
    signal nu_if_41 : std_logic_vector(10 downto 0);
    signal nv_67 : std_logic_vector(10 downto 0);
    signal simple_obj_ref_37_wire_constant : std_logic_vector(0 downto 0);
    signal simple_obj_ref_46_wire_constant : std_logic_vector(0 downto 0);
    signal u_74 : std_logic_vector(9 downto 0);
    signal u_in_16 : std_logic_vector(9 downto 0);
    signal v_78 : std_logic_vector(9 downto 0);
    signal v_in_20 : std_logic_vector(9 downto 0);
    signal xxsum_modxxz1 : std_logic_vector(0 downto 0);
    signal xxsum_modxxz9 : std_logic_vector(8 downto 0);
    -- 
  begin -- 
    expr_18_wire_constant <= "0000000000";
    expr_22_wire_constant <= "0000000000";
    expr_26_wire_constant <= "0000";
    expr_39_wire_constant <= "0001";
    expr_48_wire_constant <= "0001";
    expr_61_wire_constant <= "0000";
    expr_65_wire_constant <= "0001";
    expr_71_wire_constant <= "0001";
    expr_81_wire_constant <= "0001";
    expr_87_wire_constant <= "1010";
    simple_obj_ref_37_wire_constant <= "0";
    simple_obj_ref_46_wire_constant <= "0";
    xxsum_modxxz1 <= "0";
    xxsum_modxxz9 <= "000000000";
    phi_stmt_16: Block -- phi operator 
      signal idata: std_logic_vector(19 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= expr_18_wire_constant & u_74;
      req <= branch_block_stmt_14Xbranch_block_stmt_14_x_xentry_x_xx_xPhiReqXphi_stmt_16_req_cp_to_dp & branch_block_stmt_14Xloopback_PhiReqXphi_stmt_16_req_cp_to_dp;
      phi: PhiBase -- 
        generic map( -- 
          num_reqs => 2,
          data_width => 10) -- 
        port map( -- 
          req => req, 
          ack => branch_block_stmt_14Xmerge_stmt_15_PhiAckXphi_stmt_16_ack_dp_to_cp,
          idata => idata,
          odata => u_in_16,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_16
    phi_stmt_20: Block -- phi operator 
      signal idata: std_logic_vector(19 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= expr_22_wire_constant & v_78;
      req <= branch_block_stmt_14Xbranch_block_stmt_14_x_xentry_x_xx_xPhiReqXphi_stmt_20_req_cp_to_dp & branch_block_stmt_14Xloopback_PhiReqXphi_stmt_20_req_cp_to_dp;
      phi: PhiBase -- 
        generic map( -- 
          num_reqs => 2,
          data_width => 10) -- 
        port map( -- 
          req => req, 
          ack => branch_block_stmt_14Xmerge_stmt_15_PhiAckXphi_stmt_20_ack_dp_to_cp,
          idata => idata,
          odata => v_in_20,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_20
    phi_stmt_24: Block -- phi operator 
      signal idata: std_logic_vector(7 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= expr_26_wire_constant & count_83;
      req <= branch_block_stmt_14Xbranch_block_stmt_14_x_xentry_x_xx_xPhiReqXphi_stmt_24_req_cp_to_dp & branch_block_stmt_14Xloopback_PhiReqXphi_stmt_24_req_cp_to_dp;
      phi: PhiBase -- 
        generic map( -- 
          num_reqs => 2,
          data_width => 4) -- 
        port map( -- 
          req => req, 
          ack => branch_block_stmt_14Xmerge_stmt_15_PhiAckXphi_stmt_24_ack_dp_to_cp,
          idata => idata,
          odata => count_in_24,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_24
    phi_stmt_54: Block -- phi operator 
      signal idata: std_logic_vector(21 downto 0);
      signal req: BooleanArray(1 downto 0);
      --
    begin -- 
      idata <= nu_if_41 & nu_else_50;
      req <= branch_block_stmt_14Xif1_PhiReqXphi_stmt_54_req_cp_to_dp & branch_block_stmt_14Xif0_PhiReqXphi_stmt_54_req_cp_to_dp;
      phi: PhiBase -- 
        generic map( -- 
          num_reqs => 2,
          data_width => 11) -- 
        port map( -- 
          req => req, 
          ack => branch_block_stmt_14Xmerge_stmt_53_PhiAckXphi_stmt_54_ack_dp_to_cp,
          idata => idata,
          odata => nu_54,
          clk => clk,
          reset => reset ); -- 
      -- 
    end Block; -- phi operator phi_stmt_54
    type_cast_73_inst: RegisterBase generic map(in_data_width => 11,out_data_width => 10) -- 
      port map( din => binary_72_wire, dout => u_74, req => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xreq_cp_to_dp, ack => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xack_dp_to_cp, clk => clk, reset => reset); -- 
    type_cast_77_inst: RegisterBase generic map(in_data_width => 11,out_data_width => 10) -- 
      port map( din => nv_67, dout => v_78, req => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_78Xtype_cast_77Xreq_cp_to_dp, ack => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_78Xtype_cast_77Xack_dp_to_cp, clk => clk, reset => reset); -- 
    if_stmt_29_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= binary_32_wire;
      branch_instance: BranchBase -- 
        generic map( condition_width => 1)
        port map( -- 
          condition => condition_sig,
          req => branch_block_stmt_14Xif_stmt_29_eval_testXbranch_req_cp_to_dp,
          ack0 => branch_block_stmt_14Xif_stmt_29_else_linkXelse_choice_transition_dp_to_cp,
          ack1 => branch_block_stmt_14Xif_stmt_29_if_linkXif_choice_transition_dp_to_cp,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    if_stmt_85_branch: Block -- 
      -- branch-block
      signal condition_sig : std_logic_vector(0 downto 0);
      begin 
      condition_sig <= binary_88_wire;
      branch_instance: BranchBase -- 
        generic map( condition_width => 1)
        port map( -- 
          condition => condition_sig,
          req => branch_block_stmt_14Xif_stmt_85_eval_testXbranch_req_cp_to_dp,
          ack0 => branch_block_stmt_14Xif_stmt_85_else_linkXelse_choice_transition_dp_to_cp,
          ack1 => branch_block_stmt_14Xif_stmt_85_if_linkXif_choice_transition_dp_to_cp,
          clk => clk,
          reset => reset); -- 
      --
    end Block; -- branch-block
    -- shared split operator group (0) : binary_32_inst 
    SplitOperatorGroup0: Block -- 
      signal data_in: std_logic_vector(13 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= a & count_in_24;
      binary_32_wire <= data_out(0 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApBitsel",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 10,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 4, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0",
          use_constant  => false,
          zero_delay => false, 
          flow_through => true--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xif_stmt_29_eval_testXbinary_32Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 0
    -- shared split operator group (1) : binary_36_inst 
    SplitOperatorGroup1: Block -- 
      signal data_in: std_logic_vector(19 downto 0);
      signal data_out: std_logic_vector(9 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= u_in_16 & b;
      binary_36_wire <= data_out(9 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 10,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 10, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 10,
          constant_operand => "0",
          use_constant  => false,
          zero_delay => false, 
          flow_through => false--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xbinary_38_inputsXbinary_36Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 1
    -- shared split operator group (2) : binary_38_inst 
    SplitOperatorGroup2: Block -- 
      signal data_in: std_logic_vector(9 downto 0);
      signal data_out: std_logic_vector(10 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= binary_36_wire;
      binary_38_wire <= data_out(10 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApConcat",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 10,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 11,
          constant_operand => "0",
          use_constant  => true,
          zero_delay => false, 
          flow_through => true--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xbinary_40_inputsXbinary_38Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 2
    -- shared split operator group (3) : binary_40_inst 
    SplitOperatorGroup3: Block -- 
      signal data_in: std_logic_vector(10 downto 0);
      signal data_out: std_logic_vector(10 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= binary_38_wire;
      nu_if_41 <= data_out(10 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApIntLSHR",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 11,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 11,
          constant_operand => "0001",
          use_constant  => true,
          zero_delay => false, 
          flow_through => false--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xassign_stmt_41Xbinary_40Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 3
    -- shared split operator group (4) : binary_47_inst 
    SplitOperatorGroup4: Block -- 
      signal data_in: std_logic_vector(9 downto 0);
      signal data_out: std_logic_vector(10 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= u_in_16;
      binary_47_wire <= data_out(10 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApConcat",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 10,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 11,
          constant_operand => "0",
          use_constant  => true,
          zero_delay => false, 
          flow_through => true--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xassign_stmt_50Xbinary_49Xbinary_49_inputsXbinary_47Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 4
    -- shared split operator group (5) : binary_49_inst 
    SplitOperatorGroup5: Block -- 
      signal data_in: std_logic_vector(10 downto 0);
      signal data_out: std_logic_vector(10 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= binary_47_wire;
      nu_else_50 <= data_out(10 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApIntLSHR",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 11,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 11,
          constant_operand => "0001",
          use_constant  => true,
          zero_delay => false, 
          flow_through => false--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xassign_stmt_50Xbinary_49Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xassign_stmt_50Xbinary_49Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xassign_stmt_50Xbinary_49Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xassign_stmt_50Xbinary_49Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 5
    -- shared split operator group (6) : binary_62_inst 
    SplitOperatorGroup6: Block -- 
      signal data_in: std_logic_vector(10 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= nu_54;
      binary_62_wire <= data_out(0 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApBitsel",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 11,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "0000",
          use_constant  => true,
          zero_delay => false, 
          flow_through => true--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xbinary_64_inputsXbinary_62Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 6
    -- shared split operator group (7) : binary_64_inst 
    SplitOperatorGroup7: Block -- 
      signal data_in: std_logic_vector(10 downto 0);
      signal data_out: std_logic_vector(10 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= binary_62_wire & v_in_20;
      binary_64_wire <= data_out(10 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApConcat",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 1,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 10, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 11,
          constant_operand => "0",
          use_constant  => false,
          zero_delay => false, 
          flow_through => true--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xbinary_66_inputsXbinary_64Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 7
    -- shared split operator group (8) : binary_66_inst 
    SplitOperatorGroup8: Block -- 
      signal data_in: std_logic_vector(10 downto 0);
      signal data_out: std_logic_vector(10 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= binary_64_wire;
      nv_67 <= data_out(10 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApIntLSHR",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 11,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 11,
          constant_operand => "0001",
          use_constant  => true,
          zero_delay => false, 
          flow_through => false--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xassign_stmt_67Xbinary_66Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 8
    -- shared split operator group (9) : binary_72_inst 
    SplitOperatorGroup9: Block -- 
      signal data_in: std_logic_vector(10 downto 0);
      signal data_out: std_logic_vector(10 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= nu_54;
      binary_72_wire <= data_out(10 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApIntLSHR",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 11,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 11,
          constant_operand => "0001",
          use_constant  => true,
          zero_delay => false, 
          flow_through => true--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_74Xtype_cast_73Xbinary_72Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 9
    -- shared split operator group (10) : binary_82_inst 
    SplitOperatorGroup10: Block -- 
      signal data_in: std_logic_vector(3 downto 0);
      signal data_out: std_logic_vector(3 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= count_in_24;
      count_83 <= data_out(3 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApIntAdd",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 4,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 4,
          constant_operand => "0001",
          use_constant  => true,
          zero_delay => false, 
          flow_through => false--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xparallel_block_stmt_68Xassign_stmt_83Xbinary_82Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 10
    -- shared split operator group (11) : binary_88_inst 
    SplitOperatorGroup11: Block -- 
      signal data_in: std_logic_vector(3 downto 0);
      signal data_out: std_logic_vector(0 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= count_83;
      binary_88_wire <= data_out(0 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApIntEq",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 4,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 0, 
          num_inputs    => 1,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 1,
          constant_operand => "1010",
          use_constant  => true,
          zero_delay => false, 
          flow_through => false--
        ) 
        port map ( -- 
          reqL => branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xrr_cp_to_dp,
          ackL => branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xra_dp_to_cp,
          reqR => branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xcr_cp_to_dp,
          ackR => branch_block_stmt_14Xif_stmt_85_eval_testXbinary_88Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 11
    -- shared split operator group (12) : binary_97_inst 
    SplitOperatorGroup12: Block -- 
      signal data_in: std_logic_vector(19 downto 0);
      signal data_out: std_logic_vector(19 downto 0);
      signal reqR, ackR, reqL, ackL : BooleanArray( 0 downto 0);
      -- 
    begin -- 
      data_in <= u_74 & v_78;
      aXb <= data_out(19 downto 0);
      UnsharedOperator: UnsharedOperatorBase -- 
        generic map ( -- 
          operator_id => "ApConcat",
          input1_is_int => true, 
          input1_characteristic_width => 0, 
          input1_mantissa_width    => 0, 
          iwidth_1  => 10,
          input2_is_int => true, 
          input2_characteristic_width => 0, 
          input2_mantissa_width => 0, 
          iwidth_2      => 10, 
          num_inputs    => 2,
          output_is_int => true,
          output_characteristic_width  => 0, 
          output_mantissa_width => 0, 
          owidth => 20,
          constant_operand => "0",
          use_constant  => false,
          zero_delay => false, 
          flow_through => false--
        ) 
        port map ( -- 
          reqL => assign_stmt_98Xbinary_97Xrr_cp_to_dp,
          ackL => assign_stmt_98Xbinary_97Xra_dp_to_cp,
          reqR => assign_stmt_98Xbinary_97Xcr_cp_to_dp,
          ackR => assign_stmt_98Xbinary_97Xca_dp_to_cp,
          dataL => data_in, 
          dataR => data_out,
          clk => clk,
          reset => reset); -- 
      -- 
    end Block; -- split operator group 12
    -- 
  end Block; -- data_path
  -- 
end Default;
library ieee;
use ieee.std_logic_1164.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
library work;
use work.vc_system_package.all;
entity test_system is  -- system 
  port (-- 
    sum_mod_a : in  std_logic_vector(9 downto 0);
    sum_mod_b : in  std_logic_vector(9 downto 0);
    sum_mod_aXb : out  std_logic_vector(19 downto 0);
    sum_mod_tag_in: in std_logic_vector(0 downto 0);
    sum_mod_tag_out: out std_logic_vector(0 downto 0);
    sum_mod_start : in std_logic;
    sum_mod_fin   : out std_logic;
    clk : in std_logic;
    reset : in std_logic); -- 
  -- 
end entity; 
architecture Default of test_system is -- system-architecture 
  -- declarations related to module sum_mod
  component sum_mod is -- 
    port ( -- 
      a : in  std_logic_vector(9 downto 0);
      b : in  std_logic_vector(9 downto 0);
      aXb : out  std_logic_vector(19 downto 0);
      clk : in std_logic;
      reset : in std_logic;
      start : in std_logic;
      fin   : out std_logic;
      tag_in: in std_logic_vector(0 downto 0);
      tag_out: out std_logic_vector(0 downto 0)-- 
    );
    -- 
  end component;
  -- 
begin -- 
  -- module sum_mod
  sum_mod_instance:sum_mod-- 
    port map(-- 
      a => sum_mod_a,
      b => sum_mod_b,
      aXb => sum_mod_aXb,
      start => sum_mod_start,
      fin => sum_mod_fin,
      clk => clk,
      reset => reset,
      tag_in => sum_mod_tag_in,
      tag_out => sum_mod_tag_out-- 
    ); -- 
  -- 
end Default;
library ieee;
use ieee.std_logic_1164.all;
library ahir;
use ahir.memory_subsystem_package.all;
use ahir.types.all;
use ahir.subprograms.all;
use ahir.components.all;
use ahir.basecomponents.all;
use ahir.operatorpackage.all;
library work;
use work.vc_system_package.all;
entity test_system_Test_Bench is -- 
  -- 
end entity;
architecture Default of test_system_Test_Bench is -- 
  component test_system is -- 
    port (-- 
      sum_mod_a : in  std_logic_vector(9 downto 0);
      sum_mod_b : in  std_logic_vector(9 downto 0);
      sum_mod_aXb : out  std_logic_vector(19 downto 0);
      sum_mod_tag_in: in std_logic_vector(0 downto 0);
      sum_mod_tag_out: out std_logic_vector(0 downto 0);
      sum_mod_start : in std_logic;
      sum_mod_fin   : out std_logic;
      clk : in std_logic;
      reset : in std_logic); -- 
    -- 
  end component;
  signal clk: std_logic := '0';
  signal reset: std_logic := '1';
  signal sum_mod_a :  std_logic_vector(9 downto 0);
  signal sum_mod_b :  std_logic_vector(9 downto 0);
  signal sum_mod_aXb :   std_logic_vector(19 downto 0);
  signal sum_mod_tag_in: std_logic_vector(0 downto 0);
  signal sum_mod_tag_out: std_logic_vector(0 downto 0);
  signal sum_mod_start : std_logic := '0';
  signal sum_mod_fin   : std_logic := '0';
  -- 
begin --
  clk <= not clk after 5 ns;
  sum_mod_a <= (0 => '1', 1 => '1', 2 => '1',  others => '0');
  sum_mod_b <= (1 => '1', 0 => '1', others => '0');
  process
  begin
	wait until clk = '1';
	reset <= '0'; 
	sum_mod_start <= '1';
	wait until clk = '1';
	sum_mod_start <= '0';
	while sum_mod_fin /= '1' loop
		wait until clk = '1';
	end loop;
  	wait;
  end process;

  test_system_instance: test_system -- 
    port map ( -- 
      sum_mod_a => sum_mod_a,
      sum_mod_b => sum_mod_b,
      sum_mod_aXb => sum_mod_aXb,
      sum_mod_tag_in => sum_mod_tag_in,
      sum_mod_tag_out => sum_mod_tag_out,
      sum_mod_start => sum_mod_start,
      sum_mod_fin  => sum_mod_fin ,
      clk => clk,
      reset => reset); -- 
  -- 
end Default;
