// a simple example.. of a shift and add multiplier..
$module [sum_mod]
    $in (a:$uint<10> b:$uint<10>)
    $out (aXb:$uint<20>) 
$is
{
        $constant z9 : $uint<9> := 0
	$constant z1 : $uint<1> := 0
        $constant count: $uint<11> := _b10000000000 
	$branchblock[mainloop]
	{
		$merge $entry loopback
			$phi u_in := 0 $on $entry %nxt%ub:u $on loopback
			$phi v_in := 0 $on $entry %nxt%vb:v $on loopback
			$phi a_0  := a $on $entry %nxt:a_1 $on loopback
			$phi ctr  := count $on $entry %nxt:ctr $on loopback
		$endmerge
		
		$parallelblock[nxt]
		{
		   $seriesblock[vb] {
			nv := (( (($mux (a_0 [] 0) (((u_in + b) && z1) >> 1) ((u_in && z1) >> 1)) [] 0) && v_in) >> 1)
			v := ($cast ($uint<10>) nv)
		   }
		   $seriesblock[ub] {
			nu := ($mux (a_0 [] 0) (((u_in + b) && z1) >> 1) ((u_in && z1) >> 1))
			u := ($cast ($uint<10>) (nu >> 1))
		   }
		   ctr := (../:ctr >> 1)
		   a_1 := (a_0 >> 1)
		}


		$if (%nxt:ctr [] 0) $then $null $else $place [loopback] $endif
	}
	aXb := (%mainloop%nxt%ub:u && %mainloop%nxt%vb:v)	
}
