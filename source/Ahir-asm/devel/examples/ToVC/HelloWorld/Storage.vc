// pipe-declarations for block %sum_mod
//  file Storage.aa, line 2
$module [sum_mod] 
{
  $in a:$int<10>
  $out b:$int<10>
  // memory-space-declarations for block %sum_mod
  //  file Storage.aa, line 2
  // 	$storage  U : $uint<10> 
  // in scope  %sum_mod
  $memoryspace [ms_storage_U_4] 
  {
    $capacity 1
    $datawidth 10
    $addrwidth 1
    $object [storage_U_4] : $int<10>
  }
  $CP 
  {
    // begin control-path 
    // control-path for: 	U := (a + C[0 ]) // type of target is $uint<10>
    //  file Storage.aa, line 8
    ;;[assign_stmt_18] //  file Storage.aa, line 8
    {
      // control-path for expression: (a + C[0 ])
      ;;[binary_17] 
      {
        // binary expression: (a + C[0 ])
        ||[binary_17_inputs] 
        {
          // CP for expression: a
        }
        $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
      }
      // CP for expression: U
      ;;[simple_obj_ref_13] 
      {
        // store U
        $T [srr] $T [sra] $T[scr] $T[sca]
      }
    }
    // end assignment statement assign_stmt_18
    // control-path for: 	b := (U + C[3 ]) // type of target is $uint<10>
    //  file Storage.aa, line 9
    ;;[assign_stmt_24] //  file Storage.aa, line 9
    {
      // control-path for expression: (U + C[3 ])
      ;;[binary_23] 
      {
        // binary expression: (U + C[3 ])
        ||[binary_23_inputs] 
        {
          // CP for expression: U
          ;;[simple_obj_ref_20] 
          {
            // load: U
            $T [rr] $T [ra] $T[cr] $T[ca]
          }
        }
        $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
      }
      // CP for expression: b
    }
    // end assignment statement assign_stmt_24
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %sum_mod
    //  file Storage.aa, line 2
    $constant $W[constant_C_7] : $array<4> $of $int<10> := (_b0000000000,_b0000000000,_b0000000000,_b0000000000)
    // constant-declarations for expression: C[0 ]
    $constant $W[array_obj_ref_16_wire_constant] : $int<10> := _b0000000000
    // constant-declarations for expression: C[3 ]
    $constant $W[array_obj_ref_22_wire_constant] : $int<10> := _b0000000000
    // wire-declarations for: 	U := (a + C[0 ]) // type of target is $uint<10>
    //  file Storage.aa, line 8
    $constant $W[simple_obj_ref_13_wire_addr] : $pointer<sum_mod/ms_storage_U_4> := _b0
    // wire-declarations for: 	b := (U + C[3 ]) // type of target is $uint<10>
    //  file Storage.aa, line 9
    $W[simple_obj_ref_20_wire] : $int<10>
    $constant $W[simple_obj_ref_20_wire_addr] : $pointer<sum_mod/ms_storage_U_4> := _b0
    // data-path instances for: 	U := (a + C[0 ]) // type of target is $uint<10>
    //  file Storage.aa, line 8
    $store [simple_obj_ref_13_inst] $to sum_mod/ms_storage_U_4 (simple_obj_ref_13_wire_addr binary_17_wire)
    // data-path-instances for expression: (a + C[0 ])
    +[binary_17_inst] (a array_obj_ref_16_wire_constant) (binary_17_wire)
    // data-path instances for: 	b := (U + C[3 ]) // type of target is $uint<10>
    //  file Storage.aa, line 9
    $load [simple_obj_ref_20_inst] $from sum_mod/ms_storage_U_4 (simple_obj_ref_20_wire_addr) (simple_obj_ref_20_wire)
    // data-path-instances for expression: (U + C[3 ])
    +[binary_23_inst] (simple_obj_ref_20_wire array_obj_ref_22_wire_constant) (b)
  }
  // end data-path
  // CP-DP links for: 	U := (a + C[0 ]) // type of target is $uint<10>
  //  file Storage.aa, line 8
  // CP-DP links for expression: U
  simple_obj_ref_13_inst <=> (assign_stmt_18/simple_obj_ref_13/srr assign_stmt_18/simple_obj_ref_13/scr) (assign_stmt_18/simple_obj_ref_13/sra assign_stmt_18/simple_obj_ref_13/sca)
  // CP-DP links for expression: (a + C[0 ])
  binary_17_inst <=> (assign_stmt_18/binary_17/rr assign_stmt_18/binary_17/cr) (assign_stmt_18/binary_17/ra assign_stmt_18/binary_17/ca)
  // CP-DP links for: 	b := (U + C[3 ]) // type of target is $uint<10>
  //  file Storage.aa, line 9
  // CP-DP links for expression: U
  simple_obj_ref_20_inst <=> (assign_stmt_24/binary_23/binary_23_inputs/simple_obj_ref_20/rr assign_stmt_24/binary_23/binary_23_inputs/simple_obj_ref_20/cr) (assign_stmt_24/binary_23/binary_23_inputs/simple_obj_ref_20/ra assign_stmt_24/binary_23/binary_23_inputs/simple_obj_ref_20/ca)
  // CP-DP links for expression: (U + C[3 ])
  binary_23_inst <=> (assign_stmt_24/binary_23/rr assign_stmt_24/binary_23/cr) (assign_stmt_24/binary_23/ra assign_stmt_24/binary_23/ca)
}
