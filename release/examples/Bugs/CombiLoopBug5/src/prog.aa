$pipe out_data: $uint<16> $depth 4
$pipeline $depth 2  $fullrate  $operator $module [incr] 
	$in (a: $uint<16>) $out (b: $uint<16>) $is
{
	b := (a + 1) 
}

$module [ifetch_main_daemon] $in () $out () $is
{
	$branchblock[Main] {

		$dopipeline $depth 16 $buffering 2  $fullrate

		$merge $entry $loopback 
			$phi pc  :=  ($bitcast ($uint<16>) 0)  $on $entry npc $on $loopback
		$endmerge
		$volatile npc := (pc + 1)
		
		$call incr (pc) (next_pc)
		out_data  := next_pc

		$while 1
	}
}


