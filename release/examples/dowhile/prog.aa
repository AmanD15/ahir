$module [asum] $in() $out (c: $uint<32> ) $is
{

	$branchblock[run] {

		$do
			$merge $entry $loopback
			$phi I := ($bitcast($uint<32>) 0) $on $entry NI $on $loopback
			$phi R := 0 $on $entry R4 $on $loopback
			$endmerge
			R1 := (R + 1)
			R2 := (R1 + 1)
			R3 := (R2 + 1)
			R4 := (R3 + 1)
			NI := (I+1)
		$while (NI < 10)

	} (R4 => result)

	c := result
}

$module [ssum] $in() $out (c: $uint<32> ) $is
{
	$storage a: $array [10] $of $uint<32>

	$branchblock[init] {
		$do
			$merge $entry $loopback
			$phi I := ($bitcast($uint<32>) 0) $on $entry NI $on $loopback
			$endmerge
			a[I] := I
			NI := (I+1)
		$while (NI < 10)
	}

	$branchblock[run] {

		$do
			$merge $entry $loopback
			$phi I := ($bitcast($uint<32>) 0) $on $entry NI $on $loopback
			$phi result := 0 $on $entry nresult $on $loopback
			$endmerge
			nresult := (result + a[I])
			NI := (I+1)
		$while (NI < 10)
		
	} (result => result)

 	c := result	
}

