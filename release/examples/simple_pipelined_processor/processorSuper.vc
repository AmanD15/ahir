// Virtual circuit produced from Aa description by Aa2VC 
// $pipe  halt_pipe : $uint<16>  $depth 1 
// can point into 
// in scope  top-level
$pipe [halt_pipe] 16 $depth 1
// $pipe  imm_pipe : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [imm_pipe] 16 $depth 1
// $pipe  ir_pipe : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [ir_pipe] 16 $depth 1
// $pipe  next_pc : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [next_pc] 16 $depth 1
// $pipe  offs_pipe : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [offs_pipe] 16 $depth 1
// $pipe  op_pipe : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [op_pipe] 16 $depth 1
// $pipe  out_port : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [out_port] 16 $depth 1
// $pipe  pc_to_decode : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [pc_to_decode] 16 $depth 1
// $pipe  pc_to_execute : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [pc_to_execute] 16 $depth 1
// $pipe  r1_pipe : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [r1_pipe] 16 $depth 1
// $pipe  r2_pipe : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [r2_pipe] 16 $depth 1
// $pipe  r3_pipe : $uint<16>  $depth 1 
// can point into  foreign( $void )
// in scope  top-level
$pipe [r3_pipe] 16 $depth 1
// load store constants for object mem
$constant $W[mem_base_address] : $int<7> := _b0000000
// load store constants for object reg
$constant $W[reg_base_address] : $int<5> := _b00000
// load store constants for object xx_xstr
$constant $W[xx_xstr_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr1
$constant $W[xx_xstr1_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr10
$constant $W[xx_xstr10_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr11
$constant $W[xx_xstr11_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr2
$constant $W[xx_xstr2_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr3
$constant $W[xx_xstr3_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr4
$constant $W[xx_xstr4_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr5
$constant $W[xx_xstr5_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr6
$constant $W[xx_xstr6_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr7
$constant $W[xx_xstr7_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr8
$constant $W[xx_xstr8_base_address] : $int<7> := _b0000000
// load store constants for object xx_xstr9
$constant $W[xx_xstr9_base_address] : $int<7> := _b0000000
$memoryspace [memory_space_0] 
{
  $capacity 64
  $datawidth 16
  $addrwidth 7
  $maxaccesswidth 16
  // $storage  mem : $array[64] $of $uint<16> // memory space index = 0  base address = 0  word size = 16
  // can point into  foreign( $void )
  // in scope  top-level
  $object [mem] : $array[64] $of $int<16>
}
$memoryspace [memory_space_1] 
{
  $capacity 16
  $datawidth 16
  $addrwidth 5
  $maxaccesswidth 16
  // $storage  reg : $array[16] $of $uint<16> // memory space index = 1  base address = 0  word size = 16
  // can point into  foreign( $void )
  // in scope  top-level
  $object [reg] : $array[16] $of $int<16>
}
$module [decode] 
{
  // pipe-declarations for block %decode
  //  file processorSuper.aa, line 67
  // pipe-declarations for block %decode%body
  //  file processorSuper.aa, line 72
  // pipe-declarations for block %decode%body%
  //  file processorSuper.aa, line 75
  // pipe-declarations for block %decode%body%wp
  //  file processorSuper.aa, line 78
  // pipe-declarations for block %decode%body%wp%ib
  //  file processorSuper.aa, line 84
  // pipe-declarations for block %decode%body%wp%ib%imp
  //  file processorSuper.aa, line 86
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_100] // Branch Block  file processorSuper.aa, line 72
    {
      $P [branch_block_stmt_100__entry__]
      branch_block_stmt_100__entry__ <-| ($entry)
      $P [branch_block_stmt_100__exit__]
      branch_block_stmt_100__exit__ |-> ($exit)
      $P [merge_stmt_101__entry__] 
      $P [merge_stmt_101__exit__] 
      $P [assign_stmt_104__entry__] 
      $P [assign_stmt_104__exit__] 
      $P [parallel_block_stmt_105__entry__] 
      $P [parallel_block_stmt_105__exit__] 
      $P [bb_3_bb_1]
      ::[assign_stmt_104] 
      {
        // 		instr := ir_pipe
        //  file processorSuper.aa, line 77
        $T[assign_stmt_104_active_] 
        $T[assign_stmt_104_completed_] 
        // ir_pipe
        $T[simple_obj_ref_103_trigger_] 
        $T[simple_obj_ref_103_completed_] 
        ;;[simple_obj_ref_103_complete] 
        {
          // pipe read
          $T [req] $T [ack] 
        }
        simple_obj_ref_103_completed_ <-& (simple_obj_ref_103_complete)
        simple_obj_ref_103_trigger_ &-> (simple_obj_ref_103_complete)
        assign_stmt_104_active_ <-& (simple_obj_ref_103_completed_)
        // instr
        // implicit reference
        assign_stmt_104_completed_ <-& (assign_stmt_104_active_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe ir_pipe
      }
      assign_stmt_104__entry__ |-> (assign_stmt_104)
      assign_stmt_104__exit__ <-| (assign_stmt_104)
      ||[parallel_block_stmt_105] 
      {
        ::[assign_stmt_108] 
        {
          // 			pc_to_execute := pc_to_decode
          //  file processorSuper.aa, line 79
          $T[assign_stmt_108_active_] 
          $T[assign_stmt_108_completed_] 
          // pc_to_decode
          $T[simple_obj_ref_107_trigger_] 
          $T[simple_obj_ref_107_completed_] 
          ;;[simple_obj_ref_107_complete] 
          {
            // pipe read
            $T [req] $T [ack] 
          }
          simple_obj_ref_107_completed_ <-& (simple_obj_ref_107_complete)
          simple_obj_ref_107_trigger_ &-> (simple_obj_ref_107_complete)
          assign_stmt_108_active_ <-& (simple_obj_ref_107_completed_)
          // pc_to_execute
          $T[simple_obj_ref_106_trigger_] 
          $T[simple_obj_ref_106_completed_] 
          ;;[simple_obj_ref_106_complete] 
          {
            // pipe write pc_to_execute
            $T [pipe_wreq] $T [pipe_wack] 
          }
          simple_obj_ref_106_completed_ <-& (simple_obj_ref_106_complete)
          simple_obj_ref_106_trigger_ &-> (simple_obj_ref_106_complete)
          simple_obj_ref_106_trigger_ <-& (assign_stmt_108_active_)
          assign_stmt_108_completed_ <-& (simple_obj_ref_106_completed_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe pc_to_decode
          // pipe read/write dependencies for pipe pc_to_execute
        }
        ::[assign_stmt_113] 
        {
          // 			op_pipe := (instr >> 12 )
          //  file processorSuper.aa, line 80
          $T[assign_stmt_113_active_] 
          $T[assign_stmt_113_completed_] 
          // (instr >> 12 )
          $T[binary_112_active_] 
          $T[binary_112_trigger_] 
          $T[binary_112_completed_] 
          binary_112_active_ <-& (binary_112_trigger_)
          // instr
          // implicit reference
          $T[simple_obj_ref_110_completed_] 
          binary_112_active_ <-& (simple_obj_ref_110_completed_)
          ;;[binary_112_complete] 
          {
            // binary expression 
            $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
          }
          binary_112_active_ &-> (binary_112_complete)
          binary_112_completed_ <-& (binary_112_complete)
          assign_stmt_113_active_ <-& (binary_112_completed_)
          // op_pipe
          $T[simple_obj_ref_109_trigger_] 
          $T[simple_obj_ref_109_completed_] 
          ;;[simple_obj_ref_109_complete] 
          {
            // pipe write op_pipe
            $T [pipe_wreq] $T [pipe_wack] 
          }
          simple_obj_ref_109_completed_ <-& (simple_obj_ref_109_complete)
          simple_obj_ref_109_trigger_ &-> (simple_obj_ref_109_complete)
          simple_obj_ref_109_trigger_ <-& (assign_stmt_113_active_)
          assign_stmt_113_completed_ <-& (simple_obj_ref_109_completed_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe op_pipe
        }
        ::[assign_stmt_120] 
        {
          // 			r1_pipe := ((instr >> 8 ) & 15 )
          //  file processorSuper.aa, line 81
          $T[assign_stmt_120_active_] 
          $T[assign_stmt_120_completed_] 
          // ((instr >> 8 ) & 15 )
          $T[binary_119_active_] 
          $T[binary_119_trigger_] 
          $T[binary_119_completed_] 
          binary_119_active_ <-& (binary_119_trigger_)
          // (instr >> 8 )
          $T[binary_117_active_] 
          $T[binary_117_trigger_] 
          $T[binary_117_completed_] 
          binary_117_active_ <-& (binary_117_trigger_)
          // instr
          // implicit reference
          $T[simple_obj_ref_115_completed_] 
          binary_117_active_ <-& (simple_obj_ref_115_completed_)
          ;;[binary_117_complete] 
          {
            // binary expression 
            $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
          }
          binary_117_active_ &-> (binary_117_complete)
          binary_117_completed_ <-& (binary_117_complete)
          binary_119_active_ <-& (binary_117_completed_)
          ;;[binary_119_complete] 
          {
            // binary expression 
            $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
          }
          binary_119_active_ &-> (binary_119_complete)
          binary_119_completed_ <-& (binary_119_complete)
          assign_stmt_120_active_ <-& (binary_119_completed_)
          // r1_pipe
          $T[simple_obj_ref_114_trigger_] 
          $T[simple_obj_ref_114_completed_] 
          ;;[simple_obj_ref_114_complete] 
          {
            // pipe write r1_pipe
            $T [pipe_wreq] $T [pipe_wack] 
          }
          simple_obj_ref_114_completed_ <-& (simple_obj_ref_114_complete)
          simple_obj_ref_114_trigger_ &-> (simple_obj_ref_114_complete)
          simple_obj_ref_114_trigger_ <-& (assign_stmt_120_active_)
          assign_stmt_120_completed_ <-& (simple_obj_ref_114_completed_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe r1_pipe
        }
        ::[assign_stmt_127] 
        {
          // 			r2_pipe := ((instr >> 4 ) & 15 )
          //  file processorSuper.aa, line 82
          $T[assign_stmt_127_active_] 
          $T[assign_stmt_127_completed_] 
          // ((instr >> 4 ) & 15 )
          $T[binary_126_active_] 
          $T[binary_126_trigger_] 
          $T[binary_126_completed_] 
          binary_126_active_ <-& (binary_126_trigger_)
          // (instr >> 4 )
          $T[binary_124_active_] 
          $T[binary_124_trigger_] 
          $T[binary_124_completed_] 
          binary_124_active_ <-& (binary_124_trigger_)
          // instr
          // implicit reference
          $T[simple_obj_ref_122_completed_] 
          binary_124_active_ <-& (simple_obj_ref_122_completed_)
          ;;[binary_124_complete] 
          {
            // binary expression 
            $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
          }
          binary_124_active_ &-> (binary_124_complete)
          binary_124_completed_ <-& (binary_124_complete)
          binary_126_active_ <-& (binary_124_completed_)
          ;;[binary_126_complete] 
          {
            // binary expression 
            $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
          }
          binary_126_active_ &-> (binary_126_complete)
          binary_126_completed_ <-& (binary_126_complete)
          assign_stmt_127_active_ <-& (binary_126_completed_)
          // r2_pipe
          $T[simple_obj_ref_121_trigger_] 
          $T[simple_obj_ref_121_completed_] 
          ;;[simple_obj_ref_121_complete] 
          {
            // pipe write r2_pipe
            $T [pipe_wreq] $T [pipe_wack] 
          }
          simple_obj_ref_121_completed_ <-& (simple_obj_ref_121_complete)
          simple_obj_ref_121_trigger_ &-> (simple_obj_ref_121_complete)
          simple_obj_ref_121_trigger_ <-& (assign_stmt_127_active_)
          assign_stmt_127_completed_ <-& (simple_obj_ref_121_completed_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe r2_pipe
        }
        ::[assign_stmt_132] 
        {
          // 			r3_pipe := (instr & 15 )
          //  file processorSuper.aa, line 83
          $T[assign_stmt_132_active_] 
          $T[assign_stmt_132_completed_] 
          // (instr & 15 )
          $T[binary_131_active_] 
          $T[binary_131_trigger_] 
          $T[binary_131_completed_] 
          binary_131_active_ <-& (binary_131_trigger_)
          // instr
          // implicit reference
          $T[simple_obj_ref_129_completed_] 
          binary_131_active_ <-& (simple_obj_ref_129_completed_)
          ;;[binary_131_complete] 
          {
            // binary expression 
            $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
          }
          binary_131_active_ &-> (binary_131_complete)
          binary_131_completed_ <-& (binary_131_complete)
          assign_stmt_132_active_ <-& (binary_131_completed_)
          // r3_pipe
          $T[simple_obj_ref_128_trigger_] 
          $T[simple_obj_ref_128_completed_] 
          ;;[simple_obj_ref_128_complete] 
          {
            // pipe write r3_pipe
            $T [pipe_wreq] $T [pipe_wack] 
          }
          simple_obj_ref_128_completed_ <-& (simple_obj_ref_128_complete)
          simple_obj_ref_128_trigger_ &-> (simple_obj_ref_128_complete)
          simple_obj_ref_128_trigger_ <-& (assign_stmt_132_active_)
          assign_stmt_132_completed_ <-& (simple_obj_ref_128_completed_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe r3_pipe
        }
        ;;[series_block_stmt_133] 
        {
          ::[assign_stmt_138] 
          {
            // 				imm_v := (instr & 255 )
            //  file processorSuper.aa, line 85
            $T[assign_stmt_138_active_] 
            $T[assign_stmt_138_completed_] 
            // (instr & 255 )
            $T[binary_137_active_] 
            $T[binary_137_trigger_] 
            $T[binary_137_completed_] 
            binary_137_active_ <-& (binary_137_trigger_)
            // instr
            // implicit reference
            $T[simple_obj_ref_135_completed_] 
            binary_137_active_ <-& (simple_obj_ref_135_completed_)
            ;;[binary_137_complete] 
            {
              // binary expression 
              $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
            }
            binary_137_active_ &-> (binary_137_complete)
            binary_137_completed_ <-& (binary_137_complete)
            assign_stmt_138_active_ <-& (binary_137_completed_)
            // imm_v
            // implicit reference
            assign_stmt_138_completed_ <-& (assign_stmt_138_active_)
            // load-store dependencies..
          }
          ||[parallel_block_stmt_139] 
          {
            ::[assign_stmt_142] 
            {
              // 					imm_pipe := imm_v
              //  file processorSuper.aa, line 87
              $T[assign_stmt_142_active_] 
              $T[assign_stmt_142_completed_] 
              // imm_v
              // implicit reference
              $T[simple_obj_ref_141_completed_] 
              assign_stmt_142_active_ <-& (simple_obj_ref_141_completed_)
              // imm_pipe
              $T[simple_obj_ref_140_trigger_] 
              $T[simple_obj_ref_140_completed_] 
              ;;[simple_obj_ref_140_complete] 
              {
                // pipe write imm_pipe
                $T [pipe_wreq] $T [pipe_wack] 
              }
              simple_obj_ref_140_completed_ <-& (simple_obj_ref_140_complete)
              simple_obj_ref_140_trigger_ &-> (simple_obj_ref_140_complete)
              simple_obj_ref_140_trigger_ <-& (assign_stmt_142_active_)
              assign_stmt_142_completed_ <-& (simple_obj_ref_140_completed_)
              // load-store dependencies..
              // pipe read/write dependencies for pipe imm_pipe
            }
            ::[assign_stmt_152] 
            {
              // 					offs_pipe := ( $mux (imm_v > 127 ) (128  - imm_v)  imm_v ) 
              //  file processorSuper.aa, line 88
              $T[assign_stmt_152_active_] 
              $T[assign_stmt_152_completed_] 
              // ( $mux (imm_v > 127 ) (128  - imm_v)  imm_v ) 
              $T[ternary_151_trigger_] 
              $T[ternary_151_active_] 
              $T[ternary_151_completed_] 
              ternary_151_active_ <-& (ternary_151_trigger_)
              // (imm_v > 127 )
              $T[binary_146_active_] 
              $T[binary_146_trigger_] 
              $T[binary_146_completed_] 
              binary_146_active_ <-& (binary_146_trigger_)
              // imm_v
              // implicit reference
              $T[simple_obj_ref_144_completed_] 
              binary_146_active_ <-& (simple_obj_ref_144_completed_)
              ;;[binary_146_complete] 
              {
                // binary expression 
                $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
              }
              binary_146_active_ &-> (binary_146_complete)
              binary_146_completed_ <-& (binary_146_complete)
              // (128  - imm_v)
              $T[binary_149_active_] 
              $T[binary_149_trigger_] 
              $T[binary_149_completed_] 
              binary_149_active_ <-& (binary_149_trigger_)
              // imm_v
              // implicit reference
              $T[simple_obj_ref_148_completed_] 
              binary_149_active_ <-& (simple_obj_ref_148_completed_)
              ;;[binary_149_complete] 
              {
                // binary expression 
                $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
              }
              binary_149_active_ &-> (binary_149_complete)
              binary_149_completed_ <-& (binary_149_complete)
              // imm_v
              // implicit reference
              $T[simple_obj_ref_150_completed_] 
              ternary_151_active_ <-& (binary_146_completed_)
              ternary_151_active_ <-& (binary_149_completed_)
              ternary_151_active_ <-& (simple_obj_ref_150_completed_)
              ;;[ternary_151_complete] 
              {
                // ternary expression: 
                $T [req] $T [ack] // select req/ack
              }
              ternary_151_active_ &-> (ternary_151_complete)
              ternary_151_completed_ <-& (ternary_151_complete)
              assign_stmt_152_active_ <-& (ternary_151_completed_)
              // offs_pipe
              $T[simple_obj_ref_143_trigger_] 
              $T[simple_obj_ref_143_completed_] 
              ;;[simple_obj_ref_143_complete] 
              {
                // pipe write offs_pipe
                $T [pipe_wreq] $T [pipe_wack] 
              }
              simple_obj_ref_143_completed_ <-& (simple_obj_ref_143_complete)
              simple_obj_ref_143_trigger_ &-> (simple_obj_ref_143_complete)
              simple_obj_ref_143_trigger_ <-& (assign_stmt_152_active_)
              assign_stmt_152_completed_ <-& (simple_obj_ref_143_completed_)
              // load-store dependencies..
              // pipe read/write dependencies for pipe offs_pipe
            }
          }
        }
      }
      parallel_block_stmt_105__entry__ |-> (parallel_block_stmt_105)
      parallel_block_stmt_105__exit__ <-| (parallel_block_stmt_105)
      // control-path for merge  
      //  file processorSuper.aa, line 75
      ;;[merge_stmt_101_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_101__entry__ |-> (merge_stmt_101_dead_link)
      merge_stmt_101__exit__ <-| (merge_stmt_101_dead_link)
      //---------------------   merge statement  file processorSuper.aa, line 75  --------------------------
      ||[merge_stmt_101__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_101__entry__ |-> (merge_stmt_101__entry___PhiReq)
      ||[bb_3_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_3_bb_1 |-> (bb_3_bb_1_PhiReq)
      $P [merge_stmt_101_PhiReqMerge] 
      merge_stmt_101_PhiReqMerge <-| ( merge_stmt_101__entry___PhiReq  bb_3_bb_1_PhiReq )
      ||[merge_stmt_101_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_101_PhiReqMerge |-> (merge_stmt_101_PhiAck)
      merge_stmt_101__exit__  <-| (merge_stmt_101_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 75  --------------------------
      merge_stmt_101__entry__ <-| (branch_block_stmt_100__entry__)
      assign_stmt_104__entry__ <-| (merge_stmt_101__exit__)
      parallel_block_stmt_105__entry__ <-| (assign_stmt_104__exit__)
      bb_3_bb_1 <-| (parallel_block_stmt_105__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %decode%body%
    //  file processorSuper.aa, line 75
    // constant-object-declarations for block %decode%body%wp%ib%imp
    //  file processorSuper.aa, line 86
    // constant-object-declarations for block %decode%body%wp%ib
    //  file processorSuper.aa, line 84
    // constant-object-declarations for block %decode%body%wp
    //  file processorSuper.aa, line 78
    // constant-object-declarations for block %decode%body
    //  file processorSuper.aa, line 72
    // constant-object-declarations for block %decode
    //  file processorSuper.aa, line 67
    // constant-declarations for block %decode%body
    //  file processorSuper.aa, line 72
    // constant-declarations for block %decode%body%
    //  file processorSuper.aa, line 75
    // constant-declarations for block %decode%body%wp
    //  file processorSuper.aa, line 78
    // 12 
    $constant $W[expr_111_wire_constant] : $int<16> := _b0000000000001100// 12
    // 8 
    $constant $W[expr_116_wire_constant] : $int<16> := _b0000000000001000// 8
    // 15 
    $constant $W[expr_118_wire_constant] : $int<16> := _b0000000000001111// 15
    // 4 
    $constant $W[expr_123_wire_constant] : $int<16> := _b0000000000000100// 4
    // 15 
    $constant $W[expr_125_wire_constant] : $int<16> := _b0000000000001111// 15
    // 15 
    $constant $W[expr_130_wire_constant] : $int<16> := _b0000000000001111// 15
    // constant-declarations for block %decode%body%wp%ib
    //  file processorSuper.aa, line 84
    // 255 
    $constant $W[expr_136_wire_constant] : $int<16> := _b0000000011111111// 255
    // constant-declarations for block %decode%body%wp%ib%imp
    //  file processorSuper.aa, line 86
    // ( $mux (imm_v > 127 ) (128  - imm_v)  imm_v ) 
    // 127 
    $constant $W[expr_145_wire_constant] : $int<16> := _b0000000001111111// 127
    // 128 
    $constant $W[expr_147_wire_constant] : $int<16> := _b0000000010000000// 128
    // block %decode%body
    //  file processorSuper.aa, line 72
    // 		instr := ir_pipe
    //  file processorSuper.aa, line 77
    // instr
    $W[instr_104] : $int<16>
    // block %decode%body%wp
    //  file processorSuper.aa, line 78
    // 			pc_to_execute := pc_to_decode
    //  file processorSuper.aa, line 79
    // pc_to_decode
    $W[simple_obj_ref_107_wire] : $int<16>
    // pc_to_execute
    // 			op_pipe := (instr >> 12 )
    //  file processorSuper.aa, line 80
    // (instr >> 12 )
    $intermediate $W[binary_112_wire] : $int<16>
    // op_pipe
    // 			r1_pipe := ((instr >> 8 ) & 15 )
    //  file processorSuper.aa, line 81
    // (instr >> 8 )
    $intermediate $W[binary_117_wire] : $int<16>
    // ((instr >> 8 ) & 15 )
    $intermediate $W[binary_119_wire] : $int<16>
    // r1_pipe
    // 			r2_pipe := ((instr >> 4 ) & 15 )
    //  file processorSuper.aa, line 82
    // (instr >> 4 )
    $intermediate $W[binary_124_wire] : $int<16>
    // ((instr >> 4 ) & 15 )
    $intermediate $W[binary_126_wire] : $int<16>
    // r2_pipe
    // 			r3_pipe := (instr & 15 )
    //  file processorSuper.aa, line 83
    // (instr & 15 )
    $intermediate $W[binary_131_wire] : $int<16>
    // r3_pipe
    // block %decode%body%wp%ib
    //  file processorSuper.aa, line 84
    // 				imm_v := (instr & 255 )
    //  file processorSuper.aa, line 85
    // imm_v
    $W[imm_v_138] : $int<16>
    // block %decode%body%wp%ib%imp
    //  file processorSuper.aa, line 86
    // 					imm_pipe := imm_v
    //  file processorSuper.aa, line 87
    // imm_pipe
    // 					offs_pipe := ( $mux (imm_v > 127 ) (128  - imm_v)  imm_v ) 
    //  file processorSuper.aa, line 88
    // (imm_v > 127 )
    $intermediate $W[binary_146_wire] : $int<1>
    // (128  - imm_v)
    $intermediate $W[binary_149_wire] : $int<16>
    // ( $mux (imm_v > 127 ) (128  - imm_v)  imm_v ) 
    $intermediate $W[ternary_151_wire] : $int<16>
    // offs_pipe
    // datapath-instances for block %decode%body
    //  file processorSuper.aa, line 72
    // 		instr := ir_pipe
    //  file processorSuper.aa, line 77
    // ir_pipe
    $ioport $in [simple_obj_ref_103_inst] (ir_pipe) (instr_104)
    // datapath-instances for block %decode%body%wp
    //  file processorSuper.aa, line 78
    // 			pc_to_execute := pc_to_decode
    //  file processorSuper.aa, line 79
    // pc_to_decode
    $ioport $in [simple_obj_ref_107_inst] (pc_to_decode) (simple_obj_ref_107_wire)
    // pc_to_execute
    $ioport $out [simple_obj_ref_106_inst]  (simple_obj_ref_107_wire) (pc_to_execute)
    // 			op_pipe := (instr >> 12 )
    //  file processorSuper.aa, line 80
    // (instr >> 12 )
    >>[binary_112_inst] (instr_104 expr_111_wire_constant) (binary_112_wire)
    // op_pipe
    $ioport $out [simple_obj_ref_109_inst]  (binary_112_wire) (op_pipe)
    // 			r1_pipe := ((instr >> 8 ) & 15 )
    //  file processorSuper.aa, line 81
    // (instr >> 8 )
    >>[binary_117_inst] (instr_104 expr_116_wire_constant) (binary_117_wire)
    // ((instr >> 8 ) & 15 )
    &[binary_119_inst] (binary_117_wire expr_118_wire_constant) (binary_119_wire)
    // r1_pipe
    $ioport $out [simple_obj_ref_114_inst]  (binary_119_wire) (r1_pipe)
    // 			r2_pipe := ((instr >> 4 ) & 15 )
    //  file processorSuper.aa, line 82
    // (instr >> 4 )
    >>[binary_124_inst] (instr_104 expr_123_wire_constant) (binary_124_wire)
    // ((instr >> 4 ) & 15 )
    &[binary_126_inst] (binary_124_wire expr_125_wire_constant) (binary_126_wire)
    // r2_pipe
    $ioport $out [simple_obj_ref_121_inst]  (binary_126_wire) (r2_pipe)
    // 			r3_pipe := (instr & 15 )
    //  file processorSuper.aa, line 83
    // (instr & 15 )
    &[binary_131_inst] (instr_104 expr_130_wire_constant) (binary_131_wire)
    // r3_pipe
    $ioport $out [simple_obj_ref_128_inst]  (binary_131_wire) (r3_pipe)
    // datapath-instances for block %decode%body%wp%ib
    //  file processorSuper.aa, line 84
    // 				imm_v := (instr & 255 )
    //  file processorSuper.aa, line 85
    // (instr & 255 )
    &[binary_137_inst] (instr_104 expr_136_wire_constant) (imm_v_138)
    // datapath-instances for block %decode%body%wp%ib%imp
    //  file processorSuper.aa, line 86
    // 					imm_pipe := imm_v
    //  file processorSuper.aa, line 87
    // imm_pipe
    $ioport $out [simple_obj_ref_140_inst]  (imm_v_138) (imm_pipe)
    // 					offs_pipe := ( $mux (imm_v > 127 ) (128  - imm_v)  imm_v ) 
    //  file processorSuper.aa, line 88
    // (imm_v > 127 )
    >[binary_146_inst] (imm_v_138 expr_145_wire_constant) (binary_146_wire)
    // (128  - imm_v)
    -[binary_149_inst] (expr_147_wire_constant imm_v_138) (binary_149_wire)
    // ( $mux (imm_v > 127 ) (128  - imm_v)  imm_v ) 
    ? [ternary_151_inst] (binary_146_wire binary_149_wire imm_v_138) (ternary_151_wire)
    // offs_pipe
    $ioport $out [simple_obj_ref_143_inst]  (ternary_151_wire) (offs_pipe)
  }
  // end data-path
  // CP-DP links for merge  
  //  file processorSuper.aa, line 75
  // 		instr := ir_pipe
  //  file processorSuper.aa, line 77
  // ir_pipe
  simple_obj_ref_103_inst <=> (branch_block_stmt_100/assign_stmt_104/simple_obj_ref_103_complete/req) (branch_block_stmt_100/assign_stmt_104/simple_obj_ref_103_complete/ack)
  // 			pc_to_execute := pc_to_decode
  //  file processorSuper.aa, line 79
  // pc_to_decode
  simple_obj_ref_107_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_108/simple_obj_ref_107_complete/req) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_108/simple_obj_ref_107_complete/ack)
  // pc_to_execute
  simple_obj_ref_106_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_108/simple_obj_ref_106_complete/pipe_wreq) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_108/simple_obj_ref_106_complete/pipe_wack)
  // 			op_pipe := (instr >> 12 )
  //  file processorSuper.aa, line 80
  // (instr >> 12 )
  binary_112_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_113/binary_112_complete/rr branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_113/binary_112_complete/cr) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_113/binary_112_complete/ra branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_113/binary_112_complete/ca)
  // op_pipe
  simple_obj_ref_109_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_113/simple_obj_ref_109_complete/pipe_wreq) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_113/simple_obj_ref_109_complete/pipe_wack)
  // 			r1_pipe := ((instr >> 8 ) & 15 )
  //  file processorSuper.aa, line 81
  // (instr >> 8 )
  binary_117_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/binary_117_complete/rr branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/binary_117_complete/cr) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/binary_117_complete/ra branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/binary_117_complete/ca)
  // ((instr >> 8 ) & 15 )
  binary_119_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/binary_119_complete/rr branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/binary_119_complete/cr) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/binary_119_complete/ra branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/binary_119_complete/ca)
  // r1_pipe
  simple_obj_ref_114_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/simple_obj_ref_114_complete/pipe_wreq) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_120/simple_obj_ref_114_complete/pipe_wack)
  // 			r2_pipe := ((instr >> 4 ) & 15 )
  //  file processorSuper.aa, line 82
  // (instr >> 4 )
  binary_124_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/binary_124_complete/rr branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/binary_124_complete/cr) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/binary_124_complete/ra branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/binary_124_complete/ca)
  // ((instr >> 4 ) & 15 )
  binary_126_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/binary_126_complete/rr branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/binary_126_complete/cr) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/binary_126_complete/ra branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/binary_126_complete/ca)
  // r2_pipe
  simple_obj_ref_121_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/simple_obj_ref_121_complete/pipe_wreq) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_127/simple_obj_ref_121_complete/pipe_wack)
  // 			r3_pipe := (instr & 15 )
  //  file processorSuper.aa, line 83
  // (instr & 15 )
  binary_131_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_132/binary_131_complete/rr branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_132/binary_131_complete/cr) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_132/binary_131_complete/ra branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_132/binary_131_complete/ca)
  // r3_pipe
  simple_obj_ref_128_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_132/simple_obj_ref_128_complete/pipe_wreq) (branch_block_stmt_100/parallel_block_stmt_105/assign_stmt_132/simple_obj_ref_128_complete/pipe_wack)
  // 				imm_v := (instr & 255 )
  //  file processorSuper.aa, line 85
  // (instr & 255 )
  binary_137_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/assign_stmt_138/binary_137_complete/rr branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/assign_stmt_138/binary_137_complete/cr) (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/assign_stmt_138/binary_137_complete/ra branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/assign_stmt_138/binary_137_complete/ca)
  // 					imm_pipe := imm_v
  //  file processorSuper.aa, line 87
  // imm_pipe
  simple_obj_ref_140_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_142/simple_obj_ref_140_complete/pipe_wreq) (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_142/simple_obj_ref_140_complete/pipe_wack)
  // 					offs_pipe := ( $mux (imm_v > 127 ) (128  - imm_v)  imm_v ) 
  //  file processorSuper.aa, line 88
  // (imm_v > 127 )
  binary_146_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/binary_146_complete/rr branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/binary_146_complete/cr) (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/binary_146_complete/ra branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/binary_146_complete/ca)
  // (128  - imm_v)
  binary_149_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/binary_149_complete/rr branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/binary_149_complete/cr) (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/binary_149_complete/ra branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/binary_149_complete/ca)
  // ( $mux (imm_v > 127 ) (128  - imm_v)  imm_v ) 
  ternary_151_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/ternary_151_complete/req) (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/ternary_151_complete/ack)
  // offs_pipe
  simple_obj_ref_143_inst <=> (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/simple_obj_ref_143_complete/pipe_wreq) (branch_block_stmt_100/parallel_block_stmt_105/series_block_stmt_133/parallel_block_stmt_139/assign_stmt_152/simple_obj_ref_143_complete/pipe_wack)
}
$module [execute] 
{
  // pipe-declarations for block %execute
  //  file processorSuper.aa, line 96
  // pipe-declarations for block %execute%body
  //  file processorSuper.aa, line 101
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 103
  // pipe-declarations for block %execute%body%rp
  //  file processorSuper.aa, line 104
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 143
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 148
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 153
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 158
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 163
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 168
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 173
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 178
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 183
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 188
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 193
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 202
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 207
  // pipe-declarations for block %execute%body%
  //  file processorSuper.aa, line 211
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_160] // Branch Block  file processorSuper.aa, line 101
    {
      $P [branch_block_stmt_160__entry__]
      branch_block_stmt_160__entry__ <-| ($entry)
      $P [branch_block_stmt_160__exit__]
      branch_block_stmt_160__exit__ |-> ($exit)
      $P [merge_stmt_161__entry__] 
      $P [merge_stmt_161__exit__] 
      $P [parallel_block_stmt_162__entry__] 
      $P [parallel_block_stmt_162__exit__] 
      $P [switch_stmt_189__entry__] 
      $P [switch_stmt_189__exit__] 
      $P [merge_stmt_229__entry__] 
      $P [merge_stmt_229__exit__] 
      $P [assign_stmt_232__entry__] 
      $P [assign_stmt_232__exit__] 
      $P [bb_1_UnifiedReturnBlock]
      $P [merge_stmt_234__exit__] 
      $P [assign_stmt_242__entry__] 
      $P [assign_stmt_242__exit__] 
      $P [bb_2_UnifiedReturnBlock]
      $P [merge_stmt_244__exit__] 
      $P [assign_stmt_252__entry__] 
      $P [assign_stmt_252__exit__] 
      $P [bb_3_UnifiedReturnBlock]
      $P [merge_stmt_254__exit__] 
      $P [assign_stmt_263__entry__] 
      $P [assign_stmt_263__exit__] 
      $P [bb_4_UnifiedReturnBlock]
      $P [merge_stmt_265__exit__] 
      $P [assign_stmt_274__entry__] 
      $P [assign_stmt_274__exit__] 
      $P [bb_5_UnifiedReturnBlock]
      $P [merge_stmt_276__exit__] 
      $P [assign_stmt_285__entry__] 
      $P [assign_stmt_285__exit__] 
      $P [bb_6_UnifiedReturnBlock]
      $P [merge_stmt_287__exit__] 
      $P [assign_stmt_298__entry__] 
      $P [assign_stmt_298__exit__] 
      $P [bb_7_UnifiedReturnBlock]
      $P [merge_stmt_300__exit__] 
      $P [assign_stmt_305__entry__] 
      $P [assign_stmt_305__exit__] 
      $P [bb_8_UnifiedReturnBlock]
      $P [merge_stmt_307__exit__] 
      $P [assign_stmt_313__entry__] 
      $P [assign_stmt_313__exit__] 
      $P [bb_9_UnifiedReturnBlock]
      $P [merge_stmt_315__exit__] 
      $P [assign_stmt_323__entry__] 
      $P [assign_stmt_323__exit__] 
      $P [bb_10_UnifiedReturnBlock]
      $P [merge_stmt_325__exit__] 
      $P [if_stmt_326__entry__] 
      $P [if_stmt_326__exit__] 
      $P [bb_12_UnifiedReturnBlock]
      $P [merge_stmt_344__exit__] 
      $P [assign_stmt_348__entry__] 
      $P [assign_stmt_348__exit__] 
      $P [bb_13_UnifiedReturnBlock]
      $P [merge_stmt_350__exit__] 
      $P [bb_14_UnifiedReturnBlock]
      $P [merge_stmt_352__exit__] 
      $P [loopback]
      ||[parallel_block_stmt_162] 
      {
        ::[assign_stmt_165] 
        {
          // 			op := op_pipe
          //  file processorSuper.aa, line 105
          $T[assign_stmt_165_active_] 
          $T[assign_stmt_165_completed_] 
          // op_pipe
          $T[simple_obj_ref_164_trigger_] 
          $T[simple_obj_ref_164_completed_] 
          ;;[simple_obj_ref_164_complete] 
          {
            // pipe read
            $T [req] $T [ack] 
          }
          simple_obj_ref_164_completed_ <-& (simple_obj_ref_164_complete)
          simple_obj_ref_164_trigger_ &-> (simple_obj_ref_164_complete)
          assign_stmt_165_active_ <-& (simple_obj_ref_164_completed_)
          // op
          // implicit reference
          assign_stmt_165_completed_ <-& (assign_stmt_165_active_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe op_pipe
        }
        ::[assign_stmt_168] 
        {
          // 			r1 := r1_pipe
          //  file processorSuper.aa, line 106
          $T[assign_stmt_168_active_] 
          $T[assign_stmt_168_completed_] 
          // r1_pipe
          $T[simple_obj_ref_167_trigger_] 
          $T[simple_obj_ref_167_completed_] 
          ;;[simple_obj_ref_167_complete] 
          {
            // pipe read
            $T [req] $T [ack] 
          }
          simple_obj_ref_167_completed_ <-& (simple_obj_ref_167_complete)
          simple_obj_ref_167_trigger_ &-> (simple_obj_ref_167_complete)
          assign_stmt_168_active_ <-& (simple_obj_ref_167_completed_)
          // r1
          // implicit reference
          assign_stmt_168_completed_ <-& (assign_stmt_168_active_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe r1_pipe
        }
        ::[assign_stmt_171] 
        {
          // 			r2 := r2_pipe
          //  file processorSuper.aa, line 107
          $T[assign_stmt_171_active_] 
          $T[assign_stmt_171_completed_] 
          // r2_pipe
          $T[simple_obj_ref_170_trigger_] 
          $T[simple_obj_ref_170_completed_] 
          ;;[simple_obj_ref_170_complete] 
          {
            // pipe read
            $T [req] $T [ack] 
          }
          simple_obj_ref_170_completed_ <-& (simple_obj_ref_170_complete)
          simple_obj_ref_170_trigger_ &-> (simple_obj_ref_170_complete)
          assign_stmt_171_active_ <-& (simple_obj_ref_170_completed_)
          // r2
          // implicit reference
          assign_stmt_171_completed_ <-& (assign_stmt_171_active_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe r2_pipe
        }
        ::[assign_stmt_174] 
        {
          // 			r3 := r3_pipe
          //  file processorSuper.aa, line 108
          $T[assign_stmt_174_active_] 
          $T[assign_stmt_174_completed_] 
          // r3_pipe
          $T[simple_obj_ref_173_trigger_] 
          $T[simple_obj_ref_173_completed_] 
          ;;[simple_obj_ref_173_complete] 
          {
            // pipe read
            $T [req] $T [ack] 
          }
          simple_obj_ref_173_completed_ <-& (simple_obj_ref_173_complete)
          simple_obj_ref_173_trigger_ &-> (simple_obj_ref_173_complete)
          assign_stmt_174_active_ <-& (simple_obj_ref_173_completed_)
          // r3
          // implicit reference
          assign_stmt_174_completed_ <-& (assign_stmt_174_active_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe r3_pipe
        }
        ::[assign_stmt_177] 
        {
          // 			imm := imm_pipe
          //  file processorSuper.aa, line 109
          $T[assign_stmt_177_active_] 
          $T[assign_stmt_177_completed_] 
          // imm_pipe
          $T[simple_obj_ref_176_trigger_] 
          $T[simple_obj_ref_176_completed_] 
          ;;[simple_obj_ref_176_complete] 
          {
            // pipe read
            $T [req] $T [ack] 
          }
          simple_obj_ref_176_completed_ <-& (simple_obj_ref_176_complete)
          simple_obj_ref_176_trigger_ &-> (simple_obj_ref_176_complete)
          assign_stmt_177_active_ <-& (simple_obj_ref_176_completed_)
          // imm
          // implicit reference
          assign_stmt_177_completed_ <-& (assign_stmt_177_active_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe imm_pipe
        }
        ::[assign_stmt_180] 
        {
          // 			offs := offs_pipe
          //  file processorSuper.aa, line 110
          $T[assign_stmt_180_active_] 
          $T[assign_stmt_180_completed_] 
          // offs_pipe
          $T[simple_obj_ref_179_trigger_] 
          $T[simple_obj_ref_179_completed_] 
          ;;[simple_obj_ref_179_complete] 
          {
            // pipe read
            $T [req] $T [ack] 
          }
          simple_obj_ref_179_completed_ <-& (simple_obj_ref_179_complete)
          simple_obj_ref_179_trigger_ &-> (simple_obj_ref_179_complete)
          assign_stmt_180_active_ <-& (simple_obj_ref_179_completed_)
          // offs
          // implicit reference
          assign_stmt_180_completed_ <-& (assign_stmt_180_active_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe offs_pipe
        }
        ::[assign_stmt_183] 
        {
          // 			pc := pc_to_execute
          //  file processorSuper.aa, line 111
          $T[assign_stmt_183_active_] 
          $T[assign_stmt_183_completed_] 
          // pc_to_execute
          $T[simple_obj_ref_182_trigger_] 
          $T[simple_obj_ref_182_completed_] 
          ;;[simple_obj_ref_182_complete] 
          {
            // pipe read
            $T [req] $T [ack] 
          }
          simple_obj_ref_182_completed_ <-& (simple_obj_ref_182_complete)
          simple_obj_ref_182_trigger_ &-> (simple_obj_ref_182_complete)
          assign_stmt_183_active_ <-& (simple_obj_ref_182_completed_)
          // pc
          // implicit reference
          assign_stmt_183_completed_ <-& (assign_stmt_183_active_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe pc_to_execute
        }
        ::[assign_stmt_187] 
        {
          // 			reg[0 ] := 0 
          //  file processorSuper.aa, line 112
          $T[assign_stmt_187_active_] 
          $T[assign_stmt_187_completed_] 
          // reg[0 ]
          $T[array_obj_ref_185_trigger_] 
          $T[array_obj_ref_185_active_] 
          $T[array_obj_ref_185_completed_] 
          $T[array_obj_ref_185_root_address_calculated] 
          $T[array_obj_ref_185_word_address_calculated] 
          array_obj_ref_185_word_address_calculated <-& (array_obj_ref_185_root_address_calculated)
          ;;[array_obj_ref_185_request] 
          {
            $T [split_req] $T [split_ack]
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [rr] $T [ra] 
              }
            }
          }
          ;;[array_obj_ref_185_complete] 
          {
            ||[word_access] 
            {
              ;;[word_access_0] 
              {
                $T [cr] $T [ca] 
              }
            }
          }
          array_obj_ref_185_trigger_ &-> (array_obj_ref_185_request)
          array_obj_ref_185_active_ <-& (array_obj_ref_185_request)
          array_obj_ref_185_active_ &-> (array_obj_ref_185_complete)
          array_obj_ref_185_completed_ <-& (array_obj_ref_185_complete)
          array_obj_ref_185_trigger_ <-& (array_obj_ref_185_word_address_calculated)
          array_obj_ref_185_trigger_ <-& (assign_stmt_187_active_)
          assign_stmt_187_completed_ <-& (array_obj_ref_185_completed_)
          // load-store dependencies..
        }
      }
      parallel_block_stmt_162__entry__ |-> (parallel_block_stmt_162)
      parallel_block_stmt_162__exit__ <-| (parallel_block_stmt_162)
      // control-path for switch  
      //  file processorSuper.aa, line 114
      ;;[switch_stmt_189_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      switch_stmt_189__entry__ |-> (switch_stmt_189_dead_link)
      switch_stmt_189__exit__ <-| (switch_stmt_189_dead_link)
      //---------------------    switch statement  file processorSuper.aa, line 114  --------------------------
      $P [switch_stmt_189__condition_check_place__] 
      switch_stmt_189__entry__ |-> (switch_stmt_189__condition_check_place__)
      ||[switch_stmt_189__condition_check__] 
      {
        // condition computation
        ;;[condition_0] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_1] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_2] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_3] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_4] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_5] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_6] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_7] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_8] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_9] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_10] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
        ;;[condition_11] 
        {
          $T [rr] $T [ra] $T [cr] $T [ca] 
          $T [cmp] // cmp will trigger choice comparison
        }
      }
      switch_stmt_189__condition_check_place__ |-> (switch_stmt_189__condition_check__)
      $P [switch_stmt_189__select__] 
      switch_stmt_189__select__ <-| (switch_stmt_189__condition_check__)
      // switch choice 0
      ;;[switch_stmt_189_choice_0] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_1]
      bb_0_bb_1 <-| (switch_stmt_189_choice_0)
      // switch choice 1
      ;;[switch_stmt_189_choice_1] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_2]
      bb_0_bb_2 <-| (switch_stmt_189_choice_1)
      // switch choice 2
      ;;[switch_stmt_189_choice_2] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_3]
      bb_0_bb_3 <-| (switch_stmt_189_choice_2)
      // switch choice 3
      ;;[switch_stmt_189_choice_3] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_4]
      bb_0_bb_4 <-| (switch_stmt_189_choice_3)
      // switch choice 4
      ;;[switch_stmt_189_choice_4] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_5]
      bb_0_bb_5 <-| (switch_stmt_189_choice_4)
      // switch choice 5
      ;;[switch_stmt_189_choice_5] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_6]
      bb_0_bb_6 <-| (switch_stmt_189_choice_5)
      // switch choice 6
      ;;[switch_stmt_189_choice_6] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_7]
      bb_0_bb_7 <-| (switch_stmt_189_choice_6)
      // switch choice 7
      ;;[switch_stmt_189_choice_7] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_8]
      bb_0_bb_8 <-| (switch_stmt_189_choice_7)
      // switch choice 8
      ;;[switch_stmt_189_choice_8] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_9]
      bb_0_bb_9 <-| (switch_stmt_189_choice_8)
      // switch choice 9
      ;;[switch_stmt_189_choice_9] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_10]
      bb_0_bb_10 <-| (switch_stmt_189_choice_9)
      // switch choice 10
      ;;[switch_stmt_189_choice_10] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_11]
      bb_0_bb_11 <-| (switch_stmt_189_choice_10)
      // switch choice 11
      ;;[switch_stmt_189_choice_11] 
      {
        $T [ack1]  // ack0 will be ignored..
      }
      $P [bb_0_bb_13]
      bb_0_bb_13 <-| (switch_stmt_189_choice_11)
      ;;[switch_stmt_189_choice_default] 
      {
        $T [ack0] // ack1 will be ignored..
      }
      // switch default choice 
      $P [bb_0_bb_14]
      bb_0_bb_14 <-| (switch_stmt_189_choice_default)
      switch_stmt_189__select__ |-> (switch_stmt_189_choice_0 switch_stmt_189_choice_1 switch_stmt_189_choice_2 switch_stmt_189_choice_3 switch_stmt_189_choice_4 switch_stmt_189_choice_5 switch_stmt_189_choice_6 switch_stmt_189_choice_7 switch_stmt_189_choice_8 switch_stmt_189_choice_9 switch_stmt_189_choice_10 switch_stmt_189_choice_11 switch_stmt_189_choice_default)
      //---------------------   end of switch statement  file processorSuper.aa, line 114  --------------------------
      ::[assign_stmt_232] 
      {
        // 		halt_pipe := 1 
        //  file processorSuper.aa, line 145
        $T[assign_stmt_232_active_] 
        $T[assign_stmt_232_completed_] 
        // halt_pipe
        $T[simple_obj_ref_230_trigger_] 
        $T[simple_obj_ref_230_completed_] 
        ;;[simple_obj_ref_230_complete] 
        {
          // pipe write halt_pipe
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_230_completed_ <-& (simple_obj_ref_230_complete)
        simple_obj_ref_230_trigger_ &-> (simple_obj_ref_230_complete)
        simple_obj_ref_230_trigger_ <-& (assign_stmt_232_active_)
        assign_stmt_232_completed_ <-& (simple_obj_ref_230_completed_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe halt_pipe
      }
      assign_stmt_232__entry__ |-> (assign_stmt_232)
      assign_stmt_232__exit__ <-| (assign_stmt_232)
      ::[assign_stmt_242] 
      {
        // 		reg[r1] := (reg[r2] + reg[r3])
        //  file processorSuper.aa, line 150
        $T[assign_stmt_242_active_] 
        $T[assign_stmt_242_completed_] 
        // (reg[r2] + reg[r3])
        $T[binary_241_active_] 
        $T[binary_241_trigger_] 
        $T[binary_241_completed_] 
        binary_241_active_ <-& (binary_241_trigger_)
        // reg[r2]
        $T[array_obj_ref_238_trigger_] 
        $T[array_obj_ref_238_active_] 
        $T[array_obj_ref_238_completed_] 
        $T[array_obj_ref_238_root_address_calculated] 
        $T[array_obj_ref_238_word_address_calculated] 
        $T[array_obj_ref_238_root_address_calculated] 
        $T[array_obj_ref_238_indices_scaled] 
        $T[array_obj_ref_238_offset_calculated] 
        $T[array_obj_ref_238_index_computed_0] 
        $T[array_obj_ref_238_index_resized_0] 
        // r2
        // implicit reference
        $T[simple_obj_ref_237_completed_] 
        array_obj_ref_238_index_computed_0 <-& (simple_obj_ref_237_completed_)
        ;;[array_obj_ref_238_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_238_index_computed_0 &-> (array_obj_ref_238_index_resize_0)
        array_obj_ref_238_index_resized_0 <-& (array_obj_ref_238_index_resize_0)
        ;;[array_obj_ref_238_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_238_index_resized_0 &-> (array_obj_ref_238_index_scale_0)
        array_obj_ref_238_indices_scaled <-& (array_obj_ref_238_index_scale_0)
        ;;[array_obj_ref_238_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_238_indices_scaled &-> (array_obj_ref_238_add_indices)
        array_obj_ref_238_offset_calculated <-& (array_obj_ref_238_add_indices)
        ;;[array_obj_ref_238_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_238_offset_calculated &-> (array_obj_ref_238_base_plus_offset)
        array_obj_ref_238_root_address_calculated <-& (array_obj_ref_238_base_plus_offset)
        ;;[array_obj_ref_238_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_238_root_address_calculated &-> (array_obj_ref_238_word_addrgen)
        array_obj_ref_238_word_address_calculated <-& (array_obj_ref_238_word_addrgen)
        ;;[array_obj_ref_238_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_238_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_238_trigger_ &-> (array_obj_ref_238_request)
        array_obj_ref_238_active_ <-& (array_obj_ref_238_request)
        array_obj_ref_238_active_ &-> (array_obj_ref_238_complete)
        array_obj_ref_238_completed_ <-& (array_obj_ref_238_complete)
        array_obj_ref_238_trigger_ <-& (array_obj_ref_238_word_address_calculated)
        // reg[r3]
        $T[array_obj_ref_240_trigger_] 
        $T[array_obj_ref_240_active_] 
        $T[array_obj_ref_240_completed_] 
        $T[array_obj_ref_240_root_address_calculated] 
        $T[array_obj_ref_240_word_address_calculated] 
        $T[array_obj_ref_240_root_address_calculated] 
        $T[array_obj_ref_240_indices_scaled] 
        $T[array_obj_ref_240_offset_calculated] 
        $T[array_obj_ref_240_index_computed_0] 
        $T[array_obj_ref_240_index_resized_0] 
        // r3
        // implicit reference
        $T[simple_obj_ref_239_completed_] 
        array_obj_ref_240_index_computed_0 <-& (simple_obj_ref_239_completed_)
        ;;[array_obj_ref_240_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_240_index_computed_0 &-> (array_obj_ref_240_index_resize_0)
        array_obj_ref_240_index_resized_0 <-& (array_obj_ref_240_index_resize_0)
        ;;[array_obj_ref_240_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_240_index_resized_0 &-> (array_obj_ref_240_index_scale_0)
        array_obj_ref_240_indices_scaled <-& (array_obj_ref_240_index_scale_0)
        ;;[array_obj_ref_240_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_240_indices_scaled &-> (array_obj_ref_240_add_indices)
        array_obj_ref_240_offset_calculated <-& (array_obj_ref_240_add_indices)
        ;;[array_obj_ref_240_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_240_offset_calculated &-> (array_obj_ref_240_base_plus_offset)
        array_obj_ref_240_root_address_calculated <-& (array_obj_ref_240_base_plus_offset)
        ;;[array_obj_ref_240_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_240_root_address_calculated &-> (array_obj_ref_240_word_addrgen)
        array_obj_ref_240_word_address_calculated <-& (array_obj_ref_240_word_addrgen)
        ;;[array_obj_ref_240_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_240_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_240_trigger_ &-> (array_obj_ref_240_request)
        array_obj_ref_240_active_ <-& (array_obj_ref_240_request)
        array_obj_ref_240_active_ &-> (array_obj_ref_240_complete)
        array_obj_ref_240_completed_ <-& (array_obj_ref_240_complete)
        array_obj_ref_240_trigger_ <-& (array_obj_ref_240_word_address_calculated)
        binary_241_active_ <-& (array_obj_ref_238_completed_)
        binary_241_active_ <-& (array_obj_ref_240_completed_)
        ;;[binary_241_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_241_active_ &-> (binary_241_complete)
        binary_241_completed_ <-& (binary_241_complete)
        assign_stmt_242_active_ <-& (binary_241_completed_)
        // reg[r1]
        $T[array_obj_ref_236_trigger_] 
        $T[array_obj_ref_236_active_] 
        $T[array_obj_ref_236_completed_] 
        $T[array_obj_ref_236_root_address_calculated] 
        $T[array_obj_ref_236_word_address_calculated] 
        $T[array_obj_ref_236_root_address_calculated] 
        $T[array_obj_ref_236_indices_scaled] 
        $T[array_obj_ref_236_offset_calculated] 
        $T[array_obj_ref_236_index_computed_0] 
        $T[array_obj_ref_236_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_235_completed_] 
        array_obj_ref_236_index_computed_0 <-& (simple_obj_ref_235_completed_)
        ;;[array_obj_ref_236_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_236_index_computed_0 &-> (array_obj_ref_236_index_resize_0)
        array_obj_ref_236_index_resized_0 <-& (array_obj_ref_236_index_resize_0)
        ;;[array_obj_ref_236_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_236_index_resized_0 &-> (array_obj_ref_236_index_scale_0)
        array_obj_ref_236_indices_scaled <-& (array_obj_ref_236_index_scale_0)
        ;;[array_obj_ref_236_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_236_indices_scaled &-> (array_obj_ref_236_add_indices)
        array_obj_ref_236_offset_calculated <-& (array_obj_ref_236_add_indices)
        ;;[array_obj_ref_236_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_236_offset_calculated &-> (array_obj_ref_236_base_plus_offset)
        array_obj_ref_236_root_address_calculated <-& (array_obj_ref_236_base_plus_offset)
        ;;[array_obj_ref_236_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_236_root_address_calculated &-> (array_obj_ref_236_word_addrgen)
        array_obj_ref_236_word_address_calculated <-& (array_obj_ref_236_word_addrgen)
        ;;[array_obj_ref_236_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_236_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_236_trigger_ &-> (array_obj_ref_236_request)
        array_obj_ref_236_active_ <-& (array_obj_ref_236_request)
        array_obj_ref_236_active_ &-> (array_obj_ref_236_complete)
        array_obj_ref_236_completed_ <-& (array_obj_ref_236_complete)
        array_obj_ref_236_trigger_ <-& (array_obj_ref_236_word_address_calculated)
        array_obj_ref_236_trigger_ <-& (assign_stmt_242_active_)
        assign_stmt_242_completed_ <-& (array_obj_ref_236_completed_)
        // load-store dependencies..
        // reg[r2](load) -> reg[r1](store)
        array_obj_ref_236_trigger_ <-& (array_obj_ref_238_active_)
        // reg[r3](load) -> reg[r1](store)
        array_obj_ref_236_trigger_ <-& (array_obj_ref_240_active_)
      }
      assign_stmt_242__entry__ |-> (assign_stmt_242)
      assign_stmt_242__exit__ <-| (assign_stmt_242)
      ::[assign_stmt_252] 
      {
        // 		reg[r1] := (reg[r2] - reg[r3])
        //  file processorSuper.aa, line 155
        $T[assign_stmt_252_active_] 
        $T[assign_stmt_252_completed_] 
        // (reg[r2] - reg[r3])
        $T[binary_251_active_] 
        $T[binary_251_trigger_] 
        $T[binary_251_completed_] 
        binary_251_active_ <-& (binary_251_trigger_)
        // reg[r2]
        $T[array_obj_ref_248_trigger_] 
        $T[array_obj_ref_248_active_] 
        $T[array_obj_ref_248_completed_] 
        $T[array_obj_ref_248_root_address_calculated] 
        $T[array_obj_ref_248_word_address_calculated] 
        $T[array_obj_ref_248_root_address_calculated] 
        $T[array_obj_ref_248_indices_scaled] 
        $T[array_obj_ref_248_offset_calculated] 
        $T[array_obj_ref_248_index_computed_0] 
        $T[array_obj_ref_248_index_resized_0] 
        // r2
        // implicit reference
        $T[simple_obj_ref_247_completed_] 
        array_obj_ref_248_index_computed_0 <-& (simple_obj_ref_247_completed_)
        ;;[array_obj_ref_248_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_248_index_computed_0 &-> (array_obj_ref_248_index_resize_0)
        array_obj_ref_248_index_resized_0 <-& (array_obj_ref_248_index_resize_0)
        ;;[array_obj_ref_248_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_248_index_resized_0 &-> (array_obj_ref_248_index_scale_0)
        array_obj_ref_248_indices_scaled <-& (array_obj_ref_248_index_scale_0)
        ;;[array_obj_ref_248_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_248_indices_scaled &-> (array_obj_ref_248_add_indices)
        array_obj_ref_248_offset_calculated <-& (array_obj_ref_248_add_indices)
        ;;[array_obj_ref_248_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_248_offset_calculated &-> (array_obj_ref_248_base_plus_offset)
        array_obj_ref_248_root_address_calculated <-& (array_obj_ref_248_base_plus_offset)
        ;;[array_obj_ref_248_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_248_root_address_calculated &-> (array_obj_ref_248_word_addrgen)
        array_obj_ref_248_word_address_calculated <-& (array_obj_ref_248_word_addrgen)
        ;;[array_obj_ref_248_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_248_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_248_trigger_ &-> (array_obj_ref_248_request)
        array_obj_ref_248_active_ <-& (array_obj_ref_248_request)
        array_obj_ref_248_active_ &-> (array_obj_ref_248_complete)
        array_obj_ref_248_completed_ <-& (array_obj_ref_248_complete)
        array_obj_ref_248_trigger_ <-& (array_obj_ref_248_word_address_calculated)
        // reg[r3]
        $T[array_obj_ref_250_trigger_] 
        $T[array_obj_ref_250_active_] 
        $T[array_obj_ref_250_completed_] 
        $T[array_obj_ref_250_root_address_calculated] 
        $T[array_obj_ref_250_word_address_calculated] 
        $T[array_obj_ref_250_root_address_calculated] 
        $T[array_obj_ref_250_indices_scaled] 
        $T[array_obj_ref_250_offset_calculated] 
        $T[array_obj_ref_250_index_computed_0] 
        $T[array_obj_ref_250_index_resized_0] 
        // r3
        // implicit reference
        $T[simple_obj_ref_249_completed_] 
        array_obj_ref_250_index_computed_0 <-& (simple_obj_ref_249_completed_)
        ;;[array_obj_ref_250_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_250_index_computed_0 &-> (array_obj_ref_250_index_resize_0)
        array_obj_ref_250_index_resized_0 <-& (array_obj_ref_250_index_resize_0)
        ;;[array_obj_ref_250_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_250_index_resized_0 &-> (array_obj_ref_250_index_scale_0)
        array_obj_ref_250_indices_scaled <-& (array_obj_ref_250_index_scale_0)
        ;;[array_obj_ref_250_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_250_indices_scaled &-> (array_obj_ref_250_add_indices)
        array_obj_ref_250_offset_calculated <-& (array_obj_ref_250_add_indices)
        ;;[array_obj_ref_250_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_250_offset_calculated &-> (array_obj_ref_250_base_plus_offset)
        array_obj_ref_250_root_address_calculated <-& (array_obj_ref_250_base_plus_offset)
        ;;[array_obj_ref_250_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_250_root_address_calculated &-> (array_obj_ref_250_word_addrgen)
        array_obj_ref_250_word_address_calculated <-& (array_obj_ref_250_word_addrgen)
        ;;[array_obj_ref_250_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_250_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_250_trigger_ &-> (array_obj_ref_250_request)
        array_obj_ref_250_active_ <-& (array_obj_ref_250_request)
        array_obj_ref_250_active_ &-> (array_obj_ref_250_complete)
        array_obj_ref_250_completed_ <-& (array_obj_ref_250_complete)
        array_obj_ref_250_trigger_ <-& (array_obj_ref_250_word_address_calculated)
        binary_251_active_ <-& (array_obj_ref_248_completed_)
        binary_251_active_ <-& (array_obj_ref_250_completed_)
        ;;[binary_251_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_251_active_ &-> (binary_251_complete)
        binary_251_completed_ <-& (binary_251_complete)
        assign_stmt_252_active_ <-& (binary_251_completed_)
        // reg[r1]
        $T[array_obj_ref_246_trigger_] 
        $T[array_obj_ref_246_active_] 
        $T[array_obj_ref_246_completed_] 
        $T[array_obj_ref_246_root_address_calculated] 
        $T[array_obj_ref_246_word_address_calculated] 
        $T[array_obj_ref_246_root_address_calculated] 
        $T[array_obj_ref_246_indices_scaled] 
        $T[array_obj_ref_246_offset_calculated] 
        $T[array_obj_ref_246_index_computed_0] 
        $T[array_obj_ref_246_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_245_completed_] 
        array_obj_ref_246_index_computed_0 <-& (simple_obj_ref_245_completed_)
        ;;[array_obj_ref_246_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_246_index_computed_0 &-> (array_obj_ref_246_index_resize_0)
        array_obj_ref_246_index_resized_0 <-& (array_obj_ref_246_index_resize_0)
        ;;[array_obj_ref_246_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_246_index_resized_0 &-> (array_obj_ref_246_index_scale_0)
        array_obj_ref_246_indices_scaled <-& (array_obj_ref_246_index_scale_0)
        ;;[array_obj_ref_246_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_246_indices_scaled &-> (array_obj_ref_246_add_indices)
        array_obj_ref_246_offset_calculated <-& (array_obj_ref_246_add_indices)
        ;;[array_obj_ref_246_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_246_offset_calculated &-> (array_obj_ref_246_base_plus_offset)
        array_obj_ref_246_root_address_calculated <-& (array_obj_ref_246_base_plus_offset)
        ;;[array_obj_ref_246_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_246_root_address_calculated &-> (array_obj_ref_246_word_addrgen)
        array_obj_ref_246_word_address_calculated <-& (array_obj_ref_246_word_addrgen)
        ;;[array_obj_ref_246_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_246_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_246_trigger_ &-> (array_obj_ref_246_request)
        array_obj_ref_246_active_ <-& (array_obj_ref_246_request)
        array_obj_ref_246_active_ &-> (array_obj_ref_246_complete)
        array_obj_ref_246_completed_ <-& (array_obj_ref_246_complete)
        array_obj_ref_246_trigger_ <-& (array_obj_ref_246_word_address_calculated)
        array_obj_ref_246_trigger_ <-& (assign_stmt_252_active_)
        assign_stmt_252_completed_ <-& (array_obj_ref_246_completed_)
        // load-store dependencies..
        // reg[r2](load) -> reg[r1](store)
        array_obj_ref_246_trigger_ <-& (array_obj_ref_248_active_)
        // reg[r3](load) -> reg[r1](store)
        array_obj_ref_246_trigger_ <-& (array_obj_ref_250_active_)
      }
      assign_stmt_252__entry__ |-> (assign_stmt_252)
      assign_stmt_252__exit__ <-| (assign_stmt_252)
      ::[assign_stmt_263] 
      {
        // 		reg[r1] := mem[(reg[r2] + reg[r3])]
        //  file processorSuper.aa, line 160
        $T[assign_stmt_263_active_] 
        $T[assign_stmt_263_completed_] 
        // mem[(reg[r2] + reg[r3])]
        $T[array_obj_ref_262_trigger_] 
        $T[array_obj_ref_262_active_] 
        $T[array_obj_ref_262_completed_] 
        $T[array_obj_ref_262_root_address_calculated] 
        $T[array_obj_ref_262_word_address_calculated] 
        $T[array_obj_ref_262_root_address_calculated] 
        $T[array_obj_ref_262_indices_scaled] 
        $T[array_obj_ref_262_offset_calculated] 
        $T[array_obj_ref_262_index_computed_0] 
        $T[array_obj_ref_262_index_resized_0] 
        // (reg[r2] + reg[r3])
        $T[binary_261_active_] 
        $T[binary_261_trigger_] 
        $T[binary_261_completed_] 
        binary_261_active_ <-& (binary_261_trigger_)
        // reg[r2]
        $T[array_obj_ref_258_trigger_] 
        $T[array_obj_ref_258_active_] 
        $T[array_obj_ref_258_completed_] 
        $T[array_obj_ref_258_root_address_calculated] 
        $T[array_obj_ref_258_word_address_calculated] 
        $T[array_obj_ref_258_root_address_calculated] 
        $T[array_obj_ref_258_indices_scaled] 
        $T[array_obj_ref_258_offset_calculated] 
        $T[array_obj_ref_258_index_computed_0] 
        $T[array_obj_ref_258_index_resized_0] 
        // r2
        // implicit reference
        $T[simple_obj_ref_257_completed_] 
        array_obj_ref_258_index_computed_0 <-& (simple_obj_ref_257_completed_)
        ;;[array_obj_ref_258_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_258_index_computed_0 &-> (array_obj_ref_258_index_resize_0)
        array_obj_ref_258_index_resized_0 <-& (array_obj_ref_258_index_resize_0)
        ;;[array_obj_ref_258_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_258_index_resized_0 &-> (array_obj_ref_258_index_scale_0)
        array_obj_ref_258_indices_scaled <-& (array_obj_ref_258_index_scale_0)
        ;;[array_obj_ref_258_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_258_indices_scaled &-> (array_obj_ref_258_add_indices)
        array_obj_ref_258_offset_calculated <-& (array_obj_ref_258_add_indices)
        ;;[array_obj_ref_258_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_258_offset_calculated &-> (array_obj_ref_258_base_plus_offset)
        array_obj_ref_258_root_address_calculated <-& (array_obj_ref_258_base_plus_offset)
        ;;[array_obj_ref_258_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_258_root_address_calculated &-> (array_obj_ref_258_word_addrgen)
        array_obj_ref_258_word_address_calculated <-& (array_obj_ref_258_word_addrgen)
        ;;[array_obj_ref_258_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_258_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_258_trigger_ &-> (array_obj_ref_258_request)
        array_obj_ref_258_active_ <-& (array_obj_ref_258_request)
        array_obj_ref_258_active_ &-> (array_obj_ref_258_complete)
        array_obj_ref_258_completed_ <-& (array_obj_ref_258_complete)
        array_obj_ref_258_trigger_ <-& (array_obj_ref_258_word_address_calculated)
        // reg[r3]
        $T[array_obj_ref_260_trigger_] 
        $T[array_obj_ref_260_active_] 
        $T[array_obj_ref_260_completed_] 
        $T[array_obj_ref_260_root_address_calculated] 
        $T[array_obj_ref_260_word_address_calculated] 
        $T[array_obj_ref_260_root_address_calculated] 
        $T[array_obj_ref_260_indices_scaled] 
        $T[array_obj_ref_260_offset_calculated] 
        $T[array_obj_ref_260_index_computed_0] 
        $T[array_obj_ref_260_index_resized_0] 
        // r3
        // implicit reference
        $T[simple_obj_ref_259_completed_] 
        array_obj_ref_260_index_computed_0 <-& (simple_obj_ref_259_completed_)
        ;;[array_obj_ref_260_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_260_index_computed_0 &-> (array_obj_ref_260_index_resize_0)
        array_obj_ref_260_index_resized_0 <-& (array_obj_ref_260_index_resize_0)
        ;;[array_obj_ref_260_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_260_index_resized_0 &-> (array_obj_ref_260_index_scale_0)
        array_obj_ref_260_indices_scaled <-& (array_obj_ref_260_index_scale_0)
        ;;[array_obj_ref_260_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_260_indices_scaled &-> (array_obj_ref_260_add_indices)
        array_obj_ref_260_offset_calculated <-& (array_obj_ref_260_add_indices)
        ;;[array_obj_ref_260_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_260_offset_calculated &-> (array_obj_ref_260_base_plus_offset)
        array_obj_ref_260_root_address_calculated <-& (array_obj_ref_260_base_plus_offset)
        ;;[array_obj_ref_260_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_260_root_address_calculated &-> (array_obj_ref_260_word_addrgen)
        array_obj_ref_260_word_address_calculated <-& (array_obj_ref_260_word_addrgen)
        ;;[array_obj_ref_260_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_260_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_260_trigger_ &-> (array_obj_ref_260_request)
        array_obj_ref_260_active_ <-& (array_obj_ref_260_request)
        array_obj_ref_260_active_ &-> (array_obj_ref_260_complete)
        array_obj_ref_260_completed_ <-& (array_obj_ref_260_complete)
        array_obj_ref_260_trigger_ <-& (array_obj_ref_260_word_address_calculated)
        binary_261_active_ <-& (array_obj_ref_258_completed_)
        binary_261_active_ <-& (array_obj_ref_260_completed_)
        ;;[binary_261_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_261_active_ &-> (binary_261_complete)
        binary_261_completed_ <-& (binary_261_complete)
        array_obj_ref_262_index_computed_0 <-& (binary_261_completed_)
        ;;[array_obj_ref_262_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_262_index_computed_0 &-> (array_obj_ref_262_index_resize_0)
        array_obj_ref_262_index_resized_0 <-& (array_obj_ref_262_index_resize_0)
        ;;[array_obj_ref_262_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_262_index_resized_0 &-> (array_obj_ref_262_index_scale_0)
        array_obj_ref_262_indices_scaled <-& (array_obj_ref_262_index_scale_0)
        ;;[array_obj_ref_262_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_262_indices_scaled &-> (array_obj_ref_262_add_indices)
        array_obj_ref_262_offset_calculated <-& (array_obj_ref_262_add_indices)
        ;;[array_obj_ref_262_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_262_offset_calculated &-> (array_obj_ref_262_base_plus_offset)
        array_obj_ref_262_root_address_calculated <-& (array_obj_ref_262_base_plus_offset)
        ;;[array_obj_ref_262_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_262_root_address_calculated &-> (array_obj_ref_262_word_addrgen)
        array_obj_ref_262_word_address_calculated <-& (array_obj_ref_262_word_addrgen)
        ;;[array_obj_ref_262_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_262_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_262_trigger_ &-> (array_obj_ref_262_request)
        array_obj_ref_262_active_ <-& (array_obj_ref_262_request)
        array_obj_ref_262_active_ &-> (array_obj_ref_262_complete)
        array_obj_ref_262_completed_ <-& (array_obj_ref_262_complete)
        array_obj_ref_262_trigger_ <-& (array_obj_ref_262_word_address_calculated)
        assign_stmt_263_active_ <-& (array_obj_ref_262_completed_)
        // reg[r1]
        $T[array_obj_ref_256_trigger_] 
        $T[array_obj_ref_256_active_] 
        $T[array_obj_ref_256_completed_] 
        $T[array_obj_ref_256_root_address_calculated] 
        $T[array_obj_ref_256_word_address_calculated] 
        $T[array_obj_ref_256_root_address_calculated] 
        $T[array_obj_ref_256_indices_scaled] 
        $T[array_obj_ref_256_offset_calculated] 
        $T[array_obj_ref_256_index_computed_0] 
        $T[array_obj_ref_256_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_255_completed_] 
        array_obj_ref_256_index_computed_0 <-& (simple_obj_ref_255_completed_)
        ;;[array_obj_ref_256_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_256_index_computed_0 &-> (array_obj_ref_256_index_resize_0)
        array_obj_ref_256_index_resized_0 <-& (array_obj_ref_256_index_resize_0)
        ;;[array_obj_ref_256_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_256_index_resized_0 &-> (array_obj_ref_256_index_scale_0)
        array_obj_ref_256_indices_scaled <-& (array_obj_ref_256_index_scale_0)
        ;;[array_obj_ref_256_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_256_indices_scaled &-> (array_obj_ref_256_add_indices)
        array_obj_ref_256_offset_calculated <-& (array_obj_ref_256_add_indices)
        ;;[array_obj_ref_256_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_256_offset_calculated &-> (array_obj_ref_256_base_plus_offset)
        array_obj_ref_256_root_address_calculated <-& (array_obj_ref_256_base_plus_offset)
        ;;[array_obj_ref_256_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_256_root_address_calculated &-> (array_obj_ref_256_word_addrgen)
        array_obj_ref_256_word_address_calculated <-& (array_obj_ref_256_word_addrgen)
        ;;[array_obj_ref_256_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_256_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_256_trigger_ &-> (array_obj_ref_256_request)
        array_obj_ref_256_active_ <-& (array_obj_ref_256_request)
        array_obj_ref_256_active_ &-> (array_obj_ref_256_complete)
        array_obj_ref_256_completed_ <-& (array_obj_ref_256_complete)
        array_obj_ref_256_trigger_ <-& (array_obj_ref_256_word_address_calculated)
        array_obj_ref_256_trigger_ <-& (assign_stmt_263_active_)
        assign_stmt_263_completed_ <-& (array_obj_ref_256_completed_)
        // load-store dependencies..
        // reg[r2](load) -> reg[r1](store)
        array_obj_ref_256_trigger_ <-& (array_obj_ref_258_active_)
        // reg[r3](load) -> reg[r1](store)
        array_obj_ref_256_trigger_ <-& (array_obj_ref_260_active_)
      }
      assign_stmt_263__entry__ |-> (assign_stmt_263)
      assign_stmt_263__exit__ <-| (assign_stmt_263)
      ::[assign_stmt_274] 
      {
        // 		mem[(reg[r2] + reg[r3])] := reg[r1]
        //  file processorSuper.aa, line 165
        $T[assign_stmt_274_active_] 
        $T[assign_stmt_274_completed_] 
        // reg[r1]
        $T[array_obj_ref_273_trigger_] 
        $T[array_obj_ref_273_active_] 
        $T[array_obj_ref_273_completed_] 
        $T[array_obj_ref_273_root_address_calculated] 
        $T[array_obj_ref_273_word_address_calculated] 
        $T[array_obj_ref_273_root_address_calculated] 
        $T[array_obj_ref_273_indices_scaled] 
        $T[array_obj_ref_273_offset_calculated] 
        $T[array_obj_ref_273_index_computed_0] 
        $T[array_obj_ref_273_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_272_completed_] 
        array_obj_ref_273_index_computed_0 <-& (simple_obj_ref_272_completed_)
        ;;[array_obj_ref_273_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_273_index_computed_0 &-> (array_obj_ref_273_index_resize_0)
        array_obj_ref_273_index_resized_0 <-& (array_obj_ref_273_index_resize_0)
        ;;[array_obj_ref_273_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_273_index_resized_0 &-> (array_obj_ref_273_index_scale_0)
        array_obj_ref_273_indices_scaled <-& (array_obj_ref_273_index_scale_0)
        ;;[array_obj_ref_273_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_273_indices_scaled &-> (array_obj_ref_273_add_indices)
        array_obj_ref_273_offset_calculated <-& (array_obj_ref_273_add_indices)
        ;;[array_obj_ref_273_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_273_offset_calculated &-> (array_obj_ref_273_base_plus_offset)
        array_obj_ref_273_root_address_calculated <-& (array_obj_ref_273_base_plus_offset)
        ;;[array_obj_ref_273_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_273_root_address_calculated &-> (array_obj_ref_273_word_addrgen)
        array_obj_ref_273_word_address_calculated <-& (array_obj_ref_273_word_addrgen)
        ;;[array_obj_ref_273_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_273_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_273_trigger_ &-> (array_obj_ref_273_request)
        array_obj_ref_273_active_ <-& (array_obj_ref_273_request)
        array_obj_ref_273_active_ &-> (array_obj_ref_273_complete)
        array_obj_ref_273_completed_ <-& (array_obj_ref_273_complete)
        array_obj_ref_273_trigger_ <-& (array_obj_ref_273_word_address_calculated)
        assign_stmt_274_active_ <-& (array_obj_ref_273_completed_)
        // mem[(reg[r2] + reg[r3])]
        $T[array_obj_ref_271_trigger_] 
        $T[array_obj_ref_271_active_] 
        $T[array_obj_ref_271_completed_] 
        $T[array_obj_ref_271_root_address_calculated] 
        $T[array_obj_ref_271_word_address_calculated] 
        $T[array_obj_ref_271_root_address_calculated] 
        $T[array_obj_ref_271_indices_scaled] 
        $T[array_obj_ref_271_offset_calculated] 
        $T[array_obj_ref_271_index_computed_0] 
        $T[array_obj_ref_271_index_resized_0] 
        // (reg[r2] + reg[r3])
        $T[binary_270_active_] 
        $T[binary_270_trigger_] 
        $T[binary_270_completed_] 
        binary_270_active_ <-& (binary_270_trigger_)
        // reg[r2]
        $T[array_obj_ref_267_trigger_] 
        $T[array_obj_ref_267_active_] 
        $T[array_obj_ref_267_completed_] 
        $T[array_obj_ref_267_root_address_calculated] 
        $T[array_obj_ref_267_word_address_calculated] 
        $T[array_obj_ref_267_root_address_calculated] 
        $T[array_obj_ref_267_indices_scaled] 
        $T[array_obj_ref_267_offset_calculated] 
        $T[array_obj_ref_267_index_computed_0] 
        $T[array_obj_ref_267_index_resized_0] 
        // r2
        // implicit reference
        $T[simple_obj_ref_266_completed_] 
        array_obj_ref_267_index_computed_0 <-& (simple_obj_ref_266_completed_)
        ;;[array_obj_ref_267_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_267_index_computed_0 &-> (array_obj_ref_267_index_resize_0)
        array_obj_ref_267_index_resized_0 <-& (array_obj_ref_267_index_resize_0)
        ;;[array_obj_ref_267_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_267_index_resized_0 &-> (array_obj_ref_267_index_scale_0)
        array_obj_ref_267_indices_scaled <-& (array_obj_ref_267_index_scale_0)
        ;;[array_obj_ref_267_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_267_indices_scaled &-> (array_obj_ref_267_add_indices)
        array_obj_ref_267_offset_calculated <-& (array_obj_ref_267_add_indices)
        ;;[array_obj_ref_267_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_267_offset_calculated &-> (array_obj_ref_267_base_plus_offset)
        array_obj_ref_267_root_address_calculated <-& (array_obj_ref_267_base_plus_offset)
        ;;[array_obj_ref_267_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_267_root_address_calculated &-> (array_obj_ref_267_word_addrgen)
        array_obj_ref_267_word_address_calculated <-& (array_obj_ref_267_word_addrgen)
        ;;[array_obj_ref_267_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_267_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_267_trigger_ &-> (array_obj_ref_267_request)
        array_obj_ref_267_active_ <-& (array_obj_ref_267_request)
        array_obj_ref_267_active_ &-> (array_obj_ref_267_complete)
        array_obj_ref_267_completed_ <-& (array_obj_ref_267_complete)
        array_obj_ref_267_trigger_ <-& (array_obj_ref_267_word_address_calculated)
        // reg[r3]
        $T[array_obj_ref_269_trigger_] 
        $T[array_obj_ref_269_active_] 
        $T[array_obj_ref_269_completed_] 
        $T[array_obj_ref_269_root_address_calculated] 
        $T[array_obj_ref_269_word_address_calculated] 
        $T[array_obj_ref_269_root_address_calculated] 
        $T[array_obj_ref_269_indices_scaled] 
        $T[array_obj_ref_269_offset_calculated] 
        $T[array_obj_ref_269_index_computed_0] 
        $T[array_obj_ref_269_index_resized_0] 
        // r3
        // implicit reference
        $T[simple_obj_ref_268_completed_] 
        array_obj_ref_269_index_computed_0 <-& (simple_obj_ref_268_completed_)
        ;;[array_obj_ref_269_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_269_index_computed_0 &-> (array_obj_ref_269_index_resize_0)
        array_obj_ref_269_index_resized_0 <-& (array_obj_ref_269_index_resize_0)
        ;;[array_obj_ref_269_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_269_index_resized_0 &-> (array_obj_ref_269_index_scale_0)
        array_obj_ref_269_indices_scaled <-& (array_obj_ref_269_index_scale_0)
        ;;[array_obj_ref_269_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_269_indices_scaled &-> (array_obj_ref_269_add_indices)
        array_obj_ref_269_offset_calculated <-& (array_obj_ref_269_add_indices)
        ;;[array_obj_ref_269_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_269_offset_calculated &-> (array_obj_ref_269_base_plus_offset)
        array_obj_ref_269_root_address_calculated <-& (array_obj_ref_269_base_plus_offset)
        ;;[array_obj_ref_269_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_269_root_address_calculated &-> (array_obj_ref_269_word_addrgen)
        array_obj_ref_269_word_address_calculated <-& (array_obj_ref_269_word_addrgen)
        ;;[array_obj_ref_269_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_269_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_269_trigger_ &-> (array_obj_ref_269_request)
        array_obj_ref_269_active_ <-& (array_obj_ref_269_request)
        array_obj_ref_269_active_ &-> (array_obj_ref_269_complete)
        array_obj_ref_269_completed_ <-& (array_obj_ref_269_complete)
        array_obj_ref_269_trigger_ <-& (array_obj_ref_269_word_address_calculated)
        binary_270_active_ <-& (array_obj_ref_267_completed_)
        binary_270_active_ <-& (array_obj_ref_269_completed_)
        ;;[binary_270_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_270_active_ &-> (binary_270_complete)
        binary_270_completed_ <-& (binary_270_complete)
        array_obj_ref_271_index_computed_0 <-& (binary_270_completed_)
        ;;[array_obj_ref_271_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_271_index_computed_0 &-> (array_obj_ref_271_index_resize_0)
        array_obj_ref_271_index_resized_0 <-& (array_obj_ref_271_index_resize_0)
        ;;[array_obj_ref_271_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_271_index_resized_0 &-> (array_obj_ref_271_index_scale_0)
        array_obj_ref_271_indices_scaled <-& (array_obj_ref_271_index_scale_0)
        ;;[array_obj_ref_271_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_271_indices_scaled &-> (array_obj_ref_271_add_indices)
        array_obj_ref_271_offset_calculated <-& (array_obj_ref_271_add_indices)
        ;;[array_obj_ref_271_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_271_offset_calculated &-> (array_obj_ref_271_base_plus_offset)
        array_obj_ref_271_root_address_calculated <-& (array_obj_ref_271_base_plus_offset)
        ;;[array_obj_ref_271_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_271_root_address_calculated &-> (array_obj_ref_271_word_addrgen)
        array_obj_ref_271_word_address_calculated <-& (array_obj_ref_271_word_addrgen)
        ;;[array_obj_ref_271_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_271_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_271_trigger_ &-> (array_obj_ref_271_request)
        array_obj_ref_271_active_ <-& (array_obj_ref_271_request)
        array_obj_ref_271_active_ &-> (array_obj_ref_271_complete)
        array_obj_ref_271_completed_ <-& (array_obj_ref_271_complete)
        array_obj_ref_271_trigger_ <-& (array_obj_ref_271_word_address_calculated)
        array_obj_ref_271_trigger_ <-& (assign_stmt_274_active_)
        assign_stmt_274_completed_ <-& (array_obj_ref_271_completed_)
        // load-store dependencies..
      }
      assign_stmt_274__entry__ |-> (assign_stmt_274)
      assign_stmt_274__exit__ <-| (assign_stmt_274)
      ::[assign_stmt_285] 
      {
        // 		reg[r1] := ((reg[r1] & _b1111111100000000 ) | imm)
        //  file processorSuper.aa, line 170
        $T[assign_stmt_285_active_] 
        $T[assign_stmt_285_completed_] 
        // ((reg[r1] & _b1111111100000000 ) | imm)
        $T[binary_284_active_] 
        $T[binary_284_trigger_] 
        $T[binary_284_completed_] 
        binary_284_active_ <-& (binary_284_trigger_)
        // (reg[r1] & _b1111111100000000 )
        $T[binary_282_active_] 
        $T[binary_282_trigger_] 
        $T[binary_282_completed_] 
        binary_282_active_ <-& (binary_282_trigger_)
        // reg[r1]
        $T[array_obj_ref_280_trigger_] 
        $T[array_obj_ref_280_active_] 
        $T[array_obj_ref_280_completed_] 
        $T[array_obj_ref_280_root_address_calculated] 
        $T[array_obj_ref_280_word_address_calculated] 
        $T[array_obj_ref_280_root_address_calculated] 
        $T[array_obj_ref_280_indices_scaled] 
        $T[array_obj_ref_280_offset_calculated] 
        $T[array_obj_ref_280_index_computed_0] 
        $T[array_obj_ref_280_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_279_completed_] 
        array_obj_ref_280_index_computed_0 <-& (simple_obj_ref_279_completed_)
        ;;[array_obj_ref_280_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_280_index_computed_0 &-> (array_obj_ref_280_index_resize_0)
        array_obj_ref_280_index_resized_0 <-& (array_obj_ref_280_index_resize_0)
        ;;[array_obj_ref_280_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_280_index_resized_0 &-> (array_obj_ref_280_index_scale_0)
        array_obj_ref_280_indices_scaled <-& (array_obj_ref_280_index_scale_0)
        ;;[array_obj_ref_280_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_280_indices_scaled &-> (array_obj_ref_280_add_indices)
        array_obj_ref_280_offset_calculated <-& (array_obj_ref_280_add_indices)
        ;;[array_obj_ref_280_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_280_offset_calculated &-> (array_obj_ref_280_base_plus_offset)
        array_obj_ref_280_root_address_calculated <-& (array_obj_ref_280_base_plus_offset)
        ;;[array_obj_ref_280_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_280_root_address_calculated &-> (array_obj_ref_280_word_addrgen)
        array_obj_ref_280_word_address_calculated <-& (array_obj_ref_280_word_addrgen)
        ;;[array_obj_ref_280_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_280_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_280_trigger_ &-> (array_obj_ref_280_request)
        array_obj_ref_280_active_ <-& (array_obj_ref_280_request)
        array_obj_ref_280_active_ &-> (array_obj_ref_280_complete)
        array_obj_ref_280_completed_ <-& (array_obj_ref_280_complete)
        array_obj_ref_280_trigger_ <-& (array_obj_ref_280_word_address_calculated)
        binary_282_active_ <-& (array_obj_ref_280_completed_)
        ;;[binary_282_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_282_active_ &-> (binary_282_complete)
        binary_282_completed_ <-& (binary_282_complete)
        // imm
        // implicit reference
        $T[simple_obj_ref_283_completed_] 
        binary_284_active_ <-& (binary_282_completed_)
        binary_284_active_ <-& (simple_obj_ref_283_completed_)
        ;;[binary_284_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_284_active_ &-> (binary_284_complete)
        binary_284_completed_ <-& (binary_284_complete)
        assign_stmt_285_active_ <-& (binary_284_completed_)
        // reg[r1]
        $T[array_obj_ref_278_trigger_] 
        $T[array_obj_ref_278_active_] 
        $T[array_obj_ref_278_completed_] 
        $T[array_obj_ref_278_root_address_calculated] 
        $T[array_obj_ref_278_word_address_calculated] 
        $T[array_obj_ref_278_root_address_calculated] 
        $T[array_obj_ref_278_indices_scaled] 
        $T[array_obj_ref_278_offset_calculated] 
        $T[array_obj_ref_278_index_computed_0] 
        $T[array_obj_ref_278_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_277_completed_] 
        array_obj_ref_278_index_computed_0 <-& (simple_obj_ref_277_completed_)
        ;;[array_obj_ref_278_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_278_index_computed_0 &-> (array_obj_ref_278_index_resize_0)
        array_obj_ref_278_index_resized_0 <-& (array_obj_ref_278_index_resize_0)
        ;;[array_obj_ref_278_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_278_index_resized_0 &-> (array_obj_ref_278_index_scale_0)
        array_obj_ref_278_indices_scaled <-& (array_obj_ref_278_index_scale_0)
        ;;[array_obj_ref_278_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_278_indices_scaled &-> (array_obj_ref_278_add_indices)
        array_obj_ref_278_offset_calculated <-& (array_obj_ref_278_add_indices)
        ;;[array_obj_ref_278_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_278_offset_calculated &-> (array_obj_ref_278_base_plus_offset)
        array_obj_ref_278_root_address_calculated <-& (array_obj_ref_278_base_plus_offset)
        ;;[array_obj_ref_278_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_278_root_address_calculated &-> (array_obj_ref_278_word_addrgen)
        array_obj_ref_278_word_address_calculated <-& (array_obj_ref_278_word_addrgen)
        ;;[array_obj_ref_278_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_278_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_278_trigger_ &-> (array_obj_ref_278_request)
        array_obj_ref_278_active_ <-& (array_obj_ref_278_request)
        array_obj_ref_278_active_ &-> (array_obj_ref_278_complete)
        array_obj_ref_278_completed_ <-& (array_obj_ref_278_complete)
        array_obj_ref_278_trigger_ <-& (array_obj_ref_278_word_address_calculated)
        array_obj_ref_278_trigger_ <-& (assign_stmt_285_active_)
        assign_stmt_285_completed_ <-& (array_obj_ref_278_completed_)
        // load-store dependencies..
        // reg[r1](load) -> reg[r1](store)
        array_obj_ref_278_trigger_ <-& (array_obj_ref_280_active_)
      }
      assign_stmt_285__entry__ |-> (assign_stmt_285)
      assign_stmt_285__exit__ <-| (assign_stmt_285)
      ::[assign_stmt_298] 
      {
        // 		reg[r1] := ((reg[r1] & _b0000000011111111 ) | (imm << 8 ))
        //  file processorSuper.aa, line 175
        $T[assign_stmt_298_active_] 
        $T[assign_stmt_298_completed_] 
        // ((reg[r1] & _b0000000011111111 ) | (imm << 8 ))
        $T[binary_297_active_] 
        $T[binary_297_trigger_] 
        $T[binary_297_completed_] 
        binary_297_active_ <-& (binary_297_trigger_)
        // (reg[r1] & _b0000000011111111 )
        $T[binary_293_active_] 
        $T[binary_293_trigger_] 
        $T[binary_293_completed_] 
        binary_293_active_ <-& (binary_293_trigger_)
        // reg[r1]
        $T[array_obj_ref_291_trigger_] 
        $T[array_obj_ref_291_active_] 
        $T[array_obj_ref_291_completed_] 
        $T[array_obj_ref_291_root_address_calculated] 
        $T[array_obj_ref_291_word_address_calculated] 
        $T[array_obj_ref_291_root_address_calculated] 
        $T[array_obj_ref_291_indices_scaled] 
        $T[array_obj_ref_291_offset_calculated] 
        $T[array_obj_ref_291_index_computed_0] 
        $T[array_obj_ref_291_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_290_completed_] 
        array_obj_ref_291_index_computed_0 <-& (simple_obj_ref_290_completed_)
        ;;[array_obj_ref_291_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_291_index_computed_0 &-> (array_obj_ref_291_index_resize_0)
        array_obj_ref_291_index_resized_0 <-& (array_obj_ref_291_index_resize_0)
        ;;[array_obj_ref_291_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_291_index_resized_0 &-> (array_obj_ref_291_index_scale_0)
        array_obj_ref_291_indices_scaled <-& (array_obj_ref_291_index_scale_0)
        ;;[array_obj_ref_291_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_291_indices_scaled &-> (array_obj_ref_291_add_indices)
        array_obj_ref_291_offset_calculated <-& (array_obj_ref_291_add_indices)
        ;;[array_obj_ref_291_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_291_offset_calculated &-> (array_obj_ref_291_base_plus_offset)
        array_obj_ref_291_root_address_calculated <-& (array_obj_ref_291_base_plus_offset)
        ;;[array_obj_ref_291_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_291_root_address_calculated &-> (array_obj_ref_291_word_addrgen)
        array_obj_ref_291_word_address_calculated <-& (array_obj_ref_291_word_addrgen)
        ;;[array_obj_ref_291_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_291_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_291_trigger_ &-> (array_obj_ref_291_request)
        array_obj_ref_291_active_ <-& (array_obj_ref_291_request)
        array_obj_ref_291_active_ &-> (array_obj_ref_291_complete)
        array_obj_ref_291_completed_ <-& (array_obj_ref_291_complete)
        array_obj_ref_291_trigger_ <-& (array_obj_ref_291_word_address_calculated)
        binary_293_active_ <-& (array_obj_ref_291_completed_)
        ;;[binary_293_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_293_active_ &-> (binary_293_complete)
        binary_293_completed_ <-& (binary_293_complete)
        // (imm << 8 )
        $T[binary_296_active_] 
        $T[binary_296_trigger_] 
        $T[binary_296_completed_] 
        binary_296_active_ <-& (binary_296_trigger_)
        // imm
        // implicit reference
        $T[simple_obj_ref_294_completed_] 
        binary_296_active_ <-& (simple_obj_ref_294_completed_)
        ;;[binary_296_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_296_active_ &-> (binary_296_complete)
        binary_296_completed_ <-& (binary_296_complete)
        binary_297_active_ <-& (binary_293_completed_)
        binary_297_active_ <-& (binary_296_completed_)
        ;;[binary_297_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_297_active_ &-> (binary_297_complete)
        binary_297_completed_ <-& (binary_297_complete)
        assign_stmt_298_active_ <-& (binary_297_completed_)
        // reg[r1]
        $T[array_obj_ref_289_trigger_] 
        $T[array_obj_ref_289_active_] 
        $T[array_obj_ref_289_completed_] 
        $T[array_obj_ref_289_root_address_calculated] 
        $T[array_obj_ref_289_word_address_calculated] 
        $T[array_obj_ref_289_root_address_calculated] 
        $T[array_obj_ref_289_indices_scaled] 
        $T[array_obj_ref_289_offset_calculated] 
        $T[array_obj_ref_289_index_computed_0] 
        $T[array_obj_ref_289_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_288_completed_] 
        array_obj_ref_289_index_computed_0 <-& (simple_obj_ref_288_completed_)
        ;;[array_obj_ref_289_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_289_index_computed_0 &-> (array_obj_ref_289_index_resize_0)
        array_obj_ref_289_index_resized_0 <-& (array_obj_ref_289_index_resize_0)
        ;;[array_obj_ref_289_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_289_index_resized_0 &-> (array_obj_ref_289_index_scale_0)
        array_obj_ref_289_indices_scaled <-& (array_obj_ref_289_index_scale_0)
        ;;[array_obj_ref_289_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_289_indices_scaled &-> (array_obj_ref_289_add_indices)
        array_obj_ref_289_offset_calculated <-& (array_obj_ref_289_add_indices)
        ;;[array_obj_ref_289_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_289_offset_calculated &-> (array_obj_ref_289_base_plus_offset)
        array_obj_ref_289_root_address_calculated <-& (array_obj_ref_289_base_plus_offset)
        ;;[array_obj_ref_289_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_289_root_address_calculated &-> (array_obj_ref_289_word_addrgen)
        array_obj_ref_289_word_address_calculated <-& (array_obj_ref_289_word_addrgen)
        ;;[array_obj_ref_289_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_289_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_289_trigger_ &-> (array_obj_ref_289_request)
        array_obj_ref_289_active_ <-& (array_obj_ref_289_request)
        array_obj_ref_289_active_ &-> (array_obj_ref_289_complete)
        array_obj_ref_289_completed_ <-& (array_obj_ref_289_complete)
        array_obj_ref_289_trigger_ <-& (array_obj_ref_289_word_address_calculated)
        array_obj_ref_289_trigger_ <-& (assign_stmt_298_active_)
        assign_stmt_298_completed_ <-& (array_obj_ref_289_completed_)
        // load-store dependencies..
        // reg[r1](load) -> reg[r1](store)
        array_obj_ref_289_trigger_ <-& (array_obj_ref_291_active_)
      }
      assign_stmt_298__entry__ |-> (assign_stmt_298)
      assign_stmt_298__exit__ <-| (assign_stmt_298)
      ::[assign_stmt_305] 
      {
        // 		reg[r1] := reg[r2]
        //  file processorSuper.aa, line 180
        $T[assign_stmt_305_active_] 
        $T[assign_stmt_305_completed_] 
        // reg[r2]
        $T[array_obj_ref_304_trigger_] 
        $T[array_obj_ref_304_active_] 
        $T[array_obj_ref_304_completed_] 
        $T[array_obj_ref_304_root_address_calculated] 
        $T[array_obj_ref_304_word_address_calculated] 
        $T[array_obj_ref_304_root_address_calculated] 
        $T[array_obj_ref_304_indices_scaled] 
        $T[array_obj_ref_304_offset_calculated] 
        $T[array_obj_ref_304_index_computed_0] 
        $T[array_obj_ref_304_index_resized_0] 
        // r2
        // implicit reference
        $T[simple_obj_ref_303_completed_] 
        array_obj_ref_304_index_computed_0 <-& (simple_obj_ref_303_completed_)
        ;;[array_obj_ref_304_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_304_index_computed_0 &-> (array_obj_ref_304_index_resize_0)
        array_obj_ref_304_index_resized_0 <-& (array_obj_ref_304_index_resize_0)
        ;;[array_obj_ref_304_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_304_index_resized_0 &-> (array_obj_ref_304_index_scale_0)
        array_obj_ref_304_indices_scaled <-& (array_obj_ref_304_index_scale_0)
        ;;[array_obj_ref_304_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_304_indices_scaled &-> (array_obj_ref_304_add_indices)
        array_obj_ref_304_offset_calculated <-& (array_obj_ref_304_add_indices)
        ;;[array_obj_ref_304_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_304_offset_calculated &-> (array_obj_ref_304_base_plus_offset)
        array_obj_ref_304_root_address_calculated <-& (array_obj_ref_304_base_plus_offset)
        ;;[array_obj_ref_304_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_304_root_address_calculated &-> (array_obj_ref_304_word_addrgen)
        array_obj_ref_304_word_address_calculated <-& (array_obj_ref_304_word_addrgen)
        ;;[array_obj_ref_304_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_304_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_304_trigger_ &-> (array_obj_ref_304_request)
        array_obj_ref_304_active_ <-& (array_obj_ref_304_request)
        array_obj_ref_304_active_ &-> (array_obj_ref_304_complete)
        array_obj_ref_304_completed_ <-& (array_obj_ref_304_complete)
        array_obj_ref_304_trigger_ <-& (array_obj_ref_304_word_address_calculated)
        assign_stmt_305_active_ <-& (array_obj_ref_304_completed_)
        // reg[r1]
        $T[array_obj_ref_302_trigger_] 
        $T[array_obj_ref_302_active_] 
        $T[array_obj_ref_302_completed_] 
        $T[array_obj_ref_302_root_address_calculated] 
        $T[array_obj_ref_302_word_address_calculated] 
        $T[array_obj_ref_302_root_address_calculated] 
        $T[array_obj_ref_302_indices_scaled] 
        $T[array_obj_ref_302_offset_calculated] 
        $T[array_obj_ref_302_index_computed_0] 
        $T[array_obj_ref_302_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_301_completed_] 
        array_obj_ref_302_index_computed_0 <-& (simple_obj_ref_301_completed_)
        ;;[array_obj_ref_302_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_302_index_computed_0 &-> (array_obj_ref_302_index_resize_0)
        array_obj_ref_302_index_resized_0 <-& (array_obj_ref_302_index_resize_0)
        ;;[array_obj_ref_302_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_302_index_resized_0 &-> (array_obj_ref_302_index_scale_0)
        array_obj_ref_302_indices_scaled <-& (array_obj_ref_302_index_scale_0)
        ;;[array_obj_ref_302_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_302_indices_scaled &-> (array_obj_ref_302_add_indices)
        array_obj_ref_302_offset_calculated <-& (array_obj_ref_302_add_indices)
        ;;[array_obj_ref_302_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_302_offset_calculated &-> (array_obj_ref_302_base_plus_offset)
        array_obj_ref_302_root_address_calculated <-& (array_obj_ref_302_base_plus_offset)
        ;;[array_obj_ref_302_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_302_root_address_calculated &-> (array_obj_ref_302_word_addrgen)
        array_obj_ref_302_word_address_calculated <-& (array_obj_ref_302_word_addrgen)
        ;;[array_obj_ref_302_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_302_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_302_trigger_ &-> (array_obj_ref_302_request)
        array_obj_ref_302_active_ <-& (array_obj_ref_302_request)
        array_obj_ref_302_active_ &-> (array_obj_ref_302_complete)
        array_obj_ref_302_completed_ <-& (array_obj_ref_302_complete)
        array_obj_ref_302_trigger_ <-& (array_obj_ref_302_word_address_calculated)
        array_obj_ref_302_trigger_ <-& (assign_stmt_305_active_)
        assign_stmt_305_completed_ <-& (array_obj_ref_302_completed_)
        // load-store dependencies..
        // reg[r2](load) -> reg[r1](store)
        array_obj_ref_302_trigger_ <-& (array_obj_ref_304_active_)
      }
      assign_stmt_305__entry__ |-> (assign_stmt_305)
      assign_stmt_305__exit__ <-| (assign_stmt_305)
      ::[assign_stmt_313] 
      {
        // 		next_pc := mem[(pc + 1 )]
        //  file processorSuper.aa, line 185
        $T[assign_stmt_313_active_] 
        $T[assign_stmt_313_completed_] 
        // mem[(pc + 1 )]
        $T[array_obj_ref_312_trigger_] 
        $T[array_obj_ref_312_active_] 
        $T[array_obj_ref_312_completed_] 
        $T[array_obj_ref_312_root_address_calculated] 
        $T[array_obj_ref_312_word_address_calculated] 
        $T[array_obj_ref_312_root_address_calculated] 
        $T[array_obj_ref_312_indices_scaled] 
        $T[array_obj_ref_312_offset_calculated] 
        $T[array_obj_ref_312_index_computed_0] 
        $T[array_obj_ref_312_index_resized_0] 
        // (pc + 1 )
        $T[binary_311_active_] 
        $T[binary_311_trigger_] 
        $T[binary_311_completed_] 
        binary_311_active_ <-& (binary_311_trigger_)
        // pc
        // implicit reference
        $T[simple_obj_ref_309_completed_] 
        binary_311_active_ <-& (simple_obj_ref_309_completed_)
        ;;[binary_311_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_311_active_ &-> (binary_311_complete)
        binary_311_completed_ <-& (binary_311_complete)
        array_obj_ref_312_index_computed_0 <-& (binary_311_completed_)
        ;;[array_obj_ref_312_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_312_index_computed_0 &-> (array_obj_ref_312_index_resize_0)
        array_obj_ref_312_index_resized_0 <-& (array_obj_ref_312_index_resize_0)
        ;;[array_obj_ref_312_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_312_index_resized_0 &-> (array_obj_ref_312_index_scale_0)
        array_obj_ref_312_indices_scaled <-& (array_obj_ref_312_index_scale_0)
        ;;[array_obj_ref_312_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_312_indices_scaled &-> (array_obj_ref_312_add_indices)
        array_obj_ref_312_offset_calculated <-& (array_obj_ref_312_add_indices)
        ;;[array_obj_ref_312_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_312_offset_calculated &-> (array_obj_ref_312_base_plus_offset)
        array_obj_ref_312_root_address_calculated <-& (array_obj_ref_312_base_plus_offset)
        ;;[array_obj_ref_312_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_312_root_address_calculated &-> (array_obj_ref_312_word_addrgen)
        array_obj_ref_312_word_address_calculated <-& (array_obj_ref_312_word_addrgen)
        ;;[array_obj_ref_312_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_312_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_312_trigger_ &-> (array_obj_ref_312_request)
        array_obj_ref_312_active_ <-& (array_obj_ref_312_request)
        array_obj_ref_312_active_ &-> (array_obj_ref_312_complete)
        array_obj_ref_312_completed_ <-& (array_obj_ref_312_complete)
        array_obj_ref_312_trigger_ <-& (array_obj_ref_312_word_address_calculated)
        assign_stmt_313_active_ <-& (array_obj_ref_312_completed_)
        // next_pc
        $T[simple_obj_ref_308_trigger_] 
        $T[simple_obj_ref_308_completed_] 
        ;;[simple_obj_ref_308_complete] 
        {
          // pipe write next_pc
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_308_completed_ <-& (simple_obj_ref_308_complete)
        simple_obj_ref_308_trigger_ &-> (simple_obj_ref_308_complete)
        simple_obj_ref_308_trigger_ <-& (assign_stmt_313_active_)
        assign_stmt_313_completed_ <-& (simple_obj_ref_308_completed_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe next_pc
      }
      assign_stmt_313__entry__ |-> (assign_stmt_313)
      assign_stmt_313__exit__ <-| (assign_stmt_313)
      ::[assign_stmt_323] 
      {
        // 		next_pc := ((pc + offs) + reg[r1])
        //  file processorSuper.aa, line 190
        $T[assign_stmt_323_active_] 
        $T[assign_stmt_323_completed_] 
        // ((pc + offs) + reg[r1])
        $T[binary_322_active_] 
        $T[binary_322_trigger_] 
        $T[binary_322_completed_] 
        binary_322_active_ <-& (binary_322_trigger_)
        // (pc + offs)
        $T[binary_319_active_] 
        $T[binary_319_trigger_] 
        $T[binary_319_completed_] 
        binary_319_active_ <-& (binary_319_trigger_)
        // pc
        // implicit reference
        $T[simple_obj_ref_317_completed_] 
        // offs
        // implicit reference
        $T[simple_obj_ref_318_completed_] 
        binary_319_active_ <-& (simple_obj_ref_317_completed_)
        binary_319_active_ <-& (simple_obj_ref_318_completed_)
        ;;[binary_319_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_319_active_ &-> (binary_319_complete)
        binary_319_completed_ <-& (binary_319_complete)
        // reg[r1]
        $T[array_obj_ref_321_trigger_] 
        $T[array_obj_ref_321_active_] 
        $T[array_obj_ref_321_completed_] 
        $T[array_obj_ref_321_root_address_calculated] 
        $T[array_obj_ref_321_word_address_calculated] 
        $T[array_obj_ref_321_root_address_calculated] 
        $T[array_obj_ref_321_indices_scaled] 
        $T[array_obj_ref_321_offset_calculated] 
        $T[array_obj_ref_321_index_computed_0] 
        $T[array_obj_ref_321_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_320_completed_] 
        array_obj_ref_321_index_computed_0 <-& (simple_obj_ref_320_completed_)
        ;;[array_obj_ref_321_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_321_index_computed_0 &-> (array_obj_ref_321_index_resize_0)
        array_obj_ref_321_index_resized_0 <-& (array_obj_ref_321_index_resize_0)
        ;;[array_obj_ref_321_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_321_index_resized_0 &-> (array_obj_ref_321_index_scale_0)
        array_obj_ref_321_indices_scaled <-& (array_obj_ref_321_index_scale_0)
        ;;[array_obj_ref_321_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_321_indices_scaled &-> (array_obj_ref_321_add_indices)
        array_obj_ref_321_offset_calculated <-& (array_obj_ref_321_add_indices)
        ;;[array_obj_ref_321_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_321_offset_calculated &-> (array_obj_ref_321_base_plus_offset)
        array_obj_ref_321_root_address_calculated <-& (array_obj_ref_321_base_plus_offset)
        ;;[array_obj_ref_321_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_321_root_address_calculated &-> (array_obj_ref_321_word_addrgen)
        array_obj_ref_321_word_address_calculated <-& (array_obj_ref_321_word_addrgen)
        ;;[array_obj_ref_321_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_321_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_321_trigger_ &-> (array_obj_ref_321_request)
        array_obj_ref_321_active_ <-& (array_obj_ref_321_request)
        array_obj_ref_321_active_ &-> (array_obj_ref_321_complete)
        array_obj_ref_321_completed_ <-& (array_obj_ref_321_complete)
        array_obj_ref_321_trigger_ <-& (array_obj_ref_321_word_address_calculated)
        binary_322_active_ <-& (binary_319_completed_)
        binary_322_active_ <-& (array_obj_ref_321_completed_)
        ;;[binary_322_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_322_active_ &-> (binary_322_complete)
        binary_322_completed_ <-& (binary_322_complete)
        assign_stmt_323_active_ <-& (binary_322_completed_)
        // next_pc
        $T[simple_obj_ref_316_trigger_] 
        $T[simple_obj_ref_316_completed_] 
        ;;[simple_obj_ref_316_complete] 
        {
          // pipe write next_pc
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_316_completed_ <-& (simple_obj_ref_316_complete)
        simple_obj_ref_316_trigger_ &-> (simple_obj_ref_316_complete)
        simple_obj_ref_316_trigger_ <-& (assign_stmt_323_active_)
        assign_stmt_323_completed_ <-& (simple_obj_ref_316_completed_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe next_pc
      }
      assign_stmt_323__entry__ |-> (assign_stmt_323)
      assign_stmt_323__exit__ <-| (assign_stmt_323)
      // if-statement  
      //  file processorSuper.aa, line 195
      ;;[if_stmt_326_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_326__entry__ |-> (if_stmt_326_dead_link)
      if_stmt_326__exit__ <-| (if_stmt_326_dead_link)
      ;;[if_stmt_326_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // (reg[r1] == 0 )
        ;;[binary_330] 
        {
          // binary expression 
          ||[binary_330_inputs] 
          {
            // reg[r1]
            ;;[array_obj_ref_328] 
            {
              // load 
              ;;[array_obj_ref_328_addr_gen] 
              {
                ||[scale_indices] 
                {
                  ;;[idx_0] 
                  {
                    $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
                    $T [scale_rename_req] $T [scale_rename_ack] // rename 
                  }
                }
                ;;[add_indices] 
                {
                  $T [final_index_req] $T [final_index_ack] // rename
                }
                $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
                $T [root_rename_req] $T [root_rename_ack]
              }
              ;;[array_obj_ref_328_read] 
              {
                ||[word_access] 
                {
                  ;;[word_access_0] 
                  {
                    $T [rr] $T [ra] $T [cr] $T [ca]
                  }
                }
                $T [merge_req] $T [merge_ack]
              }
            }
          }
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        $T [branch_req] 
      }
      if_stmt_326__entry__ |-> (if_stmt_326_eval_test)
      $P [binary_330_place]
      binary_330_place <-| (if_stmt_326_eval_test)
      ;;[if_stmt_326_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_326_else_link] 
      {
        $T [else_choice_transition] 
      }
      binary_330_place |-> (if_stmt_326_if_link if_stmt_326_else_link)
      $P [assign_stmt_335__entry__] 
      $P [assign_stmt_335__exit__] 
      ::[assign_stmt_335] 
      {
        // 			next_pc := (pc + offs)
        //  file processorSuper.aa, line 196
        $T[assign_stmt_335_active_] 
        $T[assign_stmt_335_completed_] 
        // (pc + offs)
        $T[binary_334_active_] 
        $T[binary_334_trigger_] 
        $T[binary_334_completed_] 
        binary_334_active_ <-& (binary_334_trigger_)
        // pc
        // implicit reference
        $T[simple_obj_ref_332_completed_] 
        // offs
        // implicit reference
        $T[simple_obj_ref_333_completed_] 
        binary_334_active_ <-& (simple_obj_ref_332_completed_)
        binary_334_active_ <-& (simple_obj_ref_333_completed_)
        ;;[binary_334_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_334_active_ &-> (binary_334_complete)
        binary_334_completed_ <-& (binary_334_complete)
        assign_stmt_335_active_ <-& (binary_334_completed_)
        // next_pc
        $T[simple_obj_ref_331_trigger_] 
        $T[simple_obj_ref_331_completed_] 
        ;;[simple_obj_ref_331_complete] 
        {
          // pipe write next_pc
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_331_completed_ <-& (simple_obj_ref_331_complete)
        simple_obj_ref_331_trigger_ &-> (simple_obj_ref_331_complete)
        simple_obj_ref_331_trigger_ <-& (assign_stmt_335_active_)
        assign_stmt_335_completed_ <-& (simple_obj_ref_331_completed_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe next_pc
      }
      assign_stmt_335__entry__ |-> (assign_stmt_335)
      assign_stmt_335__exit__ <-| (assign_stmt_335)
      assign_stmt_335__entry__ <-| (if_stmt_326_if_link)
      assign_stmt_335__exit__ |-> (if_stmt_326__exit__)
      $P [assign_stmt_341__entry__] 
      $P [assign_stmt_341__exit__] 
      ::[assign_stmt_341] 
      {
        // 			next_pc := (pc + 1 )
        //  file processorSuper.aa, line 198
        $T[assign_stmt_341_active_] 
        $T[assign_stmt_341_completed_] 
        // (pc + 1 )
        $T[binary_340_active_] 
        $T[binary_340_trigger_] 
        $T[binary_340_completed_] 
        binary_340_active_ <-& (binary_340_trigger_)
        // pc
        // implicit reference
        $T[simple_obj_ref_338_completed_] 
        binary_340_active_ <-& (simple_obj_ref_338_completed_)
        ;;[binary_340_complete] 
        {
          // binary expression 
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        binary_340_active_ &-> (binary_340_complete)
        binary_340_completed_ <-& (binary_340_complete)
        assign_stmt_341_active_ <-& (binary_340_completed_)
        // next_pc
        $T[simple_obj_ref_337_trigger_] 
        $T[simple_obj_ref_337_completed_] 
        ;;[simple_obj_ref_337_complete] 
        {
          // pipe write next_pc
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_337_completed_ <-& (simple_obj_ref_337_complete)
        simple_obj_ref_337_trigger_ &-> (simple_obj_ref_337_complete)
        simple_obj_ref_337_trigger_ <-& (assign_stmt_341_active_)
        assign_stmt_341_completed_ <-& (simple_obj_ref_337_completed_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe next_pc
      }
      assign_stmt_341__entry__ |-> (assign_stmt_341)
      assign_stmt_341__exit__ <-| (assign_stmt_341)
      assign_stmt_341__entry__ <-| (if_stmt_326_else_link)
      assign_stmt_341__exit__ |-> (if_stmt_326__exit__)
      ::[assign_stmt_348] 
      {
        // 		out_port := reg[r1]
        //  file processorSuper.aa, line 204
        $T[assign_stmt_348_active_] 
        $T[assign_stmt_348_completed_] 
        // reg[r1]
        $T[array_obj_ref_347_trigger_] 
        $T[array_obj_ref_347_active_] 
        $T[array_obj_ref_347_completed_] 
        $T[array_obj_ref_347_root_address_calculated] 
        $T[array_obj_ref_347_word_address_calculated] 
        $T[array_obj_ref_347_root_address_calculated] 
        $T[array_obj_ref_347_indices_scaled] 
        $T[array_obj_ref_347_offset_calculated] 
        $T[array_obj_ref_347_index_computed_0] 
        $T[array_obj_ref_347_index_resized_0] 
        // r1
        // implicit reference
        $T[simple_obj_ref_346_completed_] 
        array_obj_ref_347_index_computed_0 <-& (simple_obj_ref_346_completed_)
        ;;[array_obj_ref_347_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_347_index_computed_0 &-> (array_obj_ref_347_index_resize_0)
        array_obj_ref_347_index_resized_0 <-& (array_obj_ref_347_index_resize_0)
        ;;[array_obj_ref_347_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_347_index_resized_0 &-> (array_obj_ref_347_index_scale_0)
        array_obj_ref_347_indices_scaled <-& (array_obj_ref_347_index_scale_0)
        ;;[array_obj_ref_347_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_347_indices_scaled &-> (array_obj_ref_347_add_indices)
        array_obj_ref_347_offset_calculated <-& (array_obj_ref_347_add_indices)
        ;;[array_obj_ref_347_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_347_offset_calculated &-> (array_obj_ref_347_base_plus_offset)
        array_obj_ref_347_root_address_calculated <-& (array_obj_ref_347_base_plus_offset)
        ;;[array_obj_ref_347_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_347_root_address_calculated &-> (array_obj_ref_347_word_addrgen)
        array_obj_ref_347_word_address_calculated <-& (array_obj_ref_347_word_addrgen)
        ;;[array_obj_ref_347_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_347_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_347_trigger_ &-> (array_obj_ref_347_request)
        array_obj_ref_347_active_ <-& (array_obj_ref_347_request)
        array_obj_ref_347_active_ &-> (array_obj_ref_347_complete)
        array_obj_ref_347_completed_ <-& (array_obj_ref_347_complete)
        array_obj_ref_347_trigger_ <-& (array_obj_ref_347_word_address_calculated)
        assign_stmt_348_active_ <-& (array_obj_ref_347_completed_)
        // out_port
        $T[simple_obj_ref_345_trigger_] 
        $T[simple_obj_ref_345_completed_] 
        ;;[simple_obj_ref_345_complete] 
        {
          // pipe write out_port
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_345_completed_ <-& (simple_obj_ref_345_complete)
        simple_obj_ref_345_trigger_ &-> (simple_obj_ref_345_complete)
        simple_obj_ref_345_trigger_ <-& (assign_stmt_348_active_)
        assign_stmt_348_completed_ <-& (simple_obj_ref_345_completed_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe out_port
      }
      assign_stmt_348__entry__ |-> (assign_stmt_348)
      assign_stmt_348__exit__ <-| (assign_stmt_348)
      // control-path for merge  
      //  file processorSuper.aa, line 103
      ;;[merge_stmt_161_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_161__entry__ |-> (merge_stmt_161_dead_link)
      merge_stmt_161__exit__ <-| (merge_stmt_161_dead_link)
      //---------------------   merge statement  file processorSuper.aa, line 103  --------------------------
      ||[merge_stmt_161__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_161__entry__ |-> (merge_stmt_161__entry___PhiReq)
      ||[loopback_PhiReq] 
      {
        // no phi statements in merge..
      }
      loopback |-> (loopback_PhiReq)
      $P [merge_stmt_161_PhiReqMerge] 
      merge_stmt_161_PhiReqMerge <-| ( merge_stmt_161__entry___PhiReq  loopback_PhiReq )
      ||[merge_stmt_161_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_161_PhiReqMerge |-> (merge_stmt_161_PhiAck)
      merge_stmt_161__exit__  <-| (merge_stmt_161_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 103  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 143
      ;;[merge_stmt_229_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_229__entry__ |-> (merge_stmt_229_dead_link)
      merge_stmt_229__exit__ <-| (merge_stmt_229_dead_link)
      //---------------------   merge statement  file processorSuper.aa, line 143  --------------------------
      ||[bb_0_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_1 |-> (bb_0_bb_1_PhiReq)
      $P [merge_stmt_229_PhiReqMerge] 
      merge_stmt_229_PhiReqMerge <-| ( bb_0_bb_1_PhiReq )
      ||[merge_stmt_229_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_229_PhiReqMerge |-> (merge_stmt_229_PhiAck)
      merge_stmt_229__exit__  <-| (merge_stmt_229_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 143  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 148
      //---------------------   merge statement  file processorSuper.aa, line 148  --------------------------
      ||[bb_0_bb_2_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_2 |-> (bb_0_bb_2_PhiReq)
      $P [merge_stmt_234_PhiReqMerge] 
      merge_stmt_234_PhiReqMerge <-| ( bb_0_bb_2_PhiReq )
      ||[merge_stmt_234_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_234_PhiReqMerge |-> (merge_stmt_234_PhiAck)
      merge_stmt_234__exit__  <-| (merge_stmt_234_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 148  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 153
      //---------------------   merge statement  file processorSuper.aa, line 153  --------------------------
      ||[bb_0_bb_3_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_3 |-> (bb_0_bb_3_PhiReq)
      $P [merge_stmt_244_PhiReqMerge] 
      merge_stmt_244_PhiReqMerge <-| ( bb_0_bb_3_PhiReq )
      ||[merge_stmt_244_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_244_PhiReqMerge |-> (merge_stmt_244_PhiAck)
      merge_stmt_244__exit__  <-| (merge_stmt_244_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 153  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 158
      //---------------------   merge statement  file processorSuper.aa, line 158  --------------------------
      ||[bb_0_bb_4_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_4 |-> (bb_0_bb_4_PhiReq)
      $P [merge_stmt_254_PhiReqMerge] 
      merge_stmt_254_PhiReqMerge <-| ( bb_0_bb_4_PhiReq )
      ||[merge_stmt_254_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_254_PhiReqMerge |-> (merge_stmt_254_PhiAck)
      merge_stmt_254__exit__  <-| (merge_stmt_254_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 158  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 163
      //---------------------   merge statement  file processorSuper.aa, line 163  --------------------------
      ||[bb_0_bb_5_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_5 |-> (bb_0_bb_5_PhiReq)
      $P [merge_stmt_265_PhiReqMerge] 
      merge_stmt_265_PhiReqMerge <-| ( bb_0_bb_5_PhiReq )
      ||[merge_stmt_265_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_265_PhiReqMerge |-> (merge_stmt_265_PhiAck)
      merge_stmt_265__exit__  <-| (merge_stmt_265_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 163  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 168
      //---------------------   merge statement  file processorSuper.aa, line 168  --------------------------
      ||[bb_0_bb_6_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_6 |-> (bb_0_bb_6_PhiReq)
      $P [merge_stmt_276_PhiReqMerge] 
      merge_stmt_276_PhiReqMerge <-| ( bb_0_bb_6_PhiReq )
      ||[merge_stmt_276_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_276_PhiReqMerge |-> (merge_stmt_276_PhiAck)
      merge_stmt_276__exit__  <-| (merge_stmt_276_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 168  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 173
      //---------------------   merge statement  file processorSuper.aa, line 173  --------------------------
      ||[bb_0_bb_7_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_7 |-> (bb_0_bb_7_PhiReq)
      $P [merge_stmt_287_PhiReqMerge] 
      merge_stmt_287_PhiReqMerge <-| ( bb_0_bb_7_PhiReq )
      ||[merge_stmt_287_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_287_PhiReqMerge |-> (merge_stmt_287_PhiAck)
      merge_stmt_287__exit__  <-| (merge_stmt_287_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 173  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 178
      //---------------------   merge statement  file processorSuper.aa, line 178  --------------------------
      ||[bb_0_bb_8_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_8 |-> (bb_0_bb_8_PhiReq)
      $P [merge_stmt_300_PhiReqMerge] 
      merge_stmt_300_PhiReqMerge <-| ( bb_0_bb_8_PhiReq )
      ||[merge_stmt_300_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_300_PhiReqMerge |-> (merge_stmt_300_PhiAck)
      merge_stmt_300__exit__  <-| (merge_stmt_300_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 178  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 183
      //---------------------   merge statement  file processorSuper.aa, line 183  --------------------------
      ||[bb_0_bb_9_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_9 |-> (bb_0_bb_9_PhiReq)
      $P [merge_stmt_307_PhiReqMerge] 
      merge_stmt_307_PhiReqMerge <-| ( bb_0_bb_9_PhiReq )
      ||[merge_stmt_307_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_307_PhiReqMerge |-> (merge_stmt_307_PhiAck)
      merge_stmt_307__exit__  <-| (merge_stmt_307_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 183  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 188
      //---------------------   merge statement  file processorSuper.aa, line 188  --------------------------
      ||[bb_0_bb_10_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_10 |-> (bb_0_bb_10_PhiReq)
      $P [merge_stmt_315_PhiReqMerge] 
      merge_stmt_315_PhiReqMerge <-| ( bb_0_bb_10_PhiReq )
      ||[merge_stmt_315_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_315_PhiReqMerge |-> (merge_stmt_315_PhiAck)
      merge_stmt_315__exit__  <-| (merge_stmt_315_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 188  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 193
      //---------------------   merge statement  file processorSuper.aa, line 193  --------------------------
      ||[bb_0_bb_11_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_11 |-> (bb_0_bb_11_PhiReq)
      $P [merge_stmt_325_PhiReqMerge] 
      merge_stmt_325_PhiReqMerge <-| ( bb_0_bb_11_PhiReq )
      ||[merge_stmt_325_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_325_PhiReqMerge |-> (merge_stmt_325_PhiAck)
      merge_stmt_325__exit__  <-| (merge_stmt_325_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 193  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 202
      //---------------------   merge statement  file processorSuper.aa, line 202  --------------------------
      ||[bb_0_bb_13_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_13 |-> (bb_0_bb_13_PhiReq)
      $P [merge_stmt_344_PhiReqMerge] 
      merge_stmt_344_PhiReqMerge <-| ( bb_0_bb_13_PhiReq )
      ||[merge_stmt_344_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_344_PhiReqMerge |-> (merge_stmt_344_PhiAck)
      merge_stmt_344__exit__  <-| (merge_stmt_344_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 202  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 207
      //---------------------   merge statement  file processorSuper.aa, line 207  --------------------------
      ||[bb_0_bb_14_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_0_bb_14 |-> (bb_0_bb_14_PhiReq)
      $P [merge_stmt_350_PhiReqMerge] 
      merge_stmt_350_PhiReqMerge <-| ( bb_0_bb_14_PhiReq )
      ||[merge_stmt_350_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_350_PhiReqMerge |-> (merge_stmt_350_PhiAck)
      merge_stmt_350__exit__  <-| (merge_stmt_350_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 207  --------------------------
      // control-path for merge  
      //  file processorSuper.aa, line 211
      //---------------------   merge statement  file processorSuper.aa, line 211  --------------------------
      ||[bb_10_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_10_UnifiedReturnBlock |-> (bb_10_UnifiedReturnBlock_PhiReq)
      ||[bb_12_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_12_UnifiedReturnBlock |-> (bb_12_UnifiedReturnBlock_PhiReq)
      ||[bb_13_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_13_UnifiedReturnBlock |-> (bb_13_UnifiedReturnBlock_PhiReq)
      ||[bb_14_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_14_UnifiedReturnBlock |-> (bb_14_UnifiedReturnBlock_PhiReq)
      ||[bb_1_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_UnifiedReturnBlock |-> (bb_1_UnifiedReturnBlock_PhiReq)
      ||[bb_2_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_2_UnifiedReturnBlock |-> (bb_2_UnifiedReturnBlock_PhiReq)
      ||[bb_3_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_3_UnifiedReturnBlock |-> (bb_3_UnifiedReturnBlock_PhiReq)
      ||[bb_4_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_4_UnifiedReturnBlock |-> (bb_4_UnifiedReturnBlock_PhiReq)
      ||[bb_5_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_5_UnifiedReturnBlock |-> (bb_5_UnifiedReturnBlock_PhiReq)
      ||[bb_6_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_6_UnifiedReturnBlock |-> (bb_6_UnifiedReturnBlock_PhiReq)
      ||[bb_7_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_7_UnifiedReturnBlock |-> (bb_7_UnifiedReturnBlock_PhiReq)
      ||[bb_8_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_8_UnifiedReturnBlock |-> (bb_8_UnifiedReturnBlock_PhiReq)
      ||[bb_9_UnifiedReturnBlock_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_9_UnifiedReturnBlock |-> (bb_9_UnifiedReturnBlock_PhiReq)
      $P [merge_stmt_352_PhiReqMerge] 
      merge_stmt_352_PhiReqMerge <-| ( bb_10_UnifiedReturnBlock_PhiReq  bb_12_UnifiedReturnBlock_PhiReq  bb_13_UnifiedReturnBlock_PhiReq  bb_14_UnifiedReturnBlock_PhiReq  bb_1_UnifiedReturnBlock_PhiReq  bb_2_UnifiedReturnBlock_PhiReq  bb_3_UnifiedReturnBlock_PhiReq  bb_4_UnifiedReturnBlock_PhiReq  bb_5_UnifiedReturnBlock_PhiReq  bb_6_UnifiedReturnBlock_PhiReq  bb_7_UnifiedReturnBlock_PhiReq  bb_8_UnifiedReturnBlock_PhiReq  bb_9_UnifiedReturnBlock_PhiReq )
      ||[merge_stmt_352_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_352_PhiReqMerge |-> (merge_stmt_352_PhiAck)
      merge_stmt_352__exit__  <-| (merge_stmt_352_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 211  --------------------------
      merge_stmt_161__entry__ <-| (branch_block_stmt_160__entry__)
      parallel_block_stmt_162__entry__ <-| (merge_stmt_161__exit__)
      switch_stmt_189__entry__ <-| (parallel_block_stmt_162__exit__)
      merge_stmt_229__entry__ <-| (switch_stmt_189__exit__)
      assign_stmt_232__entry__ <-| (merge_stmt_229__exit__)
      bb_1_UnifiedReturnBlock <-| (assign_stmt_232__exit__)
      assign_stmt_242__entry__ <-| (merge_stmt_234__exit__)
      bb_2_UnifiedReturnBlock <-| (assign_stmt_242__exit__)
      assign_stmt_252__entry__ <-| (merge_stmt_244__exit__)
      bb_3_UnifiedReturnBlock <-| (assign_stmt_252__exit__)
      assign_stmt_263__entry__ <-| (merge_stmt_254__exit__)
      bb_4_UnifiedReturnBlock <-| (assign_stmt_263__exit__)
      assign_stmt_274__entry__ <-| (merge_stmt_265__exit__)
      bb_5_UnifiedReturnBlock <-| (assign_stmt_274__exit__)
      assign_stmt_285__entry__ <-| (merge_stmt_276__exit__)
      bb_6_UnifiedReturnBlock <-| (assign_stmt_285__exit__)
      assign_stmt_298__entry__ <-| (merge_stmt_287__exit__)
      bb_7_UnifiedReturnBlock <-| (assign_stmt_298__exit__)
      assign_stmt_305__entry__ <-| (merge_stmt_300__exit__)
      bb_8_UnifiedReturnBlock <-| (assign_stmt_305__exit__)
      assign_stmt_313__entry__ <-| (merge_stmt_307__exit__)
      bb_9_UnifiedReturnBlock <-| (assign_stmt_313__exit__)
      assign_stmt_323__entry__ <-| (merge_stmt_315__exit__)
      bb_10_UnifiedReturnBlock <-| (assign_stmt_323__exit__)
      if_stmt_326__entry__ <-| (merge_stmt_325__exit__)
      bb_12_UnifiedReturnBlock <-| (if_stmt_326__exit__)
      assign_stmt_348__entry__ <-| (merge_stmt_344__exit__)
      bb_13_UnifiedReturnBlock <-| (assign_stmt_348__exit__)
      bb_14_UnifiedReturnBlock <-| (merge_stmt_350__exit__)
      loopback <-| (merge_stmt_352__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 103
    // constant-object-declarations for block %execute%body%rp
    //  file processorSuper.aa, line 104
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 143
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 148
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 153
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 158
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 163
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 168
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 173
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 178
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 183
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 188
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 193
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 202
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 207
    // constant-object-declarations for block %execute%body%
    //  file processorSuper.aa, line 211
    // constant-object-declarations for block %execute%body
    //  file processorSuper.aa, line 101
    // constant-object-declarations for block %execute
    //  file processorSuper.aa, line 96
    // constant-declarations for block %execute%body
    //  file processorSuper.aa, line 101
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 103
    // constant-declarations for block %execute%body%rp
    //  file processorSuper.aa, line 104
    // 0 
    $constant $W[expr_186_wire_constant] : $int<16> := _b0000000000000000// 0
    // reg[0 ]
    $constant $W[array_obj_ref_185_word_address_0] : $pointer<memory_space_1> := _b00000
    // constant-declarations  for switch  
    //  file processorSuper.aa, line 114
    // 0 
    $constant $W[expr_191_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[expr_194_wire_constant] : $int<16> := _b0000000000000001// 1
    // 2 
    $constant $W[expr_197_wire_constant] : $int<16> := _b0000000000000010// 2
    // 3 
    $constant $W[expr_200_wire_constant] : $int<16> := _b0000000000000011// 3
    // 4 
    $constant $W[expr_203_wire_constant] : $int<16> := _b0000000000000100// 4
    // 5 
    $constant $W[expr_206_wire_constant] : $int<16> := _b0000000000000101// 5
    // 6 
    $constant $W[expr_209_wire_constant] : $int<16> := _b0000000000000110// 6
    // 7 
    $constant $W[expr_212_wire_constant] : $int<16> := _b0000000000000111// 7
    // 8 
    $constant $W[expr_215_wire_constant] : $int<16> := _b0000000000001000// 8
    // 9 
    $constant $W[expr_218_wire_constant] : $int<16> := _b0000000000001001// 9
    // 10 
    $constant $W[expr_221_wire_constant] : $int<16> := _b0000000000001010// 10
    // 14 
    $constant $W[expr_224_wire_constant] : $int<16> := _b0000000000001110// 14
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 143
    // 1 
    $constant $W[expr_231_wire_constant] : $int<16> := _b0000000000000001// 1
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 148
    // reg[r2]
    $constant $W[array_obj_ref_238_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_238_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_238_word_offset_0] : $int<5> := _b00000// 0
    // reg[r3]
    $constant $W[array_obj_ref_240_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_240_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_240_word_offset_0] : $int<5> := _b00000// 0
    // reg[r1]
    $constant $W[array_obj_ref_236_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_236_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_236_word_offset_0] : $int<5> := _b00000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 153
    // reg[r2]
    $constant $W[array_obj_ref_248_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_248_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_248_word_offset_0] : $int<5> := _b00000// 0
    // reg[r3]
    $constant $W[array_obj_ref_250_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_250_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_250_word_offset_0] : $int<5> := _b00000// 0
    // reg[r1]
    $constant $W[array_obj_ref_246_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_246_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_246_word_offset_0] : $int<5> := _b00000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 158
    // mem[(reg[r2] + reg[r3])]
    // reg[r2]
    $constant $W[array_obj_ref_258_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_258_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_258_word_offset_0] : $int<5> := _b00000// 0
    // reg[r3]
    $constant $W[array_obj_ref_260_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_260_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_260_word_offset_0] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_262_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_262_offset_scale_factor_0] : $int<7> := _b0000001// 1
    $constant $W[array_obj_ref_262_word_offset_0] : $int<7> := _b0000000// 0
    // reg[r1]
    $constant $W[array_obj_ref_256_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_256_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_256_word_offset_0] : $int<5> := _b00000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 163
    // reg[r1]
    $constant $W[array_obj_ref_273_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_273_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_273_word_offset_0] : $int<5> := _b00000// 0
    // mem[(reg[r2] + reg[r3])]
    // reg[r2]
    $constant $W[array_obj_ref_267_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_267_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_267_word_offset_0] : $int<5> := _b00000// 0
    // reg[r3]
    $constant $W[array_obj_ref_269_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_269_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_269_word_offset_0] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_271_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_271_offset_scale_factor_0] : $int<7> := _b0000001// 1
    $constant $W[array_obj_ref_271_word_offset_0] : $int<7> := _b0000000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 168
    // reg[r1]
    $constant $W[array_obj_ref_280_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_280_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_280_word_offset_0] : $int<5> := _b00000// 0
    // _b1111111100000000 
    $constant $W[expr_281_wire_constant] : $int<16> := _b1111111100000000// 65280
    // reg[r1]
    $constant $W[array_obj_ref_278_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_278_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_278_word_offset_0] : $int<5> := _b00000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 173
    // reg[r1]
    $constant $W[array_obj_ref_291_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_291_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_291_word_offset_0] : $int<5> := _b00000// 0
    // _b0000000011111111 
    $constant $W[expr_292_wire_constant] : $int<16> := _b0000000011111111// 255
    // 8 
    $constant $W[expr_295_wire_constant] : $int<16> := _b0000000000001000// 8
    // reg[r1]
    $constant $W[array_obj_ref_289_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_289_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_289_word_offset_0] : $int<5> := _b00000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 178
    // reg[r2]
    $constant $W[array_obj_ref_304_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_304_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_304_word_offset_0] : $int<5> := _b00000// 0
    // reg[r1]
    $constant $W[array_obj_ref_302_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_302_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_302_word_offset_0] : $int<5> := _b00000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 183
    // mem[(pc + 1 )]
    // 1 
    $constant $W[expr_310_wire_constant] : $int<16> := _b0000000000000001// 1
    $constant $W[array_obj_ref_312_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_312_offset_scale_factor_0] : $int<7> := _b0000001// 1
    $constant $W[array_obj_ref_312_word_offset_0] : $int<7> := _b0000000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 188
    // reg[r1]
    $constant $W[array_obj_ref_321_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_321_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_321_word_offset_0] : $int<5> := _b00000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 193
    // if-statement  
    //  file processorSuper.aa, line 195
    // reg[r1]
    $constant $W[array_obj_ref_328_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_328_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_328_word_offset_0] : $int<5> := _b00000// 0
    // 0 
    $constant $W[expr_329_wire_constant] : $int<16> := _b0000000000000000// 0
    // 1 
    $constant $W[expr_339_wire_constant] : $int<16> := _b0000000000000001// 1
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 202
    // reg[r1]
    $constant $W[array_obj_ref_347_resized_base_address] : $int<5> := _b00000// 0
    $constant $W[array_obj_ref_347_offset_scale_factor_0] : $int<5> := _b00001// 1
    $constant $W[array_obj_ref_347_word_offset_0] : $int<5> := _b00000// 0
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 207
    // constant-declarations for block %execute%body%
    //  file processorSuper.aa, line 211
    // block %execute%body
    //  file processorSuper.aa, line 101
    // block %execute%body%rp
    //  file processorSuper.aa, line 104
    // 			op := op_pipe
    //  file processorSuper.aa, line 105
    // op
    $W[op_165] : $int<16>
    // 			r1 := r1_pipe
    //  file processorSuper.aa, line 106
    // r1
    $W[r1_168] : $int<16>
    // 			r2 := r2_pipe
    //  file processorSuper.aa, line 107
    // r2
    $W[r2_171] : $int<16>
    // 			r3 := r3_pipe
    //  file processorSuper.aa, line 108
    // r3
    $W[r3_174] : $int<16>
    // 			imm := imm_pipe
    //  file processorSuper.aa, line 109
    // imm
    $W[imm_177] : $int<16>
    // 			offs := offs_pipe
    //  file processorSuper.aa, line 110
    // offs
    $W[offs_180] : $int<16>
    // 			pc := pc_to_execute
    //  file processorSuper.aa, line 111
    // pc
    $W[pc_183] : $int<16>
    // 			reg[0 ] := 0 
    //  file processorSuper.aa, line 112
    // reg[0 ]
    $W[array_obj_ref_185_data_0] : $int<16>
    // switch-statement  
    //  file processorSuper.aa, line 114
    $W[expr_191_wire_constant_cmp] : $int<1>
    $W[expr_194_wire_constant_cmp] : $int<1>
    $W[expr_197_wire_constant_cmp] : $int<1>
    $W[expr_200_wire_constant_cmp] : $int<1>
    $W[expr_203_wire_constant_cmp] : $int<1>
    $W[expr_206_wire_constant_cmp] : $int<1>
    $W[expr_209_wire_constant_cmp] : $int<1>
    $W[expr_212_wire_constant_cmp] : $int<1>
    $W[expr_215_wire_constant_cmp] : $int<1>
    $W[expr_218_wire_constant_cmp] : $int<1>
    $W[expr_221_wire_constant_cmp] : $int<1>
    $W[expr_224_wire_constant_cmp] : $int<1>
    // 		halt_pipe := 1 
    //  file processorSuper.aa, line 145
    // halt_pipe
    // 		reg[r1] := (reg[r2] + reg[r3])
    //  file processorSuper.aa, line 150
    // reg[r2]
    $intermediate $W[simple_obj_ref_237_resized] : $int<5>
    $intermediate $W[simple_obj_ref_237_scaled] : $int<5>
    $intermediate $W[array_obj_ref_238_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_238_root_address] : $int<5>
    $W[array_obj_ref_238_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_238_data_0] : $int<16>
    $W[array_obj_ref_238_wire] : $int<16>
    // reg[r3]
    $intermediate $W[simple_obj_ref_239_resized] : $int<5>
    $intermediate $W[simple_obj_ref_239_scaled] : $int<5>
    $intermediate $W[array_obj_ref_240_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_240_root_address] : $int<5>
    $W[array_obj_ref_240_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_240_data_0] : $int<16>
    $W[array_obj_ref_240_wire] : $int<16>
    // (reg[r2] + reg[r3])
    $intermediate $W[binary_241_wire] : $int<16>
    // reg[r1]
    $intermediate $W[simple_obj_ref_235_resized] : $int<5>
    $intermediate $W[simple_obj_ref_235_scaled] : $int<5>
    $intermediate $W[array_obj_ref_236_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_236_root_address] : $int<5>
    $W[array_obj_ref_236_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_236_data_0] : $int<16>
    // 		reg[r1] := (reg[r2] - reg[r3])
    //  file processorSuper.aa, line 155
    // reg[r2]
    $intermediate $W[simple_obj_ref_247_resized] : $int<5>
    $intermediate $W[simple_obj_ref_247_scaled] : $int<5>
    $intermediate $W[array_obj_ref_248_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_248_root_address] : $int<5>
    $W[array_obj_ref_248_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_248_data_0] : $int<16>
    $W[array_obj_ref_248_wire] : $int<16>
    // reg[r3]
    $intermediate $W[simple_obj_ref_249_resized] : $int<5>
    $intermediate $W[simple_obj_ref_249_scaled] : $int<5>
    $intermediate $W[array_obj_ref_250_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_250_root_address] : $int<5>
    $W[array_obj_ref_250_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_250_data_0] : $int<16>
    $W[array_obj_ref_250_wire] : $int<16>
    // (reg[r2] - reg[r3])
    $intermediate $W[binary_251_wire] : $int<16>
    // reg[r1]
    $intermediate $W[simple_obj_ref_245_resized] : $int<5>
    $intermediate $W[simple_obj_ref_245_scaled] : $int<5>
    $intermediate $W[array_obj_ref_246_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_246_root_address] : $int<5>
    $W[array_obj_ref_246_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_246_data_0] : $int<16>
    // 		reg[r1] := mem[(reg[r2] + reg[r3])]
    //  file processorSuper.aa, line 160
    // mem[(reg[r2] + reg[r3])]
    // reg[r2]
    $intermediate $W[simple_obj_ref_257_resized] : $int<5>
    $intermediate $W[simple_obj_ref_257_scaled] : $int<5>
    $intermediate $W[array_obj_ref_258_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_258_root_address] : $int<5>
    $W[array_obj_ref_258_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_258_data_0] : $int<16>
    $W[array_obj_ref_258_wire] : $int<16>
    // reg[r3]
    $intermediate $W[simple_obj_ref_259_resized] : $int<5>
    $intermediate $W[simple_obj_ref_259_scaled] : $int<5>
    $intermediate $W[array_obj_ref_260_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_260_root_address] : $int<5>
    $W[array_obj_ref_260_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_260_data_0] : $int<16>
    $W[array_obj_ref_260_wire] : $int<16>
    // (reg[r2] + reg[r3])
    $intermediate $W[binary_261_wire] : $int<16>
    $intermediate $W[binary_261_resized] : $int<7>
    $intermediate $W[binary_261_scaled] : $int<7>
    $intermediate $W[array_obj_ref_262_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_262_root_address] : $int<7>
    $W[array_obj_ref_262_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_262_data_0] : $int<16>
    $W[array_obj_ref_262_wire] : $int<16>
    // reg[r1]
    $intermediate $W[simple_obj_ref_255_resized] : $int<5>
    $intermediate $W[simple_obj_ref_255_scaled] : $int<5>
    $intermediate $W[array_obj_ref_256_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_256_root_address] : $int<5>
    $W[array_obj_ref_256_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_256_data_0] : $int<16>
    // 		mem[(reg[r2] + reg[r3])] := reg[r1]
    //  file processorSuper.aa, line 165
    // reg[r1]
    $intermediate $W[simple_obj_ref_272_resized] : $int<5>
    $intermediate $W[simple_obj_ref_272_scaled] : $int<5>
    $intermediate $W[array_obj_ref_273_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_273_root_address] : $int<5>
    $W[array_obj_ref_273_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_273_data_0] : $int<16>
    $W[array_obj_ref_273_wire] : $int<16>
    // mem[(reg[r2] + reg[r3])]
    // reg[r2]
    $intermediate $W[simple_obj_ref_266_resized] : $int<5>
    $intermediate $W[simple_obj_ref_266_scaled] : $int<5>
    $intermediate $W[array_obj_ref_267_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_267_root_address] : $int<5>
    $W[array_obj_ref_267_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_267_data_0] : $int<16>
    $W[array_obj_ref_267_wire] : $int<16>
    // reg[r3]
    $intermediate $W[simple_obj_ref_268_resized] : $int<5>
    $intermediate $W[simple_obj_ref_268_scaled] : $int<5>
    $intermediate $W[array_obj_ref_269_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_269_root_address] : $int<5>
    $W[array_obj_ref_269_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_269_data_0] : $int<16>
    $W[array_obj_ref_269_wire] : $int<16>
    // (reg[r2] + reg[r3])
    $intermediate $W[binary_270_wire] : $int<16>
    $intermediate $W[binary_270_resized] : $int<7>
    $intermediate $W[binary_270_scaled] : $int<7>
    $intermediate $W[array_obj_ref_271_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_271_root_address] : $int<7>
    $W[array_obj_ref_271_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_271_data_0] : $int<16>
    // 		reg[r1] := ((reg[r1] & _b1111111100000000 ) | imm)
    //  file processorSuper.aa, line 170
    // reg[r1]
    $intermediate $W[simple_obj_ref_279_resized] : $int<5>
    $intermediate $W[simple_obj_ref_279_scaled] : $int<5>
    $intermediate $W[array_obj_ref_280_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_280_root_address] : $int<5>
    $W[array_obj_ref_280_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_280_data_0] : $int<16>
    $W[array_obj_ref_280_wire] : $int<16>
    // (reg[r1] & _b1111111100000000 )
    $intermediate $W[binary_282_wire] : $int<16>
    // ((reg[r1] & _b1111111100000000 ) | imm)
    $intermediate $W[binary_284_wire] : $int<16>
    // reg[r1]
    $intermediate $W[simple_obj_ref_277_resized] : $int<5>
    $intermediate $W[simple_obj_ref_277_scaled] : $int<5>
    $intermediate $W[array_obj_ref_278_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_278_root_address] : $int<5>
    $W[array_obj_ref_278_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_278_data_0] : $int<16>
    // 		reg[r1] := ((reg[r1] & _b0000000011111111 ) | (imm << 8 ))
    //  file processorSuper.aa, line 175
    // reg[r1]
    $intermediate $W[simple_obj_ref_290_resized] : $int<5>
    $intermediate $W[simple_obj_ref_290_scaled] : $int<5>
    $intermediate $W[array_obj_ref_291_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_291_root_address] : $int<5>
    $W[array_obj_ref_291_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_291_data_0] : $int<16>
    $W[array_obj_ref_291_wire] : $int<16>
    // (reg[r1] & _b0000000011111111 )
    $intermediate $W[binary_293_wire] : $int<16>
    // (imm << 8 )
    $intermediate $W[binary_296_wire] : $int<16>
    // ((reg[r1] & _b0000000011111111 ) | (imm << 8 ))
    $intermediate $W[binary_297_wire] : $int<16>
    // reg[r1]
    $intermediate $W[simple_obj_ref_288_resized] : $int<5>
    $intermediate $W[simple_obj_ref_288_scaled] : $int<5>
    $intermediate $W[array_obj_ref_289_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_289_root_address] : $int<5>
    $W[array_obj_ref_289_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_289_data_0] : $int<16>
    // 		reg[r1] := reg[r2]
    //  file processorSuper.aa, line 180
    // reg[r2]
    $intermediate $W[simple_obj_ref_303_resized] : $int<5>
    $intermediate $W[simple_obj_ref_303_scaled] : $int<5>
    $intermediate $W[array_obj_ref_304_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_304_root_address] : $int<5>
    $W[array_obj_ref_304_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_304_data_0] : $int<16>
    $W[array_obj_ref_304_wire] : $int<16>
    // reg[r1]
    $intermediate $W[simple_obj_ref_301_resized] : $int<5>
    $intermediate $W[simple_obj_ref_301_scaled] : $int<5>
    $intermediate $W[array_obj_ref_302_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_302_root_address] : $int<5>
    $W[array_obj_ref_302_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_302_data_0] : $int<16>
    // 		next_pc := mem[(pc + 1 )]
    //  file processorSuper.aa, line 185
    // mem[(pc + 1 )]
    // (pc + 1 )
    $intermediate $W[binary_311_wire] : $int<16>
    $intermediate $W[binary_311_resized] : $int<7>
    $intermediate $W[binary_311_scaled] : $int<7>
    $intermediate $W[array_obj_ref_312_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_312_root_address] : $int<7>
    $W[array_obj_ref_312_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_312_data_0] : $int<16>
    $W[array_obj_ref_312_wire] : $int<16>
    // next_pc
    // 		next_pc := ((pc + offs) + reg[r1])
    //  file processorSuper.aa, line 190
    // (pc + offs)
    $intermediate $W[binary_319_wire] : $int<16>
    // reg[r1]
    $intermediate $W[simple_obj_ref_320_resized] : $int<5>
    $intermediate $W[simple_obj_ref_320_scaled] : $int<5>
    $intermediate $W[array_obj_ref_321_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_321_root_address] : $int<5>
    $W[array_obj_ref_321_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_321_data_0] : $int<16>
    $W[array_obj_ref_321_wire] : $int<16>
    // ((pc + offs) + reg[r1])
    $intermediate $W[binary_322_wire] : $int<16>
    // next_pc
    // if statement  
    //  file processorSuper.aa, line 195
    // reg[r1]
    $intermediate $W[simple_obj_ref_327_resized] : $int<5>
    $intermediate $W[simple_obj_ref_327_scaled] : $int<5>
    $intermediate $W[array_obj_ref_328_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_328_root_address] : $int<5>
    $W[array_obj_ref_328_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_328_data_0] : $int<16>
    $W[array_obj_ref_328_wire] : $int<16>
    // (reg[r1] == 0 )
    $intermediate $W[binary_330_wire] : $int<1>
    // 			next_pc := (pc + offs)
    //  file processorSuper.aa, line 196
    // (pc + offs)
    $intermediate $W[binary_334_wire] : $int<16>
    // next_pc
    // 			next_pc := (pc + 1 )
    //  file processorSuper.aa, line 198
    // (pc + 1 )
    $intermediate $W[binary_340_wire] : $int<16>
    // next_pc
    // 		out_port := reg[r1]
    //  file processorSuper.aa, line 204
    // reg[r1]
    $intermediate $W[simple_obj_ref_346_resized] : $int<5>
    $intermediate $W[simple_obj_ref_346_scaled] : $int<5>
    $intermediate $W[array_obj_ref_347_final_offset] : $int<5>
    $intermediate $W[array_obj_ref_347_root_address] : $int<5>
    $W[array_obj_ref_347_word_address_0] : $pointer<memory_space_1>
    $W[array_obj_ref_347_data_0] : $int<16>
    $W[array_obj_ref_347_wire] : $int<16>
    // out_port
    // datapath-instances for block %execute%body
    //  file processorSuper.aa, line 101
    // datapath-instances for block %execute%body%rp
    //  file processorSuper.aa, line 104
    // 			op := op_pipe
    //  file processorSuper.aa, line 105
    // op_pipe
    $ioport $in [simple_obj_ref_164_inst] (op_pipe) (op_165)
    // 			r1 := r1_pipe
    //  file processorSuper.aa, line 106
    // r1_pipe
    $ioport $in [simple_obj_ref_167_inst] (r1_pipe) (r1_168)
    // 			r2 := r2_pipe
    //  file processorSuper.aa, line 107
    // r2_pipe
    $ioport $in [simple_obj_ref_170_inst] (r2_pipe) (r2_171)
    // 			r3 := r3_pipe
    //  file processorSuper.aa, line 108
    // r3_pipe
    $ioport $in [simple_obj_ref_173_inst] (r3_pipe) (r3_174)
    // 			imm := imm_pipe
    //  file processorSuper.aa, line 109
    // imm_pipe
    $ioport $in [simple_obj_ref_176_inst] (imm_pipe) (imm_177)
    // 			offs := offs_pipe
    //  file processorSuper.aa, line 110
    // offs_pipe
    $ioport $in [simple_obj_ref_179_inst] (offs_pipe) (offs_180)
    // 			pc := pc_to_execute
    //  file processorSuper.aa, line 111
    // pc_to_execute
    $ioport $in [simple_obj_ref_182_inst] (pc_to_execute) (pc_183)
    // 			reg[0 ] := 0 
    //  file processorSuper.aa, line 112
    // reg[0 ]
    $store [array_obj_ref_185_store_0] $to memory_space_1 (array_obj_ref_185_word_address_0 array_obj_ref_185_data_0)
    &/ [array_obj_ref_185_gather_scatter] (expr_186_wire_constant) (array_obj_ref_185_data_0) 
    // datapath-instances  for switch  
    //  file processorSuper.aa, line 114
    ==[switch_stmt_189_select_expr_0] (op_165 expr_191_wire_constant) (expr_191_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_0] (expr_191_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_1] (op_165 expr_194_wire_constant) (expr_194_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_1] (expr_194_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_2] (op_165 expr_197_wire_constant) (expr_197_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_2] (expr_197_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_3] (op_165 expr_200_wire_constant) (expr_200_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_3] (expr_200_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_4] (op_165 expr_203_wire_constant) (expr_203_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_4] (expr_203_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_5] (op_165 expr_206_wire_constant) (expr_206_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_5] (expr_206_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_6] (op_165 expr_209_wire_constant) (expr_209_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_6] (expr_209_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_7] (op_165 expr_212_wire_constant) (expr_212_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_7] (expr_212_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_8] (op_165 expr_215_wire_constant) (expr_215_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_8] (expr_215_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_9] (op_165 expr_218_wire_constant) (expr_218_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_9] (expr_218_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_10] (op_165 expr_221_wire_constant) (expr_221_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_10] (expr_221_wire_constant_cmp)
    ==[switch_stmt_189_select_expr_11] (op_165 expr_224_wire_constant) (expr_224_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_11] (expr_224_wire_constant_cmp)
    ==0? [switch_stmt_189_branch_default] (expr_191_wire_constant_cmp expr_194_wire_constant_cmp expr_197_wire_constant_cmp expr_200_wire_constant_cmp expr_203_wire_constant_cmp expr_206_wire_constant_cmp expr_209_wire_constant_cmp expr_212_wire_constant_cmp expr_215_wire_constant_cmp expr_218_wire_constant_cmp expr_221_wire_constant_cmp expr_224_wire_constant_cmp)
    // 		halt_pipe := 1 
    //  file processorSuper.aa, line 145
    // halt_pipe
    $ioport $out [simple_obj_ref_230_inst]  (expr_231_wire_constant) (halt_pipe)
    // 		reg[r1] := (reg[r2] + reg[r3])
    //  file processorSuper.aa, line 150
    // reg[r2]
    := [array_obj_ref_238_index_0_resize] (r2_171) (simple_obj_ref_237_resized)
    &/ [array_obj_ref_238_index_0_rename] (simple_obj_ref_237_resized) (simple_obj_ref_237_scaled) 
    := [array_obj_ref_238_offset_inst] (simple_obj_ref_237_scaled) (array_obj_ref_238_final_offset)
    &/ [array_obj_ref_238_root_address_inst] (array_obj_ref_238_final_offset) (array_obj_ref_238_root_address) 
    &/ [array_obj_ref_238_addr_0] (array_obj_ref_238_root_address) (array_obj_ref_238_word_address_0) 
    $load [array_obj_ref_238_load_0] $from memory_space_1 (array_obj_ref_238_word_address_0) (array_obj_ref_238_data_0)
    &/ [array_obj_ref_238_gather_scatter] (array_obj_ref_238_data_0) (array_obj_ref_238_wire) 
    // reg[r3]
    := [array_obj_ref_240_index_0_resize] (r3_174) (simple_obj_ref_239_resized)
    &/ [array_obj_ref_240_index_0_rename] (simple_obj_ref_239_resized) (simple_obj_ref_239_scaled) 
    := [array_obj_ref_240_offset_inst] (simple_obj_ref_239_scaled) (array_obj_ref_240_final_offset)
    &/ [array_obj_ref_240_root_address_inst] (array_obj_ref_240_final_offset) (array_obj_ref_240_root_address) 
    &/ [array_obj_ref_240_addr_0] (array_obj_ref_240_root_address) (array_obj_ref_240_word_address_0) 
    $load [array_obj_ref_240_load_0] $from memory_space_1 (array_obj_ref_240_word_address_0) (array_obj_ref_240_data_0)
    &/ [array_obj_ref_240_gather_scatter] (array_obj_ref_240_data_0) (array_obj_ref_240_wire) 
    // (reg[r2] + reg[r3])
    +[binary_241_inst] (array_obj_ref_238_wire array_obj_ref_240_wire) (binary_241_wire)
    // reg[r1]
    := [array_obj_ref_236_index_0_resize] (r1_168) (simple_obj_ref_235_resized)
    &/ [array_obj_ref_236_index_0_rename] (simple_obj_ref_235_resized) (simple_obj_ref_235_scaled) 
    := [array_obj_ref_236_offset_inst] (simple_obj_ref_235_scaled) (array_obj_ref_236_final_offset)
    &/ [array_obj_ref_236_root_address_inst] (array_obj_ref_236_final_offset) (array_obj_ref_236_root_address) 
    &/ [array_obj_ref_236_addr_0] (array_obj_ref_236_root_address) (array_obj_ref_236_word_address_0) 
    $store [array_obj_ref_236_store_0] $to memory_space_1 (array_obj_ref_236_word_address_0 array_obj_ref_236_data_0)
    &/ [array_obj_ref_236_gather_scatter] (binary_241_wire) (array_obj_ref_236_data_0) 
    // 		reg[r1] := (reg[r2] - reg[r3])
    //  file processorSuper.aa, line 155
    // reg[r2]
    := [array_obj_ref_248_index_0_resize] (r2_171) (simple_obj_ref_247_resized)
    &/ [array_obj_ref_248_index_0_rename] (simple_obj_ref_247_resized) (simple_obj_ref_247_scaled) 
    := [array_obj_ref_248_offset_inst] (simple_obj_ref_247_scaled) (array_obj_ref_248_final_offset)
    &/ [array_obj_ref_248_root_address_inst] (array_obj_ref_248_final_offset) (array_obj_ref_248_root_address) 
    &/ [array_obj_ref_248_addr_0] (array_obj_ref_248_root_address) (array_obj_ref_248_word_address_0) 
    $load [array_obj_ref_248_load_0] $from memory_space_1 (array_obj_ref_248_word_address_0) (array_obj_ref_248_data_0)
    &/ [array_obj_ref_248_gather_scatter] (array_obj_ref_248_data_0) (array_obj_ref_248_wire) 
    // reg[r3]
    := [array_obj_ref_250_index_0_resize] (r3_174) (simple_obj_ref_249_resized)
    &/ [array_obj_ref_250_index_0_rename] (simple_obj_ref_249_resized) (simple_obj_ref_249_scaled) 
    := [array_obj_ref_250_offset_inst] (simple_obj_ref_249_scaled) (array_obj_ref_250_final_offset)
    &/ [array_obj_ref_250_root_address_inst] (array_obj_ref_250_final_offset) (array_obj_ref_250_root_address) 
    &/ [array_obj_ref_250_addr_0] (array_obj_ref_250_root_address) (array_obj_ref_250_word_address_0) 
    $load [array_obj_ref_250_load_0] $from memory_space_1 (array_obj_ref_250_word_address_0) (array_obj_ref_250_data_0)
    &/ [array_obj_ref_250_gather_scatter] (array_obj_ref_250_data_0) (array_obj_ref_250_wire) 
    // (reg[r2] - reg[r3])
    -[binary_251_inst] (array_obj_ref_248_wire array_obj_ref_250_wire) (binary_251_wire)
    // reg[r1]
    := [array_obj_ref_246_index_0_resize] (r1_168) (simple_obj_ref_245_resized)
    &/ [array_obj_ref_246_index_0_rename] (simple_obj_ref_245_resized) (simple_obj_ref_245_scaled) 
    := [array_obj_ref_246_offset_inst] (simple_obj_ref_245_scaled) (array_obj_ref_246_final_offset)
    &/ [array_obj_ref_246_root_address_inst] (array_obj_ref_246_final_offset) (array_obj_ref_246_root_address) 
    &/ [array_obj_ref_246_addr_0] (array_obj_ref_246_root_address) (array_obj_ref_246_word_address_0) 
    $store [array_obj_ref_246_store_0] $to memory_space_1 (array_obj_ref_246_word_address_0 array_obj_ref_246_data_0)
    &/ [array_obj_ref_246_gather_scatter] (binary_251_wire) (array_obj_ref_246_data_0) 
    // 		reg[r1] := mem[(reg[r2] + reg[r3])]
    //  file processorSuper.aa, line 160
    // mem[(reg[r2] + reg[r3])]
    // reg[r2]
    := [array_obj_ref_258_index_0_resize] (r2_171) (simple_obj_ref_257_resized)
    &/ [array_obj_ref_258_index_0_rename] (simple_obj_ref_257_resized) (simple_obj_ref_257_scaled) 
    := [array_obj_ref_258_offset_inst] (simple_obj_ref_257_scaled) (array_obj_ref_258_final_offset)
    &/ [array_obj_ref_258_root_address_inst] (array_obj_ref_258_final_offset) (array_obj_ref_258_root_address) 
    &/ [array_obj_ref_258_addr_0] (array_obj_ref_258_root_address) (array_obj_ref_258_word_address_0) 
    $load [array_obj_ref_258_load_0] $from memory_space_1 (array_obj_ref_258_word_address_0) (array_obj_ref_258_data_0)
    &/ [array_obj_ref_258_gather_scatter] (array_obj_ref_258_data_0) (array_obj_ref_258_wire) 
    // reg[r3]
    := [array_obj_ref_260_index_0_resize] (r3_174) (simple_obj_ref_259_resized)
    &/ [array_obj_ref_260_index_0_rename] (simple_obj_ref_259_resized) (simple_obj_ref_259_scaled) 
    := [array_obj_ref_260_offset_inst] (simple_obj_ref_259_scaled) (array_obj_ref_260_final_offset)
    &/ [array_obj_ref_260_root_address_inst] (array_obj_ref_260_final_offset) (array_obj_ref_260_root_address) 
    &/ [array_obj_ref_260_addr_0] (array_obj_ref_260_root_address) (array_obj_ref_260_word_address_0) 
    $load [array_obj_ref_260_load_0] $from memory_space_1 (array_obj_ref_260_word_address_0) (array_obj_ref_260_data_0)
    &/ [array_obj_ref_260_gather_scatter] (array_obj_ref_260_data_0) (array_obj_ref_260_wire) 
    // (reg[r2] + reg[r3])
    +[binary_261_inst] (array_obj_ref_258_wire array_obj_ref_260_wire) (binary_261_wire)
    := [array_obj_ref_262_index_0_resize] (binary_261_wire) (binary_261_resized)
    &/ [array_obj_ref_262_index_0_rename] (binary_261_resized) (binary_261_scaled) 
    := [array_obj_ref_262_offset_inst] (binary_261_scaled) (array_obj_ref_262_final_offset)
    &/ [array_obj_ref_262_root_address_inst] (array_obj_ref_262_final_offset) (array_obj_ref_262_root_address) 
    &/ [array_obj_ref_262_addr_0] (array_obj_ref_262_root_address) (array_obj_ref_262_word_address_0) 
    $load [array_obj_ref_262_load_0] $from memory_space_0 (array_obj_ref_262_word_address_0) (array_obj_ref_262_data_0)
    &/ [array_obj_ref_262_gather_scatter] (array_obj_ref_262_data_0) (array_obj_ref_262_wire) 
    // reg[r1]
    := [array_obj_ref_256_index_0_resize] (r1_168) (simple_obj_ref_255_resized)
    &/ [array_obj_ref_256_index_0_rename] (simple_obj_ref_255_resized) (simple_obj_ref_255_scaled) 
    := [array_obj_ref_256_offset_inst] (simple_obj_ref_255_scaled) (array_obj_ref_256_final_offset)
    &/ [array_obj_ref_256_root_address_inst] (array_obj_ref_256_final_offset) (array_obj_ref_256_root_address) 
    &/ [array_obj_ref_256_addr_0] (array_obj_ref_256_root_address) (array_obj_ref_256_word_address_0) 
    $store [array_obj_ref_256_store_0] $to memory_space_1 (array_obj_ref_256_word_address_0 array_obj_ref_256_data_0)
    &/ [array_obj_ref_256_gather_scatter] (array_obj_ref_262_wire) (array_obj_ref_256_data_0) 
    // 		mem[(reg[r2] + reg[r3])] := reg[r1]
    //  file processorSuper.aa, line 165
    // reg[r1]
    := [array_obj_ref_273_index_0_resize] (r1_168) (simple_obj_ref_272_resized)
    &/ [array_obj_ref_273_index_0_rename] (simple_obj_ref_272_resized) (simple_obj_ref_272_scaled) 
    := [array_obj_ref_273_offset_inst] (simple_obj_ref_272_scaled) (array_obj_ref_273_final_offset)
    &/ [array_obj_ref_273_root_address_inst] (array_obj_ref_273_final_offset) (array_obj_ref_273_root_address) 
    &/ [array_obj_ref_273_addr_0] (array_obj_ref_273_root_address) (array_obj_ref_273_word_address_0) 
    $load [array_obj_ref_273_load_0] $from memory_space_1 (array_obj_ref_273_word_address_0) (array_obj_ref_273_data_0)
    &/ [array_obj_ref_273_gather_scatter] (array_obj_ref_273_data_0) (array_obj_ref_273_wire) 
    // mem[(reg[r2] + reg[r3])]
    // reg[r2]
    := [array_obj_ref_267_index_0_resize] (r2_171) (simple_obj_ref_266_resized)
    &/ [array_obj_ref_267_index_0_rename] (simple_obj_ref_266_resized) (simple_obj_ref_266_scaled) 
    := [array_obj_ref_267_offset_inst] (simple_obj_ref_266_scaled) (array_obj_ref_267_final_offset)
    &/ [array_obj_ref_267_root_address_inst] (array_obj_ref_267_final_offset) (array_obj_ref_267_root_address) 
    &/ [array_obj_ref_267_addr_0] (array_obj_ref_267_root_address) (array_obj_ref_267_word_address_0) 
    $load [array_obj_ref_267_load_0] $from memory_space_1 (array_obj_ref_267_word_address_0) (array_obj_ref_267_data_0)
    &/ [array_obj_ref_267_gather_scatter] (array_obj_ref_267_data_0) (array_obj_ref_267_wire) 
    // reg[r3]
    := [array_obj_ref_269_index_0_resize] (r3_174) (simple_obj_ref_268_resized)
    &/ [array_obj_ref_269_index_0_rename] (simple_obj_ref_268_resized) (simple_obj_ref_268_scaled) 
    := [array_obj_ref_269_offset_inst] (simple_obj_ref_268_scaled) (array_obj_ref_269_final_offset)
    &/ [array_obj_ref_269_root_address_inst] (array_obj_ref_269_final_offset) (array_obj_ref_269_root_address) 
    &/ [array_obj_ref_269_addr_0] (array_obj_ref_269_root_address) (array_obj_ref_269_word_address_0) 
    $load [array_obj_ref_269_load_0] $from memory_space_1 (array_obj_ref_269_word_address_0) (array_obj_ref_269_data_0)
    &/ [array_obj_ref_269_gather_scatter] (array_obj_ref_269_data_0) (array_obj_ref_269_wire) 
    // (reg[r2] + reg[r3])
    +[binary_270_inst] (array_obj_ref_267_wire array_obj_ref_269_wire) (binary_270_wire)
    := [array_obj_ref_271_index_0_resize] (binary_270_wire) (binary_270_resized)
    &/ [array_obj_ref_271_index_0_rename] (binary_270_resized) (binary_270_scaled) 
    := [array_obj_ref_271_offset_inst] (binary_270_scaled) (array_obj_ref_271_final_offset)
    &/ [array_obj_ref_271_root_address_inst] (array_obj_ref_271_final_offset) (array_obj_ref_271_root_address) 
    &/ [array_obj_ref_271_addr_0] (array_obj_ref_271_root_address) (array_obj_ref_271_word_address_0) 
    $store [array_obj_ref_271_store_0] $to memory_space_0 (array_obj_ref_271_word_address_0 array_obj_ref_271_data_0)
    &/ [array_obj_ref_271_gather_scatter] (array_obj_ref_273_wire) (array_obj_ref_271_data_0) 
    // 		reg[r1] := ((reg[r1] & _b1111111100000000 ) | imm)
    //  file processorSuper.aa, line 170
    // reg[r1]
    := [array_obj_ref_280_index_0_resize] (r1_168) (simple_obj_ref_279_resized)
    &/ [array_obj_ref_280_index_0_rename] (simple_obj_ref_279_resized) (simple_obj_ref_279_scaled) 
    := [array_obj_ref_280_offset_inst] (simple_obj_ref_279_scaled) (array_obj_ref_280_final_offset)
    &/ [array_obj_ref_280_root_address_inst] (array_obj_ref_280_final_offset) (array_obj_ref_280_root_address) 
    &/ [array_obj_ref_280_addr_0] (array_obj_ref_280_root_address) (array_obj_ref_280_word_address_0) 
    $load [array_obj_ref_280_load_0] $from memory_space_1 (array_obj_ref_280_word_address_0) (array_obj_ref_280_data_0)
    &/ [array_obj_ref_280_gather_scatter] (array_obj_ref_280_data_0) (array_obj_ref_280_wire) 
    // (reg[r1] & _b1111111100000000 )
    &[binary_282_inst] (array_obj_ref_280_wire expr_281_wire_constant) (binary_282_wire)
    // ((reg[r1] & _b1111111100000000 ) | imm)
    |[binary_284_inst] (binary_282_wire imm_177) (binary_284_wire)
    // reg[r1]
    := [array_obj_ref_278_index_0_resize] (r1_168) (simple_obj_ref_277_resized)
    &/ [array_obj_ref_278_index_0_rename] (simple_obj_ref_277_resized) (simple_obj_ref_277_scaled) 
    := [array_obj_ref_278_offset_inst] (simple_obj_ref_277_scaled) (array_obj_ref_278_final_offset)
    &/ [array_obj_ref_278_root_address_inst] (array_obj_ref_278_final_offset) (array_obj_ref_278_root_address) 
    &/ [array_obj_ref_278_addr_0] (array_obj_ref_278_root_address) (array_obj_ref_278_word_address_0) 
    $store [array_obj_ref_278_store_0] $to memory_space_1 (array_obj_ref_278_word_address_0 array_obj_ref_278_data_0)
    &/ [array_obj_ref_278_gather_scatter] (binary_284_wire) (array_obj_ref_278_data_0) 
    // 		reg[r1] := ((reg[r1] & _b0000000011111111 ) | (imm << 8 ))
    //  file processorSuper.aa, line 175
    // reg[r1]
    := [array_obj_ref_291_index_0_resize] (r1_168) (simple_obj_ref_290_resized)
    &/ [array_obj_ref_291_index_0_rename] (simple_obj_ref_290_resized) (simple_obj_ref_290_scaled) 
    := [array_obj_ref_291_offset_inst] (simple_obj_ref_290_scaled) (array_obj_ref_291_final_offset)
    &/ [array_obj_ref_291_root_address_inst] (array_obj_ref_291_final_offset) (array_obj_ref_291_root_address) 
    &/ [array_obj_ref_291_addr_0] (array_obj_ref_291_root_address) (array_obj_ref_291_word_address_0) 
    $load [array_obj_ref_291_load_0] $from memory_space_1 (array_obj_ref_291_word_address_0) (array_obj_ref_291_data_0)
    &/ [array_obj_ref_291_gather_scatter] (array_obj_ref_291_data_0) (array_obj_ref_291_wire) 
    // (reg[r1] & _b0000000011111111 )
    &[binary_293_inst] (array_obj_ref_291_wire expr_292_wire_constant) (binary_293_wire)
    // (imm << 8 )
    <<[binary_296_inst] (imm_177 expr_295_wire_constant) (binary_296_wire)
    // ((reg[r1] & _b0000000011111111 ) | (imm << 8 ))
    |[binary_297_inst] (binary_293_wire binary_296_wire) (binary_297_wire)
    // reg[r1]
    := [array_obj_ref_289_index_0_resize] (r1_168) (simple_obj_ref_288_resized)
    &/ [array_obj_ref_289_index_0_rename] (simple_obj_ref_288_resized) (simple_obj_ref_288_scaled) 
    := [array_obj_ref_289_offset_inst] (simple_obj_ref_288_scaled) (array_obj_ref_289_final_offset)
    &/ [array_obj_ref_289_root_address_inst] (array_obj_ref_289_final_offset) (array_obj_ref_289_root_address) 
    &/ [array_obj_ref_289_addr_0] (array_obj_ref_289_root_address) (array_obj_ref_289_word_address_0) 
    $store [array_obj_ref_289_store_0] $to memory_space_1 (array_obj_ref_289_word_address_0 array_obj_ref_289_data_0)
    &/ [array_obj_ref_289_gather_scatter] (binary_297_wire) (array_obj_ref_289_data_0) 
    // 		reg[r1] := reg[r2]
    //  file processorSuper.aa, line 180
    // reg[r2]
    := [array_obj_ref_304_index_0_resize] (r2_171) (simple_obj_ref_303_resized)
    &/ [array_obj_ref_304_index_0_rename] (simple_obj_ref_303_resized) (simple_obj_ref_303_scaled) 
    := [array_obj_ref_304_offset_inst] (simple_obj_ref_303_scaled) (array_obj_ref_304_final_offset)
    &/ [array_obj_ref_304_root_address_inst] (array_obj_ref_304_final_offset) (array_obj_ref_304_root_address) 
    &/ [array_obj_ref_304_addr_0] (array_obj_ref_304_root_address) (array_obj_ref_304_word_address_0) 
    $load [array_obj_ref_304_load_0] $from memory_space_1 (array_obj_ref_304_word_address_0) (array_obj_ref_304_data_0)
    &/ [array_obj_ref_304_gather_scatter] (array_obj_ref_304_data_0) (array_obj_ref_304_wire) 
    // reg[r1]
    := [array_obj_ref_302_index_0_resize] (r1_168) (simple_obj_ref_301_resized)
    &/ [array_obj_ref_302_index_0_rename] (simple_obj_ref_301_resized) (simple_obj_ref_301_scaled) 
    := [array_obj_ref_302_offset_inst] (simple_obj_ref_301_scaled) (array_obj_ref_302_final_offset)
    &/ [array_obj_ref_302_root_address_inst] (array_obj_ref_302_final_offset) (array_obj_ref_302_root_address) 
    &/ [array_obj_ref_302_addr_0] (array_obj_ref_302_root_address) (array_obj_ref_302_word_address_0) 
    $store [array_obj_ref_302_store_0] $to memory_space_1 (array_obj_ref_302_word_address_0 array_obj_ref_302_data_0)
    &/ [array_obj_ref_302_gather_scatter] (array_obj_ref_304_wire) (array_obj_ref_302_data_0) 
    // 		next_pc := mem[(pc + 1 )]
    //  file processorSuper.aa, line 185
    // mem[(pc + 1 )]
    // (pc + 1 )
    +[binary_311_inst] (pc_183 expr_310_wire_constant) (binary_311_wire)
    := [array_obj_ref_312_index_0_resize] (binary_311_wire) (binary_311_resized)
    &/ [array_obj_ref_312_index_0_rename] (binary_311_resized) (binary_311_scaled) 
    := [array_obj_ref_312_offset_inst] (binary_311_scaled) (array_obj_ref_312_final_offset)
    &/ [array_obj_ref_312_root_address_inst] (array_obj_ref_312_final_offset) (array_obj_ref_312_root_address) 
    &/ [array_obj_ref_312_addr_0] (array_obj_ref_312_root_address) (array_obj_ref_312_word_address_0) 
    $load [array_obj_ref_312_load_0] $from memory_space_0 (array_obj_ref_312_word_address_0) (array_obj_ref_312_data_0)
    &/ [array_obj_ref_312_gather_scatter] (array_obj_ref_312_data_0) (array_obj_ref_312_wire) 
    // next_pc
    $ioport $out [simple_obj_ref_308_inst]  (array_obj_ref_312_wire) (next_pc)
    // 		next_pc := ((pc + offs) + reg[r1])
    //  file processorSuper.aa, line 190
    // (pc + offs)
    +[binary_319_inst] (pc_183 offs_180) (binary_319_wire)
    // reg[r1]
    := [array_obj_ref_321_index_0_resize] (r1_168) (simple_obj_ref_320_resized)
    &/ [array_obj_ref_321_index_0_rename] (simple_obj_ref_320_resized) (simple_obj_ref_320_scaled) 
    := [array_obj_ref_321_offset_inst] (simple_obj_ref_320_scaled) (array_obj_ref_321_final_offset)
    &/ [array_obj_ref_321_root_address_inst] (array_obj_ref_321_final_offset) (array_obj_ref_321_root_address) 
    &/ [array_obj_ref_321_addr_0] (array_obj_ref_321_root_address) (array_obj_ref_321_word_address_0) 
    $load [array_obj_ref_321_load_0] $from memory_space_1 (array_obj_ref_321_word_address_0) (array_obj_ref_321_data_0)
    &/ [array_obj_ref_321_gather_scatter] (array_obj_ref_321_data_0) (array_obj_ref_321_wire) 
    // ((pc + offs) + reg[r1])
    +[binary_322_inst] (binary_319_wire array_obj_ref_321_wire) (binary_322_wire)
    // next_pc
    $ioport $out [simple_obj_ref_316_inst]  (binary_322_wire) (next_pc)
    // datapath-instances for if  
    //  file processorSuper.aa, line 195
    // reg[r1]
    := [array_obj_ref_328_index_0_resize] (r1_168) (simple_obj_ref_327_resized)
    &/ [array_obj_ref_328_index_0_rename] (simple_obj_ref_327_resized) (simple_obj_ref_327_scaled) 
    := [array_obj_ref_328_offset_inst] (simple_obj_ref_327_scaled) (array_obj_ref_328_final_offset)
    &/ [array_obj_ref_328_root_address_inst] (array_obj_ref_328_final_offset) (array_obj_ref_328_root_address) 
    &/ [array_obj_ref_328_addr_0] (array_obj_ref_328_root_address) (array_obj_ref_328_word_address_0) 
    $load [array_obj_ref_328_load_0] $from memory_space_1 (array_obj_ref_328_word_address_0) (array_obj_ref_328_data_0)
    &/ [array_obj_ref_328_gather_scatter] (array_obj_ref_328_data_0) (array_obj_ref_328_wire) 
    // (reg[r1] == 0 )
    ==[binary_330_inst] (array_obj_ref_328_wire expr_329_wire_constant) (binary_330_wire)
    ==0? [if_stmt_326_branch] (binary_330_wire)
    // 			next_pc := (pc + offs)
    //  file processorSuper.aa, line 196
    // (pc + offs)
    +[binary_334_inst] (pc_183 offs_180) (binary_334_wire)
    // next_pc
    $ioport $out [simple_obj_ref_331_inst]  (binary_334_wire) (next_pc)
    // 			next_pc := (pc + 1 )
    //  file processorSuper.aa, line 198
    // (pc + 1 )
    +[binary_340_inst] (pc_183 expr_339_wire_constant) (binary_340_wire)
    // next_pc
    $ioport $out [simple_obj_ref_337_inst]  (binary_340_wire) (next_pc)
    // 		out_port := reg[r1]
    //  file processorSuper.aa, line 204
    // reg[r1]
    := [array_obj_ref_347_index_0_resize] (r1_168) (simple_obj_ref_346_resized)
    &/ [array_obj_ref_347_index_0_rename] (simple_obj_ref_346_resized) (simple_obj_ref_346_scaled) 
    := [array_obj_ref_347_offset_inst] (simple_obj_ref_346_scaled) (array_obj_ref_347_final_offset)
    &/ [array_obj_ref_347_root_address_inst] (array_obj_ref_347_final_offset) (array_obj_ref_347_root_address) 
    &/ [array_obj_ref_347_addr_0] (array_obj_ref_347_root_address) (array_obj_ref_347_word_address_0) 
    $load [array_obj_ref_347_load_0] $from memory_space_1 (array_obj_ref_347_word_address_0) (array_obj_ref_347_data_0)
    &/ [array_obj_ref_347_gather_scatter] (array_obj_ref_347_data_0) (array_obj_ref_347_wire) 
    // out_port
    $ioport $out [simple_obj_ref_345_inst]  (array_obj_ref_347_wire) (out_port)
  }
  // end data-path
  // CP-DP links for merge  
  //  file processorSuper.aa, line 103
  // 			op := op_pipe
  //  file processorSuper.aa, line 105
  // op_pipe
  simple_obj_ref_164_inst <=> (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_165/simple_obj_ref_164_complete/req) (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_165/simple_obj_ref_164_complete/ack)
  // 			r1 := r1_pipe
  //  file processorSuper.aa, line 106
  // r1_pipe
  simple_obj_ref_167_inst <=> (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_168/simple_obj_ref_167_complete/req) (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_168/simple_obj_ref_167_complete/ack)
  // 			r2 := r2_pipe
  //  file processorSuper.aa, line 107
  // r2_pipe
  simple_obj_ref_170_inst <=> (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_171/simple_obj_ref_170_complete/req) (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_171/simple_obj_ref_170_complete/ack)
  // 			r3 := r3_pipe
  //  file processorSuper.aa, line 108
  // r3_pipe
  simple_obj_ref_173_inst <=> (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_174/simple_obj_ref_173_complete/req) (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_174/simple_obj_ref_173_complete/ack)
  // 			imm := imm_pipe
  //  file processorSuper.aa, line 109
  // imm_pipe
  simple_obj_ref_176_inst <=> (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_177/simple_obj_ref_176_complete/req) (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_177/simple_obj_ref_176_complete/ack)
  // 			offs := offs_pipe
  //  file processorSuper.aa, line 110
  // offs_pipe
  simple_obj_ref_179_inst <=> (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_180/simple_obj_ref_179_complete/req) (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_180/simple_obj_ref_179_complete/ack)
  // 			pc := pc_to_execute
  //  file processorSuper.aa, line 111
  // pc_to_execute
  simple_obj_ref_182_inst <=> (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_183/simple_obj_ref_182_complete/req) (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_183/simple_obj_ref_182_complete/ack)
  // 			reg[0 ] := 0 
  //  file processorSuper.aa, line 112
  array_obj_ref_185_gather_scatter <=> (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_187/array_obj_ref_185_request/split_req) (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_187/array_obj_ref_185_request/split_ack)
  array_obj_ref_185_store_0 <=> (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_187/array_obj_ref_185_request/word_access/word_access_0/rr branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_187/array_obj_ref_185_complete/word_access/word_access_0/cr) (branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_187/array_obj_ref_185_request/word_access/word_access_0/ra branch_block_stmt_160/parallel_block_stmt_162/assign_stmt_187/array_obj_ref_185_complete/word_access/word_access_0/ca)
  // CP-DP links for switch  
  //  file processorSuper.aa, line 114
  switch_stmt_189_select_expr_0 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_0/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_0/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_0/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_0/ca)
  switch_stmt_189_branch_0 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_0/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_0/ack1)
  switch_stmt_189_select_expr_1 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_1/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_1/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_1/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_1/ca)
  switch_stmt_189_branch_1 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_1/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_1/ack1)
  switch_stmt_189_select_expr_2 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_2/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_2/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_2/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_2/ca)
  switch_stmt_189_branch_2 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_2/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_2/ack1)
  switch_stmt_189_select_expr_3 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_3/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_3/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_3/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_3/ca)
  switch_stmt_189_branch_3 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_3/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_3/ack1)
  switch_stmt_189_select_expr_4 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_4/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_4/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_4/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_4/ca)
  switch_stmt_189_branch_4 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_4/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_4/ack1)
  switch_stmt_189_select_expr_5 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_5/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_5/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_5/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_5/ca)
  switch_stmt_189_branch_5 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_5/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_5/ack1)
  switch_stmt_189_select_expr_6 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_6/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_6/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_6/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_6/ca)
  switch_stmt_189_branch_6 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_6/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_6/ack1)
  switch_stmt_189_select_expr_7 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_7/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_7/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_7/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_7/ca)
  switch_stmt_189_branch_7 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_7/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_7/ack1)
  switch_stmt_189_select_expr_8 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_8/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_8/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_8/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_8/ca)
  switch_stmt_189_branch_8 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_8/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_8/ack1)
  switch_stmt_189_select_expr_9 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_9/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_9/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_9/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_9/ca)
  switch_stmt_189_branch_9 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_9/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_9/ack1)
  switch_stmt_189_select_expr_10 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_10/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_10/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_10/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_10/ca)
  switch_stmt_189_branch_10 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_10/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_10/ack1)
  switch_stmt_189_select_expr_11 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_11/rr branch_block_stmt_160/switch_stmt_189__condition_check__/condition_11/cr) (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_11/ra branch_block_stmt_160/switch_stmt_189__condition_check__/condition_11/ca)
  switch_stmt_189_branch_11 <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/condition_11/cmp) ($open branch_block_stmt_160/switch_stmt_189_choice_11/ack1)
  switch_stmt_189_branch_default <=> (branch_block_stmt_160/switch_stmt_189__condition_check__/$exit) (branch_block_stmt_160/switch_stmt_189_choice_default/ack0 $open)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 143
  // 		halt_pipe := 1 
  //  file processorSuper.aa, line 145
  // halt_pipe
  simple_obj_ref_230_inst <=> (branch_block_stmt_160/assign_stmt_232/simple_obj_ref_230_complete/pipe_wreq) (branch_block_stmt_160/assign_stmt_232/simple_obj_ref_230_complete/pipe_wack)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 148
  // 		reg[r1] := (reg[r2] + reg[r3])
  //  file processorSuper.aa, line 150
  // reg[r2]
  array_obj_ref_238_index_0_resize <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_index_resize_0/index_resize_ack)
  array_obj_ref_238_index_0_rename <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_index_scale_0/scale_rename_ack)
  array_obj_ref_238_offset_inst <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_add_indices/final_index_ack)
  array_obj_ref_238_root_address_inst <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_base_plus_offset/sum_rename_ack)
  array_obj_ref_238_addr_0 <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_word_addrgen/root_rename_ack)
  array_obj_ref_238_gather_scatter <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_complete/merge_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_complete/merge_ack)
  array_obj_ref_238_load_0 <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_242/array_obj_ref_238_complete/word_access/word_access_0/ca)
  // reg[r3]
  array_obj_ref_240_index_0_resize <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_index_resize_0/index_resize_ack)
  array_obj_ref_240_index_0_rename <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_index_scale_0/scale_rename_ack)
  array_obj_ref_240_offset_inst <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_add_indices/final_index_ack)
  array_obj_ref_240_root_address_inst <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_base_plus_offset/sum_rename_ack)
  array_obj_ref_240_addr_0 <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_word_addrgen/root_rename_ack)
  array_obj_ref_240_gather_scatter <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_complete/merge_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_complete/merge_ack)
  array_obj_ref_240_load_0 <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_242/array_obj_ref_240_complete/word_access/word_access_0/ca)
  // (reg[r2] + reg[r3])
  binary_241_inst <=> (branch_block_stmt_160/assign_stmt_242/binary_241_complete/rr branch_block_stmt_160/assign_stmt_242/binary_241_complete/cr) (branch_block_stmt_160/assign_stmt_242/binary_241_complete/ra branch_block_stmt_160/assign_stmt_242/binary_241_complete/ca)
  array_obj_ref_236_index_0_resize <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_index_resize_0/index_resize_ack)
  array_obj_ref_236_index_0_rename <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_index_scale_0/scale_rename_ack)
  array_obj_ref_236_offset_inst <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_add_indices/final_index_ack)
  array_obj_ref_236_root_address_inst <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_base_plus_offset/sum_rename_ack)
  array_obj_ref_236_addr_0 <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_word_addrgen/root_rename_ack)
  array_obj_ref_236_gather_scatter <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_request/split_req) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_request/split_ack)
  array_obj_ref_236_store_0 <=> (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_242/array_obj_ref_236_complete/word_access/word_access_0/ca)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 153
  // 		reg[r1] := (reg[r2] - reg[r3])
  //  file processorSuper.aa, line 155
  // reg[r2]
  array_obj_ref_248_index_0_resize <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_index_resize_0/index_resize_ack)
  array_obj_ref_248_index_0_rename <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_index_scale_0/scale_rename_ack)
  array_obj_ref_248_offset_inst <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_add_indices/final_index_ack)
  array_obj_ref_248_root_address_inst <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_base_plus_offset/sum_rename_ack)
  array_obj_ref_248_addr_0 <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_word_addrgen/root_rename_ack)
  array_obj_ref_248_gather_scatter <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_complete/merge_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_complete/merge_ack)
  array_obj_ref_248_load_0 <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_252/array_obj_ref_248_complete/word_access/word_access_0/ca)
  // reg[r3]
  array_obj_ref_250_index_0_resize <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_index_resize_0/index_resize_ack)
  array_obj_ref_250_index_0_rename <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_index_scale_0/scale_rename_ack)
  array_obj_ref_250_offset_inst <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_add_indices/final_index_ack)
  array_obj_ref_250_root_address_inst <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_base_plus_offset/sum_rename_ack)
  array_obj_ref_250_addr_0 <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_word_addrgen/root_rename_ack)
  array_obj_ref_250_gather_scatter <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_complete/merge_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_complete/merge_ack)
  array_obj_ref_250_load_0 <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_252/array_obj_ref_250_complete/word_access/word_access_0/ca)
  // (reg[r2] - reg[r3])
  binary_251_inst <=> (branch_block_stmt_160/assign_stmt_252/binary_251_complete/rr branch_block_stmt_160/assign_stmt_252/binary_251_complete/cr) (branch_block_stmt_160/assign_stmt_252/binary_251_complete/ra branch_block_stmt_160/assign_stmt_252/binary_251_complete/ca)
  array_obj_ref_246_index_0_resize <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_index_resize_0/index_resize_ack)
  array_obj_ref_246_index_0_rename <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_index_scale_0/scale_rename_ack)
  array_obj_ref_246_offset_inst <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_add_indices/final_index_ack)
  array_obj_ref_246_root_address_inst <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_base_plus_offset/sum_rename_ack)
  array_obj_ref_246_addr_0 <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_word_addrgen/root_rename_ack)
  array_obj_ref_246_gather_scatter <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_request/split_req) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_request/split_ack)
  array_obj_ref_246_store_0 <=> (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_252/array_obj_ref_246_complete/word_access/word_access_0/ca)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 158
  // 		reg[r1] := mem[(reg[r2] + reg[r3])]
  //  file processorSuper.aa, line 160
  // mem[(reg[r2] + reg[r3])]
  // reg[r2]
  array_obj_ref_258_index_0_resize <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_index_resize_0/index_resize_ack)
  array_obj_ref_258_index_0_rename <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_index_scale_0/scale_rename_ack)
  array_obj_ref_258_offset_inst <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_add_indices/final_index_ack)
  array_obj_ref_258_root_address_inst <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_base_plus_offset/sum_rename_ack)
  array_obj_ref_258_addr_0 <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_word_addrgen/root_rename_ack)
  array_obj_ref_258_gather_scatter <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_complete/merge_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_complete/merge_ack)
  array_obj_ref_258_load_0 <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_263/array_obj_ref_258_complete/word_access/word_access_0/ca)
  // reg[r3]
  array_obj_ref_260_index_0_resize <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_index_resize_0/index_resize_ack)
  array_obj_ref_260_index_0_rename <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_index_scale_0/scale_rename_ack)
  array_obj_ref_260_offset_inst <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_add_indices/final_index_ack)
  array_obj_ref_260_root_address_inst <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_base_plus_offset/sum_rename_ack)
  array_obj_ref_260_addr_0 <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_word_addrgen/root_rename_ack)
  array_obj_ref_260_gather_scatter <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_complete/merge_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_complete/merge_ack)
  array_obj_ref_260_load_0 <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_263/array_obj_ref_260_complete/word_access/word_access_0/ca)
  // (reg[r2] + reg[r3])
  binary_261_inst <=> (branch_block_stmt_160/assign_stmt_263/binary_261_complete/rr branch_block_stmt_160/assign_stmt_263/binary_261_complete/cr) (branch_block_stmt_160/assign_stmt_263/binary_261_complete/ra branch_block_stmt_160/assign_stmt_263/binary_261_complete/ca)
  array_obj_ref_262_index_0_resize <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_index_resize_0/index_resize_ack)
  array_obj_ref_262_index_0_rename <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_index_scale_0/scale_rename_ack)
  array_obj_ref_262_offset_inst <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_add_indices/final_index_ack)
  array_obj_ref_262_root_address_inst <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_base_plus_offset/sum_rename_ack)
  array_obj_ref_262_addr_0 <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_word_addrgen/root_rename_ack)
  array_obj_ref_262_gather_scatter <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_complete/merge_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_complete/merge_ack)
  array_obj_ref_262_load_0 <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_263/array_obj_ref_262_complete/word_access/word_access_0/ca)
  array_obj_ref_256_index_0_resize <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_index_resize_0/index_resize_ack)
  array_obj_ref_256_index_0_rename <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_index_scale_0/scale_rename_ack)
  array_obj_ref_256_offset_inst <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_add_indices/final_index_ack)
  array_obj_ref_256_root_address_inst <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_base_plus_offset/sum_rename_ack)
  array_obj_ref_256_addr_0 <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_word_addrgen/root_rename_ack)
  array_obj_ref_256_gather_scatter <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_request/split_req) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_request/split_ack)
  array_obj_ref_256_store_0 <=> (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_263/array_obj_ref_256_complete/word_access/word_access_0/ca)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 163
  // 		mem[(reg[r2] + reg[r3])] := reg[r1]
  //  file processorSuper.aa, line 165
  // reg[r1]
  array_obj_ref_273_index_0_resize <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_index_resize_0/index_resize_ack)
  array_obj_ref_273_index_0_rename <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_index_scale_0/scale_rename_ack)
  array_obj_ref_273_offset_inst <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_add_indices/final_index_ack)
  array_obj_ref_273_root_address_inst <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_base_plus_offset/sum_rename_ack)
  array_obj_ref_273_addr_0 <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_word_addrgen/root_rename_ack)
  array_obj_ref_273_gather_scatter <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_complete/merge_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_complete/merge_ack)
  array_obj_ref_273_load_0 <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_274/array_obj_ref_273_complete/word_access/word_access_0/ca)
  // reg[r2]
  array_obj_ref_267_index_0_resize <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_index_resize_0/index_resize_ack)
  array_obj_ref_267_index_0_rename <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_index_scale_0/scale_rename_ack)
  array_obj_ref_267_offset_inst <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_add_indices/final_index_ack)
  array_obj_ref_267_root_address_inst <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_base_plus_offset/sum_rename_ack)
  array_obj_ref_267_addr_0 <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_word_addrgen/root_rename_ack)
  array_obj_ref_267_gather_scatter <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_complete/merge_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_complete/merge_ack)
  array_obj_ref_267_load_0 <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_274/array_obj_ref_267_complete/word_access/word_access_0/ca)
  // reg[r3]
  array_obj_ref_269_index_0_resize <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_index_resize_0/index_resize_ack)
  array_obj_ref_269_index_0_rename <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_index_scale_0/scale_rename_ack)
  array_obj_ref_269_offset_inst <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_add_indices/final_index_ack)
  array_obj_ref_269_root_address_inst <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_base_plus_offset/sum_rename_ack)
  array_obj_ref_269_addr_0 <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_word_addrgen/root_rename_ack)
  array_obj_ref_269_gather_scatter <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_complete/merge_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_complete/merge_ack)
  array_obj_ref_269_load_0 <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_274/array_obj_ref_269_complete/word_access/word_access_0/ca)
  // (reg[r2] + reg[r3])
  binary_270_inst <=> (branch_block_stmt_160/assign_stmt_274/binary_270_complete/rr branch_block_stmt_160/assign_stmt_274/binary_270_complete/cr) (branch_block_stmt_160/assign_stmt_274/binary_270_complete/ra branch_block_stmt_160/assign_stmt_274/binary_270_complete/ca)
  array_obj_ref_271_index_0_resize <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_index_resize_0/index_resize_ack)
  array_obj_ref_271_index_0_rename <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_index_scale_0/scale_rename_ack)
  array_obj_ref_271_offset_inst <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_add_indices/final_index_ack)
  array_obj_ref_271_root_address_inst <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_base_plus_offset/sum_rename_ack)
  array_obj_ref_271_addr_0 <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_word_addrgen/root_rename_ack)
  array_obj_ref_271_gather_scatter <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_request/split_req) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_request/split_ack)
  array_obj_ref_271_store_0 <=> (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_274/array_obj_ref_271_complete/word_access/word_access_0/ca)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 168
  // 		reg[r1] := ((reg[r1] & _b1111111100000000 ) | imm)
  //  file processorSuper.aa, line 170
  // reg[r1]
  array_obj_ref_280_index_0_resize <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_index_resize_0/index_resize_ack)
  array_obj_ref_280_index_0_rename <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_index_scale_0/scale_rename_ack)
  array_obj_ref_280_offset_inst <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_add_indices/final_index_ack)
  array_obj_ref_280_root_address_inst <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_base_plus_offset/sum_rename_ack)
  array_obj_ref_280_addr_0 <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_word_addrgen/root_rename_ack)
  array_obj_ref_280_gather_scatter <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_complete/merge_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_complete/merge_ack)
  array_obj_ref_280_load_0 <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_285/array_obj_ref_280_complete/word_access/word_access_0/ca)
  // (reg[r1] & _b1111111100000000 )
  binary_282_inst <=> (branch_block_stmt_160/assign_stmt_285/binary_282_complete/rr branch_block_stmt_160/assign_stmt_285/binary_282_complete/cr) (branch_block_stmt_160/assign_stmt_285/binary_282_complete/ra branch_block_stmt_160/assign_stmt_285/binary_282_complete/ca)
  // ((reg[r1] & _b1111111100000000 ) | imm)
  binary_284_inst <=> (branch_block_stmt_160/assign_stmt_285/binary_284_complete/rr branch_block_stmt_160/assign_stmt_285/binary_284_complete/cr) (branch_block_stmt_160/assign_stmt_285/binary_284_complete/ra branch_block_stmt_160/assign_stmt_285/binary_284_complete/ca)
  array_obj_ref_278_index_0_resize <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_index_resize_0/index_resize_ack)
  array_obj_ref_278_index_0_rename <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_index_scale_0/scale_rename_ack)
  array_obj_ref_278_offset_inst <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_add_indices/final_index_ack)
  array_obj_ref_278_root_address_inst <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_base_plus_offset/sum_rename_ack)
  array_obj_ref_278_addr_0 <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_word_addrgen/root_rename_ack)
  array_obj_ref_278_gather_scatter <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_request/split_req) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_request/split_ack)
  array_obj_ref_278_store_0 <=> (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_285/array_obj_ref_278_complete/word_access/word_access_0/ca)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 173
  // 		reg[r1] := ((reg[r1] & _b0000000011111111 ) | (imm << 8 ))
  //  file processorSuper.aa, line 175
  // reg[r1]
  array_obj_ref_291_index_0_resize <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_index_resize_0/index_resize_ack)
  array_obj_ref_291_index_0_rename <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_index_scale_0/scale_rename_ack)
  array_obj_ref_291_offset_inst <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_add_indices/final_index_ack)
  array_obj_ref_291_root_address_inst <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_base_plus_offset/sum_rename_ack)
  array_obj_ref_291_addr_0 <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_word_addrgen/root_rename_ack)
  array_obj_ref_291_gather_scatter <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_complete/merge_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_complete/merge_ack)
  array_obj_ref_291_load_0 <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_298/array_obj_ref_291_complete/word_access/word_access_0/ca)
  // (reg[r1] & _b0000000011111111 )
  binary_293_inst <=> (branch_block_stmt_160/assign_stmt_298/binary_293_complete/rr branch_block_stmt_160/assign_stmt_298/binary_293_complete/cr) (branch_block_stmt_160/assign_stmt_298/binary_293_complete/ra branch_block_stmt_160/assign_stmt_298/binary_293_complete/ca)
  // (imm << 8 )
  binary_296_inst <=> (branch_block_stmt_160/assign_stmt_298/binary_296_complete/rr branch_block_stmt_160/assign_stmt_298/binary_296_complete/cr) (branch_block_stmt_160/assign_stmt_298/binary_296_complete/ra branch_block_stmt_160/assign_stmt_298/binary_296_complete/ca)
  // ((reg[r1] & _b0000000011111111 ) | (imm << 8 ))
  binary_297_inst <=> (branch_block_stmt_160/assign_stmt_298/binary_297_complete/rr branch_block_stmt_160/assign_stmt_298/binary_297_complete/cr) (branch_block_stmt_160/assign_stmt_298/binary_297_complete/ra branch_block_stmt_160/assign_stmt_298/binary_297_complete/ca)
  array_obj_ref_289_index_0_resize <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_index_resize_0/index_resize_ack)
  array_obj_ref_289_index_0_rename <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_index_scale_0/scale_rename_ack)
  array_obj_ref_289_offset_inst <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_add_indices/final_index_ack)
  array_obj_ref_289_root_address_inst <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_base_plus_offset/sum_rename_ack)
  array_obj_ref_289_addr_0 <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_word_addrgen/root_rename_ack)
  array_obj_ref_289_gather_scatter <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_request/split_req) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_request/split_ack)
  array_obj_ref_289_store_0 <=> (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_298/array_obj_ref_289_complete/word_access/word_access_0/ca)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 178
  // 		reg[r1] := reg[r2]
  //  file processorSuper.aa, line 180
  // reg[r2]
  array_obj_ref_304_index_0_resize <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_index_resize_0/index_resize_ack)
  array_obj_ref_304_index_0_rename <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_index_scale_0/scale_rename_ack)
  array_obj_ref_304_offset_inst <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_add_indices/final_index_ack)
  array_obj_ref_304_root_address_inst <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_base_plus_offset/sum_rename_ack)
  array_obj_ref_304_addr_0 <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_word_addrgen/root_rename_ack)
  array_obj_ref_304_gather_scatter <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_complete/merge_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_complete/merge_ack)
  array_obj_ref_304_load_0 <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_305/array_obj_ref_304_complete/word_access/word_access_0/ca)
  array_obj_ref_302_index_0_resize <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_index_resize_0/index_resize_ack)
  array_obj_ref_302_index_0_rename <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_index_scale_0/scale_rename_ack)
  array_obj_ref_302_offset_inst <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_add_indices/final_index_ack)
  array_obj_ref_302_root_address_inst <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_base_plus_offset/sum_rename_ack)
  array_obj_ref_302_addr_0 <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_word_addrgen/root_rename_ack)
  array_obj_ref_302_gather_scatter <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_request/split_req) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_request/split_ack)
  array_obj_ref_302_store_0 <=> (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_305/array_obj_ref_302_complete/word_access/word_access_0/ca)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 183
  // 		next_pc := mem[(pc + 1 )]
  //  file processorSuper.aa, line 185
  // mem[(pc + 1 )]
  // (pc + 1 )
  binary_311_inst <=> (branch_block_stmt_160/assign_stmt_313/binary_311_complete/rr branch_block_stmt_160/assign_stmt_313/binary_311_complete/cr) (branch_block_stmt_160/assign_stmt_313/binary_311_complete/ra branch_block_stmt_160/assign_stmt_313/binary_311_complete/ca)
  array_obj_ref_312_index_0_resize <=> (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_index_resize_0/index_resize_ack)
  array_obj_ref_312_index_0_rename <=> (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_index_scale_0/scale_rename_ack)
  array_obj_ref_312_offset_inst <=> (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_add_indices/final_index_ack)
  array_obj_ref_312_root_address_inst <=> (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_base_plus_offset/sum_rename_ack)
  array_obj_ref_312_addr_0 <=> (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_word_addrgen/root_rename_ack)
  array_obj_ref_312_gather_scatter <=> (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_complete/merge_req) (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_complete/merge_ack)
  array_obj_ref_312_load_0 <=> (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_313/array_obj_ref_312_complete/word_access/word_access_0/ca)
  // next_pc
  simple_obj_ref_308_inst <=> (branch_block_stmt_160/assign_stmt_313/simple_obj_ref_308_complete/pipe_wreq) (branch_block_stmt_160/assign_stmt_313/simple_obj_ref_308_complete/pipe_wack)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 188
  // 		next_pc := ((pc + offs) + reg[r1])
  //  file processorSuper.aa, line 190
  // (pc + offs)
  binary_319_inst <=> (branch_block_stmt_160/assign_stmt_323/binary_319_complete/rr branch_block_stmt_160/assign_stmt_323/binary_319_complete/cr) (branch_block_stmt_160/assign_stmt_323/binary_319_complete/ra branch_block_stmt_160/assign_stmt_323/binary_319_complete/ca)
  // reg[r1]
  array_obj_ref_321_index_0_resize <=> (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_index_resize_0/index_resize_ack)
  array_obj_ref_321_index_0_rename <=> (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_index_scale_0/scale_rename_ack)
  array_obj_ref_321_offset_inst <=> (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_add_indices/final_index_ack)
  array_obj_ref_321_root_address_inst <=> (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_base_plus_offset/sum_rename_ack)
  array_obj_ref_321_addr_0 <=> (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_word_addrgen/root_rename_ack)
  array_obj_ref_321_gather_scatter <=> (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_complete/merge_req) (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_complete/merge_ack)
  array_obj_ref_321_load_0 <=> (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_323/array_obj_ref_321_complete/word_access/word_access_0/ca)
  // ((pc + offs) + reg[r1])
  binary_322_inst <=> (branch_block_stmt_160/assign_stmt_323/binary_322_complete/rr branch_block_stmt_160/assign_stmt_323/binary_322_complete/cr) (branch_block_stmt_160/assign_stmt_323/binary_322_complete/ra branch_block_stmt_160/assign_stmt_323/binary_322_complete/ca)
  // next_pc
  simple_obj_ref_316_inst <=> (branch_block_stmt_160/assign_stmt_323/simple_obj_ref_316_complete/pipe_wreq) (branch_block_stmt_160/assign_stmt_323/simple_obj_ref_316_complete/pipe_wack)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 193
  // CP-DP links for if  
  //  file processorSuper.aa, line 195
  // reg[r1]
  array_obj_ref_328_index_0_resize <=> (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/scale_indices/idx_0/index_resize_req) (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/scale_indices/idx_0/index_resize_ack)
  array_obj_ref_328_index_0_rename <=> (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/scale_indices/idx_0/scale_rename_req) (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/scale_indices/idx_0/scale_rename_ack)
  array_obj_ref_328_offset_inst <=> (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/add_indices/final_index_req) (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/add_indices/final_index_ack)
  array_obj_ref_328_root_address_inst <=> (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/sum_rename_req) (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/sum_rename_ack)
  array_obj_ref_328_addr_0 <=> (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/root_rename_req) (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_addr_gen/root_rename_ack)
  array_obj_ref_328_gather_scatter <=> (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_read/merge_req) (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_read/merge_ack)
  array_obj_ref_328_load_0 <=> (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_read/word_access/word_access_0/rr branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_read/word_access/word_access_0/cr) (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_read/word_access/word_access_0/ra branch_block_stmt_160/if_stmt_326_eval_test/binary_330/binary_330_inputs/array_obj_ref_328/array_obj_ref_328_read/word_access/word_access_0/ca)
  // (reg[r1] == 0 )
  binary_330_inst <=> (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/rr branch_block_stmt_160/if_stmt_326_eval_test/binary_330/cr) (branch_block_stmt_160/if_stmt_326_eval_test/binary_330/ra branch_block_stmt_160/if_stmt_326_eval_test/binary_330/ca)
  if_stmt_326_branch <=> (branch_block_stmt_160/if_stmt_326_eval_test/branch_req) (branch_block_stmt_160/if_stmt_326_else_link/else_choice_transition branch_block_stmt_160/if_stmt_326_if_link/if_choice_transition)
  // 			next_pc := (pc + offs)
  //  file processorSuper.aa, line 196
  // (pc + offs)
  binary_334_inst <=> (branch_block_stmt_160/assign_stmt_335/binary_334_complete/rr branch_block_stmt_160/assign_stmt_335/binary_334_complete/cr) (branch_block_stmt_160/assign_stmt_335/binary_334_complete/ra branch_block_stmt_160/assign_stmt_335/binary_334_complete/ca)
  // next_pc
  simple_obj_ref_331_inst <=> (branch_block_stmt_160/assign_stmt_335/simple_obj_ref_331_complete/pipe_wreq) (branch_block_stmt_160/assign_stmt_335/simple_obj_ref_331_complete/pipe_wack)
  // 			next_pc := (pc + 1 )
  //  file processorSuper.aa, line 198
  // (pc + 1 )
  binary_340_inst <=> (branch_block_stmt_160/assign_stmt_341/binary_340_complete/rr branch_block_stmt_160/assign_stmt_341/binary_340_complete/cr) (branch_block_stmt_160/assign_stmt_341/binary_340_complete/ra branch_block_stmt_160/assign_stmt_341/binary_340_complete/ca)
  // next_pc
  simple_obj_ref_337_inst <=> (branch_block_stmt_160/assign_stmt_341/simple_obj_ref_337_complete/pipe_wreq) (branch_block_stmt_160/assign_stmt_341/simple_obj_ref_337_complete/pipe_wack)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 202
  // 		out_port := reg[r1]
  //  file processorSuper.aa, line 204
  // reg[r1]
  array_obj_ref_347_index_0_resize <=> (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_index_resize_0/index_resize_req) (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_index_resize_0/index_resize_ack)
  array_obj_ref_347_index_0_rename <=> (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_index_scale_0/scale_rename_req) (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_index_scale_0/scale_rename_ack)
  array_obj_ref_347_offset_inst <=> (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_add_indices/final_index_req) (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_add_indices/final_index_ack)
  array_obj_ref_347_root_address_inst <=> (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_base_plus_offset/sum_rename_req) (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_base_plus_offset/sum_rename_ack)
  array_obj_ref_347_addr_0 <=> (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_word_addrgen/root_rename_req) (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_word_addrgen/root_rename_ack)
  array_obj_ref_347_gather_scatter <=> (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_complete/merge_req) (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_complete/merge_ack)
  array_obj_ref_347_load_0 <=> (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_request/word_access/word_access_0/rr branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_complete/word_access/word_access_0/cr) (branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_request/word_access/word_access_0/ra branch_block_stmt_160/assign_stmt_348/array_obj_ref_347_complete/word_access/word_access_0/ca)
  // out_port
  simple_obj_ref_345_inst <=> (branch_block_stmt_160/assign_stmt_348/simple_obj_ref_345_complete/pipe_wreq) (branch_block_stmt_160/assign_stmt_348/simple_obj_ref_345_complete/pipe_wack)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 207
  // CP-DP links for merge  
  //  file processorSuper.aa, line 211
}
$module [fetch] 
{
  // pipe-declarations for block %fetch
  //  file processorSuper.aa, line 43
  // pipe-declarations for block %fetch%body
  //  file processorSuper.aa, line 48
  // pipe-declarations for block %fetch%body%
  //  file processorSuper.aa, line 50
  // pipe-declarations for block %fetch%body%wp
  //  file processorSuper.aa, line 54
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_52] // Branch Block  file processorSuper.aa, line 48
    {
      $P [branch_block_stmt_52__entry__]
      branch_block_stmt_52__entry__ <-| ($entry)
      $P [branch_block_stmt_52__exit__]
      branch_block_stmt_52__exit__ |-> ($exit)
      $P [merge_stmt_53__entry__] 
      $P [merge_stmt_53__exit__] 
      $P [assign_stmt_56__entry__] 
      $P [assign_stmt_56__exit__] 
      $P [assign_stmt_60__entry__] 
      $P [assign_stmt_60__exit__] 
      $P [parallel_block_stmt_61__entry__] 
      $P [parallel_block_stmt_61__exit__] 
      $P [if_stmt_79__entry__] 
      $P [if_stmt_79__exit__] 
      $P [bb_1_bb_1]
      ::[assign_stmt_56] 
      {
        // 		pc := next_pc
        //  file processorSuper.aa, line 52
        $T[assign_stmt_56_active_] 
        $T[assign_stmt_56_completed_] 
        // next_pc
        $T[simple_obj_ref_55_trigger_] 
        $T[simple_obj_ref_55_completed_] 
        ;;[simple_obj_ref_55_complete] 
        {
          // pipe read
          $T [req] $T [ack] 
        }
        simple_obj_ref_55_completed_ <-& (simple_obj_ref_55_complete)
        simple_obj_ref_55_trigger_ &-> (simple_obj_ref_55_complete)
        assign_stmt_56_active_ <-& (simple_obj_ref_55_completed_)
        // pc
        // implicit reference
        assign_stmt_56_completed_ <-& (assign_stmt_56_active_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe next_pc
      }
      assign_stmt_56__entry__ |-> (assign_stmt_56)
      assign_stmt_56__exit__ <-| (assign_stmt_56)
      ::[assign_stmt_60] 
      {
        // 		instr := mem[pc]
        //  file processorSuper.aa, line 53
        $T[assign_stmt_60_active_] 
        $T[assign_stmt_60_completed_] 
        // mem[pc]
        $T[array_obj_ref_59_trigger_] 
        $T[array_obj_ref_59_active_] 
        $T[array_obj_ref_59_completed_] 
        $T[array_obj_ref_59_root_address_calculated] 
        $T[array_obj_ref_59_word_address_calculated] 
        $T[array_obj_ref_59_root_address_calculated] 
        $T[array_obj_ref_59_indices_scaled] 
        $T[array_obj_ref_59_offset_calculated] 
        $T[array_obj_ref_59_index_computed_0] 
        $T[array_obj_ref_59_index_resized_0] 
        // pc
        // implicit reference
        $T[simple_obj_ref_58_completed_] 
        array_obj_ref_59_index_computed_0 <-& (simple_obj_ref_58_completed_)
        ;;[array_obj_ref_59_index_resize_0] 
        {
          $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
        }
        array_obj_ref_59_index_computed_0 &-> (array_obj_ref_59_index_resize_0)
        array_obj_ref_59_index_resized_0 <-& (array_obj_ref_59_index_resize_0)
        ;;[array_obj_ref_59_index_scale_0] 
        {
          $T [scale_rename_req] $T [scale_rename_ack] // rename 
        }
        array_obj_ref_59_index_resized_0 &-> (array_obj_ref_59_index_scale_0)
        array_obj_ref_59_indices_scaled <-& (array_obj_ref_59_index_scale_0)
        ;;[array_obj_ref_59_add_indices] 
        {
          $T [final_index_req] $T [final_index_ack] // rename
        }
        array_obj_ref_59_indices_scaled &-> (array_obj_ref_59_add_indices)
        array_obj_ref_59_offset_calculated <-& (array_obj_ref_59_add_indices)
        ;;[array_obj_ref_59_base_plus_offset] 
        {
          $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
        }
        array_obj_ref_59_offset_calculated &-> (array_obj_ref_59_base_plus_offset)
        array_obj_ref_59_root_address_calculated <-& (array_obj_ref_59_base_plus_offset)
        ;;[array_obj_ref_59_word_addrgen] 
        {
          $T [root_rename_req] $T [root_rename_ack]
        }
        array_obj_ref_59_root_address_calculated &-> (array_obj_ref_59_word_addrgen)
        array_obj_ref_59_word_address_calculated <-& (array_obj_ref_59_word_addrgen)
        ;;[array_obj_ref_59_request] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_59_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
          $T [merge_req] $T [merge_ack]
        }
        array_obj_ref_59_trigger_ &-> (array_obj_ref_59_request)
        array_obj_ref_59_active_ <-& (array_obj_ref_59_request)
        array_obj_ref_59_active_ &-> (array_obj_ref_59_complete)
        array_obj_ref_59_completed_ <-& (array_obj_ref_59_complete)
        array_obj_ref_59_trigger_ <-& (array_obj_ref_59_word_address_calculated)
        assign_stmt_60_active_ <-& (array_obj_ref_59_completed_)
        // instr
        // implicit reference
        assign_stmt_60_completed_ <-& (assign_stmt_60_active_)
        // load-store dependencies..
      }
      assign_stmt_60__entry__ |-> (assign_stmt_60)
      assign_stmt_60__exit__ <-| (assign_stmt_60)
      ||[parallel_block_stmt_61] 
      {
        ::[assign_stmt_64] 
        {
          // 			ir_pipe := instr
          //  file processorSuper.aa, line 55
          $T[assign_stmt_64_active_] 
          $T[assign_stmt_64_completed_] 
          // instr
          // implicit reference
          $T[simple_obj_ref_63_completed_] 
          assign_stmt_64_active_ <-& (simple_obj_ref_63_completed_)
          // ir_pipe
          $T[simple_obj_ref_62_trigger_] 
          $T[simple_obj_ref_62_completed_] 
          ;;[simple_obj_ref_62_complete] 
          {
            // pipe write ir_pipe
            $T [pipe_wreq] $T [pipe_wack] 
          }
          simple_obj_ref_62_completed_ <-& (simple_obj_ref_62_complete)
          simple_obj_ref_62_trigger_ &-> (simple_obj_ref_62_complete)
          simple_obj_ref_62_trigger_ <-& (assign_stmt_64_active_)
          assign_stmt_64_completed_ <-& (simple_obj_ref_62_completed_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe ir_pipe
        }
        ::[assign_stmt_67] 
        {
          // 			pc_to_decode := pc
          //  file processorSuper.aa, line 56
          $T[assign_stmt_67_active_] 
          $T[assign_stmt_67_completed_] 
          // pc
          // implicit reference
          $T[simple_obj_ref_66_completed_] 
          assign_stmt_67_active_ <-& (simple_obj_ref_66_completed_)
          // pc_to_decode
          $T[simple_obj_ref_65_trigger_] 
          $T[simple_obj_ref_65_completed_] 
          ;;[simple_obj_ref_65_complete] 
          {
            // pipe write pc_to_decode
            $T [pipe_wreq] $T [pipe_wack] 
          }
          simple_obj_ref_65_completed_ <-& (simple_obj_ref_65_complete)
          simple_obj_ref_65_trigger_ &-> (simple_obj_ref_65_complete)
          simple_obj_ref_65_trigger_ <-& (assign_stmt_67_active_)
          assign_stmt_67_completed_ <-& (simple_obj_ref_65_completed_)
          // load-store dependencies..
          // pipe read/write dependencies for pipe pc_to_decode
        }
        ::[assign_stmt_72] 
        {
          // 			op := (instr >> 12 )
          //  file processorSuper.aa, line 57
          $T[assign_stmt_72_active_] 
          $T[assign_stmt_72_completed_] 
          // (instr >> 12 )
          $T[binary_71_active_] 
          $T[binary_71_trigger_] 
          $T[binary_71_completed_] 
          binary_71_active_ <-& (binary_71_trigger_)
          // instr
          // implicit reference
          $T[simple_obj_ref_69_completed_] 
          binary_71_active_ <-& (simple_obj_ref_69_completed_)
          ;;[binary_71_complete] 
          {
            // binary expression 
            $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
          }
          binary_71_active_ &-> (binary_71_complete)
          binary_71_completed_ <-& (binary_71_complete)
          assign_stmt_72_active_ <-& (binary_71_completed_)
          // op
          // implicit reference
          assign_stmt_72_completed_ <-& (assign_stmt_72_active_)
          // load-store dependencies..
        }
        ::[assign_stmt_77] 
        {
          // 			npc := (pc + 1 )
          //  file processorSuper.aa, line 58
          $T[assign_stmt_77_active_] 
          $T[assign_stmt_77_completed_] 
          // (pc + 1 )
          $T[binary_76_active_] 
          $T[binary_76_trigger_] 
          $T[binary_76_completed_] 
          binary_76_active_ <-& (binary_76_trigger_)
          // pc
          // implicit reference
          $T[simple_obj_ref_74_completed_] 
          binary_76_active_ <-& (simple_obj_ref_74_completed_)
          ;;[binary_76_complete] 
          {
            // binary expression 
            $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
          }
          binary_76_active_ &-> (binary_76_complete)
          binary_76_completed_ <-& (binary_76_complete)
          assign_stmt_77_active_ <-& (binary_76_completed_)
          // npc
          // implicit reference
          assign_stmt_77_completed_ <-& (assign_stmt_77_active_)
          // load-store dependencies..
        }
      }
      parallel_block_stmt_61__entry__ |-> (parallel_block_stmt_61)
      parallel_block_stmt_61__exit__ <-| (parallel_block_stmt_61)
      // if-statement  
      //  file processorSuper.aa, line 0
      ;;[if_stmt_79_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      if_stmt_79__entry__ |-> (if_stmt_79_dead_link)
      if_stmt_79__exit__ <-| (if_stmt_79_dead_link)
      ;;[if_stmt_79_eval_test] 
      {
        // test expression evaluate and trigger branch 
        // ((op != 0 ) & ((op < 8 ) | (op > 10 )))
        ;;[binary_91] 
        {
          // binary expression 
          ||[binary_91_inputs] 
          {
            // (op != 0 )
            ;;[binary_82] 
            {
              // binary expression 
              ||[binary_82_inputs] 
              {
              }
              $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
            }
            // ((op < 8 ) | (op > 10 ))
            ;;[binary_90] 
            {
              // binary expression 
              ||[binary_90_inputs] 
              {
                // (op < 8 )
                ;;[binary_86] 
                {
                  // binary expression 
                  ||[binary_86_inputs] 
                  {
                  }
                  $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
                }
                // (op > 10 )
                ;;[binary_89] 
                {
                  // binary expression 
                  ||[binary_89_inputs] 
                  {
                  }
                  $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
                }
              }
              $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
            }
          }
          $T [rr] $T [ra] $T [cr] $T [ca] // (split) binary operation 
        }
        $T [branch_req] 
      }
      if_stmt_79__entry__ |-> (if_stmt_79_eval_test)
      $P [binary_91_place]
      binary_91_place <-| (if_stmt_79_eval_test)
      ;;[if_stmt_79_if_link] 
      {
        $T [if_choice_transition] 
      }
      ;;[if_stmt_79_else_link] 
      {
        $T [else_choice_transition] 
      }
      binary_91_place |-> (if_stmt_79_if_link if_stmt_79_else_link)
      $P [assign_stmt_94__entry__] 
      $P [assign_stmt_94__exit__] 
      ::[assign_stmt_94] 
      {
        // 			next_pc := npc
        //  file processorSuper.aa, line 61
        $T[assign_stmt_94_active_] 
        $T[assign_stmt_94_completed_] 
        // npc
        // implicit reference
        $T[simple_obj_ref_93_completed_] 
        assign_stmt_94_active_ <-& (simple_obj_ref_93_completed_)
        // next_pc
        $T[simple_obj_ref_92_trigger_] 
        $T[simple_obj_ref_92_completed_] 
        ;;[simple_obj_ref_92_complete] 
        {
          // pipe write next_pc
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_92_completed_ <-& (simple_obj_ref_92_complete)
        simple_obj_ref_92_trigger_ &-> (simple_obj_ref_92_complete)
        simple_obj_ref_92_trigger_ <-& (assign_stmt_94_active_)
        assign_stmt_94_completed_ <-& (simple_obj_ref_92_completed_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe next_pc
      }
      assign_stmt_94__entry__ |-> (assign_stmt_94)
      assign_stmt_94__exit__ <-| (assign_stmt_94)
      assign_stmt_94__entry__ <-| (if_stmt_79_if_link)
      assign_stmt_94__exit__ |-> (if_stmt_79__exit__)
      if_stmt_79__exit__ <-| (if_stmt_79_else_link)
      // control-path for merge  
      //  file processorSuper.aa, line 50
      ;;[merge_stmt_53_dead_link] 
      {
        $T [dead_transition] $dead 
      }
      merge_stmt_53__entry__ |-> (merge_stmt_53_dead_link)
      merge_stmt_53__exit__ <-| (merge_stmt_53_dead_link)
      //---------------------   merge statement  file processorSuper.aa, line 50  --------------------------
      ||[merge_stmt_53__entry___PhiReq] 
      {
        // no phi statements in merge..
      }
      merge_stmt_53__entry__ |-> (merge_stmt_53__entry___PhiReq)
      ||[bb_1_bb_1_PhiReq] 
      {
        // no phi statements in merge..
      }
      bb_1_bb_1 |-> (bb_1_bb_1_PhiReq)
      $P [merge_stmt_53_PhiReqMerge] 
      merge_stmt_53_PhiReqMerge <-| ( merge_stmt_53__entry___PhiReq  bb_1_bb_1_PhiReq )
      ||[merge_stmt_53_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_53_PhiReqMerge |-> (merge_stmt_53_PhiAck)
      merge_stmt_53__exit__  <-| (merge_stmt_53_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 50  --------------------------
      merge_stmt_53__entry__ <-| (branch_block_stmt_52__entry__)
      assign_stmt_56__entry__ <-| (merge_stmt_53__exit__)
      assign_stmt_60__entry__ <-| (assign_stmt_56__exit__)
      parallel_block_stmt_61__entry__ <-| (assign_stmt_60__exit__)
      if_stmt_79__entry__ <-| (parallel_block_stmt_61__exit__)
      bb_1_bb_1 <-| (if_stmt_79__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %fetch%body%
    //  file processorSuper.aa, line 50
    // constant-object-declarations for block %fetch%body%wp
    //  file processorSuper.aa, line 54
    // constant-object-declarations for block %fetch%body
    //  file processorSuper.aa, line 48
    // constant-object-declarations for block %fetch
    //  file processorSuper.aa, line 43
    // constant-declarations for block %fetch%body
    //  file processorSuper.aa, line 48
    // constant-declarations for block %fetch%body%
    //  file processorSuper.aa, line 50
    // mem[pc]
    $constant $W[array_obj_ref_59_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_59_offset_scale_factor_0] : $int<7> := _b0000001// 1
    $constant $W[array_obj_ref_59_word_offset_0] : $int<7> := _b0000000// 0
    // constant-declarations for block %fetch%body%wp
    //  file processorSuper.aa, line 54
    // 12 
    $constant $W[expr_70_wire_constant] : $int<16> := _b0000000000001100// 12
    // 1 
    $constant $W[expr_75_wire_constant] : $int<16> := _b0000000000000001// 1
    // if-statement  
    //  file processorSuper.aa, line 0
    // 0 
    $constant $W[expr_81_wire_constant] : $int<16> := _b0000000000000000// 0
    // 8 
    $constant $W[expr_85_wire_constant] : $int<16> := _b0000000000001000// 8
    // 10 
    $constant $W[expr_88_wire_constant] : $int<16> := _b0000000000001010// 10
    // block %fetch%body
    //  file processorSuper.aa, line 48
    // 		pc := next_pc
    //  file processorSuper.aa, line 52
    // pc
    $W[pc_56] : $int<16>
    // 		instr := mem[pc]
    //  file processorSuper.aa, line 53
    // mem[pc]
    $intermediate $W[simple_obj_ref_58_resized] : $int<7>
    $intermediate $W[simple_obj_ref_58_scaled] : $int<7>
    $intermediate $W[array_obj_ref_59_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_59_root_address] : $int<7>
    $W[array_obj_ref_59_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_59_data_0] : $int<16>
    // instr
    $W[instr_60] : $int<16>
    // block %fetch%body%wp
    //  file processorSuper.aa, line 54
    // 			ir_pipe := instr
    //  file processorSuper.aa, line 55
    // ir_pipe
    // 			pc_to_decode := pc
    //  file processorSuper.aa, line 56
    // pc_to_decode
    // 			op := (instr >> 12 )
    //  file processorSuper.aa, line 57
    // op
    $W[op_72] : $int<16>
    // 			npc := (pc + 1 )
    //  file processorSuper.aa, line 58
    // npc
    $W[npc_77] : $int<16>
    // if statement  
    //  file processorSuper.aa, line 0
    // (op != 0 )
    $intermediate $W[binary_82_wire] : $int<1>
    // (op < 8 )
    $intermediate $W[binary_86_wire] : $int<1>
    // (op > 10 )
    $intermediate $W[binary_89_wire] : $int<1>
    // ((op < 8 ) | (op > 10 ))
    $intermediate $W[binary_90_wire] : $int<1>
    // ((op != 0 ) & ((op < 8 ) | (op > 10 )))
    $intermediate $W[binary_91_wire] : $int<1>
    // 			next_pc := npc
    //  file processorSuper.aa, line 61
    // next_pc
    // datapath-instances for block %fetch%body
    //  file processorSuper.aa, line 48
    // 		pc := next_pc
    //  file processorSuper.aa, line 52
    // next_pc
    $ioport $in [simple_obj_ref_55_inst] (next_pc) (pc_56)
    // 		instr := mem[pc]
    //  file processorSuper.aa, line 53
    // mem[pc]
    := [array_obj_ref_59_index_0_resize] (pc_56) (simple_obj_ref_58_resized)
    &/ [array_obj_ref_59_index_0_rename] (simple_obj_ref_58_resized) (simple_obj_ref_58_scaled) 
    := [array_obj_ref_59_offset_inst] (simple_obj_ref_58_scaled) (array_obj_ref_59_final_offset)
    &/ [array_obj_ref_59_root_address_inst] (array_obj_ref_59_final_offset) (array_obj_ref_59_root_address) 
    &/ [array_obj_ref_59_addr_0] (array_obj_ref_59_root_address) (array_obj_ref_59_word_address_0) 
    $load [array_obj_ref_59_load_0] $from memory_space_0 (array_obj_ref_59_word_address_0) (array_obj_ref_59_data_0)
    &/ [array_obj_ref_59_gather_scatter] (array_obj_ref_59_data_0) (instr_60) 
    // datapath-instances for block %fetch%body%wp
    //  file processorSuper.aa, line 54
    // 			ir_pipe := instr
    //  file processorSuper.aa, line 55
    // ir_pipe
    $ioport $out [simple_obj_ref_62_inst]  (instr_60) (ir_pipe)
    // 			pc_to_decode := pc
    //  file processorSuper.aa, line 56
    // pc_to_decode
    $ioport $out [simple_obj_ref_65_inst]  (pc_56) (pc_to_decode)
    // 			op := (instr >> 12 )
    //  file processorSuper.aa, line 57
    // (instr >> 12 )
    >>[binary_71_inst] (instr_60 expr_70_wire_constant) (op_72)
    // 			npc := (pc + 1 )
    //  file processorSuper.aa, line 58
    // (pc + 1 )
    +[binary_76_inst] (pc_56 expr_75_wire_constant) (npc_77)
    // datapath-instances for if  
    //  file processorSuper.aa, line 0
    // (op != 0 )
    !=[binary_82_inst] (op_72 expr_81_wire_constant) (binary_82_wire)
    // (op < 8 )
    <[binary_86_inst] (op_72 expr_85_wire_constant) (binary_86_wire)
    // (op > 10 )
    >[binary_89_inst] (op_72 expr_88_wire_constant) (binary_89_wire)
    // ((op < 8 ) | (op > 10 ))
    |[binary_90_inst] (binary_86_wire binary_89_wire) (binary_90_wire)
    // ((op != 0 ) & ((op < 8 ) | (op > 10 )))
    &[binary_91_inst] (binary_82_wire binary_90_wire) (binary_91_wire)
    ==0? [if_stmt_79_branch] (binary_91_wire)
    // 			next_pc := npc
    //  file processorSuper.aa, line 61
    // next_pc
    $ioport $out [simple_obj_ref_92_inst]  (npc_77) (next_pc)
  }
  // end data-path
  // CP-DP links for merge  
  //  file processorSuper.aa, line 50
  // 		pc := next_pc
  //  file processorSuper.aa, line 52
  // next_pc
  simple_obj_ref_55_inst <=> (branch_block_stmt_52/assign_stmt_56/simple_obj_ref_55_complete/req) (branch_block_stmt_52/assign_stmt_56/simple_obj_ref_55_complete/ack)
  // 		instr := mem[pc]
  //  file processorSuper.aa, line 53
  // mem[pc]
  array_obj_ref_59_index_0_resize <=> (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_index_resize_0/index_resize_req) (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_index_resize_0/index_resize_ack)
  array_obj_ref_59_index_0_rename <=> (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_index_scale_0/scale_rename_req) (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_index_scale_0/scale_rename_ack)
  array_obj_ref_59_offset_inst <=> (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_add_indices/final_index_req) (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_add_indices/final_index_ack)
  array_obj_ref_59_root_address_inst <=> (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_base_plus_offset/sum_rename_req) (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_base_plus_offset/sum_rename_ack)
  array_obj_ref_59_addr_0 <=> (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_word_addrgen/root_rename_req) (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_word_addrgen/root_rename_ack)
  array_obj_ref_59_gather_scatter <=> (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_complete/merge_req) (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_complete/merge_ack)
  array_obj_ref_59_load_0 <=> (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_request/word_access/word_access_0/rr branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_complete/word_access/word_access_0/cr) (branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_request/word_access/word_access_0/ra branch_block_stmt_52/assign_stmt_60/array_obj_ref_59_complete/word_access/word_access_0/ca)
  // 			ir_pipe := instr
  //  file processorSuper.aa, line 55
  // ir_pipe
  simple_obj_ref_62_inst <=> (branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_64/simple_obj_ref_62_complete/pipe_wreq) (branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_64/simple_obj_ref_62_complete/pipe_wack)
  // 			pc_to_decode := pc
  //  file processorSuper.aa, line 56
  // pc_to_decode
  simple_obj_ref_65_inst <=> (branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_67/simple_obj_ref_65_complete/pipe_wreq) (branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_67/simple_obj_ref_65_complete/pipe_wack)
  // 			op := (instr >> 12 )
  //  file processorSuper.aa, line 57
  // (instr >> 12 )
  binary_71_inst <=> (branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_72/binary_71_complete/rr branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_72/binary_71_complete/cr) (branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_72/binary_71_complete/ra branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_72/binary_71_complete/ca)
  // 			npc := (pc + 1 )
  //  file processorSuper.aa, line 58
  // (pc + 1 )
  binary_76_inst <=> (branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_77/binary_76_complete/rr branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_77/binary_76_complete/cr) (branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_77/binary_76_complete/ra branch_block_stmt_52/parallel_block_stmt_61/assign_stmt_77/binary_76_complete/ca)
  // CP-DP links for if  
  //  file processorSuper.aa, line 0
  // (op != 0 )
  binary_82_inst <=> (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_82/rr branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_82/cr) (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_82/ra branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_82/ca)
  // (op < 8 )
  binary_86_inst <=> (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/binary_90_inputs/binary_86/rr branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/binary_90_inputs/binary_86/cr) (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/binary_90_inputs/binary_86/ra branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/binary_90_inputs/binary_86/ca)
  // (op > 10 )
  binary_89_inst <=> (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/binary_90_inputs/binary_89/rr branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/binary_90_inputs/binary_89/cr) (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/binary_90_inputs/binary_89/ra branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/binary_90_inputs/binary_89/ca)
  // ((op < 8 ) | (op > 10 ))
  binary_90_inst <=> (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/rr branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/cr) (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/ra branch_block_stmt_52/if_stmt_79_eval_test/binary_91/binary_91_inputs/binary_90/ca)
  // ((op != 0 ) & ((op < 8 ) | (op > 10 )))
  binary_91_inst <=> (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/rr branch_block_stmt_52/if_stmt_79_eval_test/binary_91/cr) (branch_block_stmt_52/if_stmt_79_eval_test/binary_91/ra branch_block_stmt_52/if_stmt_79_eval_test/binary_91/ca)
  if_stmt_79_branch <=> (branch_block_stmt_52/if_stmt_79_eval_test/branch_req) (branch_block_stmt_52/if_stmt_79_else_link/else_choice_transition branch_block_stmt_52/if_stmt_79_if_link/if_choice_transition)
  // 			next_pc := npc
  //  file processorSuper.aa, line 61
  // next_pc
  simple_obj_ref_92_inst <=> (branch_block_stmt_52/assign_stmt_94/simple_obj_ref_92_complete/pipe_wreq) (branch_block_stmt_52/assign_stmt_94/simple_obj_ref_92_complete/pipe_wack)
}
$module [read_from_mem] 
{
  $in mem_addr:$int<16>
  // can point into  foreign( $void )
  $out ret_val__:$int<16>
  // can point into  foreign( $void )
  // pipe-declarations for block %read_from_mem
  //  file processorSuper.aa, line 35
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_49] 
    {
      // 	ret_val__ := mem[mem_addr]
      //  file processorSuper.aa, line 40
      $T[assign_stmt_49_active_] 
      $T[assign_stmt_49_completed_] 
      // mem[mem_addr]
      $T[array_obj_ref_48_trigger_] 
      $T[array_obj_ref_48_active_] 
      $T[array_obj_ref_48_completed_] 
      $T[array_obj_ref_48_root_address_calculated] 
      $T[array_obj_ref_48_word_address_calculated] 
      $T[array_obj_ref_48_root_address_calculated] 
      $T[array_obj_ref_48_indices_scaled] 
      $T[array_obj_ref_48_offset_calculated] 
      $T[array_obj_ref_48_index_computed_0] 
      $T[array_obj_ref_48_index_resized_0] 
      // mem_addr
      // reference to interface object
      $T[simple_obj_ref_47_completed_] 
      array_obj_ref_48_index_computed_0 <-& (simple_obj_ref_47_completed_)
      ;;[array_obj_ref_48_index_resize_0] 
      {
        $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
      }
      array_obj_ref_48_index_computed_0 &-> (array_obj_ref_48_index_resize_0)
      array_obj_ref_48_index_resized_0 <-& (array_obj_ref_48_index_resize_0)
      ;;[array_obj_ref_48_index_scale_0] 
      {
        $T [scale_rename_req] $T [scale_rename_ack] // rename 
      }
      array_obj_ref_48_index_resized_0 &-> (array_obj_ref_48_index_scale_0)
      array_obj_ref_48_indices_scaled <-& (array_obj_ref_48_index_scale_0)
      ;;[array_obj_ref_48_add_indices] 
      {
        $T [final_index_req] $T [final_index_ack] // rename
      }
      array_obj_ref_48_indices_scaled &-> (array_obj_ref_48_add_indices)
      array_obj_ref_48_offset_calculated <-& (array_obj_ref_48_add_indices)
      ;;[array_obj_ref_48_base_plus_offset] 
      {
        $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
      }
      array_obj_ref_48_offset_calculated &-> (array_obj_ref_48_base_plus_offset)
      array_obj_ref_48_root_address_calculated <-& (array_obj_ref_48_base_plus_offset)
      ;;[array_obj_ref_48_word_addrgen] 
      {
        $T [root_rename_req] $T [root_rename_ack]
      }
      array_obj_ref_48_root_address_calculated &-> (array_obj_ref_48_word_addrgen)
      array_obj_ref_48_word_address_calculated <-& (array_obj_ref_48_word_addrgen)
      ;;[array_obj_ref_48_request] 
      {
        ||[word_access] 
        {
          ;;[word_access_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_48_complete] 
      {
        ||[word_access] 
        {
          ;;[word_access_0] 
          {
            $T [cr] $T [ca] 
          }
        }
        $T [merge_req] $T [merge_ack]
      }
      array_obj_ref_48_trigger_ &-> (array_obj_ref_48_request)
      array_obj_ref_48_active_ <-& (array_obj_ref_48_request)
      array_obj_ref_48_active_ &-> (array_obj_ref_48_complete)
      array_obj_ref_48_completed_ <-& (array_obj_ref_48_complete)
      array_obj_ref_48_trigger_ <-& (array_obj_ref_48_word_address_calculated)
      assign_stmt_49_active_ <-& (array_obj_ref_48_completed_)
      // ret_val__
      // implicit reference
      assign_stmt_49_completed_ <-& (assign_stmt_49_active_)
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %read_from_mem
    //  file processorSuper.aa, line 35
    // mem[mem_addr]
    $constant $W[array_obj_ref_48_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_48_offset_scale_factor_0] : $int<7> := _b0000001// 1
    $constant $W[array_obj_ref_48_word_offset_0] : $int<7> := _b0000000// 0
    // 	ret_val__ := mem[mem_addr]
    //  file processorSuper.aa, line 40
    // mem[mem_addr]
    $intermediate $W[simple_obj_ref_47_resized] : $int<7>
    $intermediate $W[simple_obj_ref_47_scaled] : $int<7>
    $intermediate $W[array_obj_ref_48_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_48_root_address] : $int<7>
    $W[array_obj_ref_48_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_48_data_0] : $int<16>
    // ret_val__
    // 	ret_val__ := mem[mem_addr]
    //  file processorSuper.aa, line 40
    // mem[mem_addr]
    := [array_obj_ref_48_index_0_resize] (mem_addr) (simple_obj_ref_47_resized)
    &/ [array_obj_ref_48_index_0_rename] (simple_obj_ref_47_resized) (simple_obj_ref_47_scaled) 
    := [array_obj_ref_48_offset_inst] (simple_obj_ref_47_scaled) (array_obj_ref_48_final_offset)
    &/ [array_obj_ref_48_root_address_inst] (array_obj_ref_48_final_offset) (array_obj_ref_48_root_address) 
    &/ [array_obj_ref_48_addr_0] (array_obj_ref_48_root_address) (array_obj_ref_48_word_address_0) 
    $load [array_obj_ref_48_load_0] $from memory_space_0 (array_obj_ref_48_word_address_0) (array_obj_ref_48_data_0)
    &/ [array_obj_ref_48_gather_scatter] (array_obj_ref_48_data_0) (ret_val__) 
  }
  // end data-path
  // 	ret_val__ := mem[mem_addr]
  //  file processorSuper.aa, line 40
  // mem[mem_addr]
  array_obj_ref_48_index_0_resize <=> (assign_stmt_49/array_obj_ref_48_index_resize_0/index_resize_req) (assign_stmt_49/array_obj_ref_48_index_resize_0/index_resize_ack)
  array_obj_ref_48_index_0_rename <=> (assign_stmt_49/array_obj_ref_48_index_scale_0/scale_rename_req) (assign_stmt_49/array_obj_ref_48_index_scale_0/scale_rename_ack)
  array_obj_ref_48_offset_inst <=> (assign_stmt_49/array_obj_ref_48_add_indices/final_index_req) (assign_stmt_49/array_obj_ref_48_add_indices/final_index_ack)
  array_obj_ref_48_root_address_inst <=> (assign_stmt_49/array_obj_ref_48_base_plus_offset/sum_rename_req) (assign_stmt_49/array_obj_ref_48_base_plus_offset/sum_rename_ack)
  array_obj_ref_48_addr_0 <=> (assign_stmt_49/array_obj_ref_48_word_addrgen/root_rename_req) (assign_stmt_49/array_obj_ref_48_word_addrgen/root_rename_ack)
  array_obj_ref_48_gather_scatter <=> (assign_stmt_49/array_obj_ref_48_complete/merge_req) (assign_stmt_49/array_obj_ref_48_complete/merge_ack)
  array_obj_ref_48_load_0 <=> (assign_stmt_49/array_obj_ref_48_request/word_access/word_access_0/rr assign_stmt_49/array_obj_ref_48_complete/word_access/word_access_0/cr) (assign_stmt_49/array_obj_ref_48_request/word_access/word_access_0/ra assign_stmt_49/array_obj_ref_48_complete/word_access/word_access_0/ca)
}
$module [run] 
{
  // pipe-declarations for block %run
  //  file processorSuper.aa, line 216
  // pipe-declarations for block %run%body
  //  file processorSuper.aa, line 221
  // pipe-declarations for block %run%body%
  //  file processorSuper.aa, line 227
  $CP 
  {
    // begin control-path 
    <>[branch_block_stmt_357] // Branch Block  file processorSuper.aa, line 221
    {
      $P [branch_block_stmt_357__entry__]
      branch_block_stmt_357__entry__ <-| ($entry)
      $P [branch_block_stmt_357__exit__]
      branch_block_stmt_357__exit__ |-> ($exit)
      $P [assign_stmt_361__entry__] 
      $P [assign_stmt_361__exit__] 
      $P [assign_stmt_365__entry__] 
      $P [assign_stmt_365__exit__] 
      $P [assign_stmt_368__entry__] 
      $P [assign_stmt_368__exit__] 
      $P [return__]
      $P [merge_stmt_370__exit__] 
      ::[assign_stmt_361] 
      {
        // 		reg[15 ] := 0 
        //  file processorSuper.aa, line 223
        $T[assign_stmt_361_active_] 
        $T[assign_stmt_361_completed_] 
        // reg[15 ]
        $T[array_obj_ref_359_trigger_] 
        $T[array_obj_ref_359_active_] 
        $T[array_obj_ref_359_completed_] 
        $T[array_obj_ref_359_root_address_calculated] 
        $T[array_obj_ref_359_word_address_calculated] 
        array_obj_ref_359_word_address_calculated <-& (array_obj_ref_359_root_address_calculated)
        ;;[array_obj_ref_359_request] 
        {
          $T [split_req] $T [split_ack]
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [rr] $T [ra] 
            }
          }
        }
        ;;[array_obj_ref_359_complete] 
        {
          ||[word_access] 
          {
            ;;[word_access_0] 
            {
              $T [cr] $T [ca] 
            }
          }
        }
        array_obj_ref_359_trigger_ &-> (array_obj_ref_359_request)
        array_obj_ref_359_active_ <-& (array_obj_ref_359_request)
        array_obj_ref_359_active_ &-> (array_obj_ref_359_complete)
        array_obj_ref_359_completed_ <-& (array_obj_ref_359_complete)
        array_obj_ref_359_trigger_ <-& (array_obj_ref_359_word_address_calculated)
        array_obj_ref_359_trigger_ <-& (assign_stmt_361_active_)
        assign_stmt_361_completed_ <-& (array_obj_ref_359_completed_)
        // load-store dependencies..
      }
      assign_stmt_361__entry__ |-> (assign_stmt_361)
      assign_stmt_361__exit__ <-| (assign_stmt_361)
      ::[assign_stmt_365] 
      {
        // 		next_pc := ($bitcast ($uint<16>) _b0000000000000000  )
        //  file processorSuper.aa, line 224
        $T[assign_stmt_365_active_] 
        $T[assign_stmt_365_completed_] 
        // next_pc
        $T[simple_obj_ref_362_trigger_] 
        $T[simple_obj_ref_362_completed_] 
        ;;[simple_obj_ref_362_complete] 
        {
          // pipe write next_pc
          $T [pipe_wreq] $T [pipe_wack] 
        }
        simple_obj_ref_362_completed_ <-& (simple_obj_ref_362_complete)
        simple_obj_ref_362_trigger_ &-> (simple_obj_ref_362_complete)
        simple_obj_ref_362_trigger_ <-& (assign_stmt_365_active_)
        assign_stmt_365_completed_ <-& (simple_obj_ref_362_completed_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe next_pc
      }
      assign_stmt_365__entry__ |-> (assign_stmt_365)
      assign_stmt_365__exit__ <-| (assign_stmt_365)
      ::[assign_stmt_368] 
      {
        // 		iNsTr_36 := halt_pipe
        //  file processorSuper.aa, line 225
        $T[assign_stmt_368_active_] 
        $T[assign_stmt_368_completed_] 
        // halt_pipe
        $T[simple_obj_ref_367_trigger_] 
        $T[simple_obj_ref_367_completed_] 
        ;;[simple_obj_ref_367_complete] 
        {
          // pipe read
          $T [req] $T [ack] 
        }
        simple_obj_ref_367_completed_ <-& (simple_obj_ref_367_complete)
        simple_obj_ref_367_trigger_ &-> (simple_obj_ref_367_complete)
        assign_stmt_368_active_ <-& (simple_obj_ref_367_completed_)
        // iNsTr_36
        // implicit reference
        assign_stmt_368_completed_ <-& (assign_stmt_368_active_)
        // load-store dependencies..
        // pipe read/write dependencies for pipe halt_pipe
      }
      assign_stmt_368__entry__ |-> (assign_stmt_368)
      assign_stmt_368__exit__ <-| (assign_stmt_368)
      // control-path for merge  
      //  file processorSuper.aa, line 227
      //---------------------   merge statement  file processorSuper.aa, line 227  --------------------------
      ||[return___PhiReq] 
      {
        // no phi statements in merge..
      }
      return__ |-> (return___PhiReq)
      $P [merge_stmt_370_PhiReqMerge] 
      merge_stmt_370_PhiReqMerge <-| ( return___PhiReq )
      ||[merge_stmt_370_PhiAck] 
      {
        $T [dummy] 
      }
      merge_stmt_370_PhiReqMerge |-> (merge_stmt_370_PhiAck)
      merge_stmt_370__exit__  <-| (merge_stmt_370_PhiAck)
      //---------------------  end of merge statement  file processorSuper.aa, line 227  --------------------------
      assign_stmt_361__entry__ <-| (branch_block_stmt_357__entry__)
      assign_stmt_365__entry__ <-| (assign_stmt_361__exit__)
      assign_stmt_368__entry__ <-| (assign_stmt_365__exit__)
      return__ <-| (assign_stmt_368__exit__)
      merge_stmt_370__exit__ |-> (branch_block_stmt_357__exit__)
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %run%body%
    //  file processorSuper.aa, line 227
    // constant-object-declarations for block %run%body
    //  file processorSuper.aa, line 221
    // constant-object-declarations for block %run
    //  file processorSuper.aa, line 216
    // constant-declarations for block %run%body
    //  file processorSuper.aa, line 221
    // 0 
    $constant $W[expr_360_wire_constant] : $int<16> := _b0000000000000000// 0
    // reg[15 ]
    $constant $W[array_obj_ref_359_word_address_0] : $pointer<memory_space_1> := _b01111
    // ($bitcast ($uint<16>) _b0000000000000000  )
    $constant $W[type_cast_364_wire_constant] : $int<16> := _b0000000000000000// 0
    // constant-declarations for block %run%body%
    //  file processorSuper.aa, line 227
    // block %run%body
    //  file processorSuper.aa, line 221
    // 		reg[15 ] := 0 
    //  file processorSuper.aa, line 223
    // reg[15 ]
    $W[array_obj_ref_359_data_0] : $int<16>
    // 		next_pc := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file processorSuper.aa, line 224
    // next_pc
    // 		iNsTr_36 := halt_pipe
    //  file processorSuper.aa, line 225
    // iNsTr_36
    $W[iNsTr_36_368] : $int<16>
    // datapath-instances for block %run%body
    //  file processorSuper.aa, line 221
    // 		reg[15 ] := 0 
    //  file processorSuper.aa, line 223
    // reg[15 ]
    $store [array_obj_ref_359_store_0] $to memory_space_1 (array_obj_ref_359_word_address_0 array_obj_ref_359_data_0)
    &/ [array_obj_ref_359_gather_scatter] (expr_360_wire_constant) (array_obj_ref_359_data_0) 
    // 		next_pc := ($bitcast ($uint<16>) _b0000000000000000  )
    //  file processorSuper.aa, line 224
    // next_pc
    $ioport $out [simple_obj_ref_362_inst]  (type_cast_364_wire_constant) (next_pc)
    // 		iNsTr_36 := halt_pipe
    //  file processorSuper.aa, line 225
    // halt_pipe
    $ioport $in [simple_obj_ref_367_inst] (halt_pipe) (iNsTr_36_368)
  }
  // end data-path
  // 		reg[15 ] := 0 
  //  file processorSuper.aa, line 223
  array_obj_ref_359_gather_scatter <=> (branch_block_stmt_357/assign_stmt_361/array_obj_ref_359_request/split_req) (branch_block_stmt_357/assign_stmt_361/array_obj_ref_359_request/split_ack)
  array_obj_ref_359_store_0 <=> (branch_block_stmt_357/assign_stmt_361/array_obj_ref_359_request/word_access/word_access_0/rr branch_block_stmt_357/assign_stmt_361/array_obj_ref_359_complete/word_access/word_access_0/cr) (branch_block_stmt_357/assign_stmt_361/array_obj_ref_359_request/word_access/word_access_0/ra branch_block_stmt_357/assign_stmt_361/array_obj_ref_359_complete/word_access/word_access_0/ca)
  // 		next_pc := ($bitcast ($uint<16>) _b0000000000000000  )
  //  file processorSuper.aa, line 224
  // next_pc
  simple_obj_ref_362_inst <=> (branch_block_stmt_357/assign_stmt_365/simple_obj_ref_362_complete/pipe_wreq) (branch_block_stmt_357/assign_stmt_365/simple_obj_ref_362_complete/pipe_wack)
  // 		iNsTr_36 := halt_pipe
  //  file processorSuper.aa, line 225
  // halt_pipe
  simple_obj_ref_367_inst <=> (branch_block_stmt_357/assign_stmt_368/simple_obj_ref_367_complete/req) (branch_block_stmt_357/assign_stmt_368/simple_obj_ref_367_complete/ack)
  // CP-DP links for merge  
  //  file processorSuper.aa, line 227
}
$module [write_to_mem] 
{
  $in mem_addr:$int<16>
  // can point into  foreign( $void )
  mem_data:$int<16>
  // can point into  foreign( $void )
  // pipe-declarations for block %write_to_mem
  //  file processorSuper.aa, line 28
  $CP 
  {
    // begin control-path 
    ::[assign_stmt_41] 
    {
      // 	mem[mem_addr] := mem_data
      //  file processorSuper.aa, line 33
      $T[assign_stmt_41_active_] 
      $T[assign_stmt_41_completed_] 
      // mem_data
      // reference to interface object
      $T[simple_obj_ref_40_completed_] 
      assign_stmt_41_active_ <-& (simple_obj_ref_40_completed_)
      // mem[mem_addr]
      $T[array_obj_ref_39_trigger_] 
      $T[array_obj_ref_39_active_] 
      $T[array_obj_ref_39_completed_] 
      $T[array_obj_ref_39_root_address_calculated] 
      $T[array_obj_ref_39_word_address_calculated] 
      $T[array_obj_ref_39_root_address_calculated] 
      $T[array_obj_ref_39_indices_scaled] 
      $T[array_obj_ref_39_offset_calculated] 
      $T[array_obj_ref_39_index_computed_0] 
      $T[array_obj_ref_39_index_resized_0] 
      // mem_addr
      // reference to interface object
      $T[simple_obj_ref_38_completed_] 
      array_obj_ref_39_index_computed_0 <-& (simple_obj_ref_38_completed_)
      ;;[array_obj_ref_39_index_resize_0] 
      {
        $T [index_resize_req] $T [index_resize_ack] // resize index to address-width
      }
      array_obj_ref_39_index_computed_0 &-> (array_obj_ref_39_index_resize_0)
      array_obj_ref_39_index_resized_0 <-& (array_obj_ref_39_index_resize_0)
      ;;[array_obj_ref_39_index_scale_0] 
      {
        $T [scale_rename_req] $T [scale_rename_ack] // rename 
      }
      array_obj_ref_39_index_resized_0 &-> (array_obj_ref_39_index_scale_0)
      array_obj_ref_39_indices_scaled <-& (array_obj_ref_39_index_scale_0)
      ;;[array_obj_ref_39_add_indices] 
      {
        $T [final_index_req] $T [final_index_ack] // rename
      }
      array_obj_ref_39_indices_scaled &-> (array_obj_ref_39_add_indices)
      array_obj_ref_39_offset_calculated <-& (array_obj_ref_39_add_indices)
      ;;[array_obj_ref_39_base_plus_offset] 
      {
        $T [sum_rename_req] $T [sum_rename_ack] // one gets through 
      }
      array_obj_ref_39_offset_calculated &-> (array_obj_ref_39_base_plus_offset)
      array_obj_ref_39_root_address_calculated <-& (array_obj_ref_39_base_plus_offset)
      ;;[array_obj_ref_39_word_addrgen] 
      {
        $T [root_rename_req] $T [root_rename_ack]
      }
      array_obj_ref_39_root_address_calculated &-> (array_obj_ref_39_word_addrgen)
      array_obj_ref_39_word_address_calculated <-& (array_obj_ref_39_word_addrgen)
      ;;[array_obj_ref_39_request] 
      {
        $T [split_req] $T [split_ack]
        ||[word_access] 
        {
          ;;[word_access_0] 
          {
            $T [rr] $T [ra] 
          }
        }
      }
      ;;[array_obj_ref_39_complete] 
      {
        ||[word_access] 
        {
          ;;[word_access_0] 
          {
            $T [cr] $T [ca] 
          }
        }
      }
      array_obj_ref_39_trigger_ &-> (array_obj_ref_39_request)
      array_obj_ref_39_active_ <-& (array_obj_ref_39_request)
      array_obj_ref_39_active_ &-> (array_obj_ref_39_complete)
      array_obj_ref_39_completed_ <-& (array_obj_ref_39_complete)
      array_obj_ref_39_trigger_ <-& (array_obj_ref_39_word_address_calculated)
      array_obj_ref_39_trigger_ <-& (assign_stmt_41_active_)
      assign_stmt_41_completed_ <-& (array_obj_ref_39_completed_)
      // load-store dependencies..
    }
  }
  // end control-path
  $DP 
  {
    // begin data-path 
    // constant-object-declarations for block %write_to_mem
    //  file processorSuper.aa, line 28
    // mem[mem_addr]
    $constant $W[array_obj_ref_39_resized_base_address] : $int<7> := _b0000000// 0
    $constant $W[array_obj_ref_39_offset_scale_factor_0] : $int<7> := _b0000001// 1
    $constant $W[array_obj_ref_39_word_offset_0] : $int<7> := _b0000000// 0
    // 	mem[mem_addr] := mem_data
    //  file processorSuper.aa, line 33
    // mem[mem_addr]
    $intermediate $W[simple_obj_ref_38_resized] : $int<7>
    $intermediate $W[simple_obj_ref_38_scaled] : $int<7>
    $intermediate $W[array_obj_ref_39_final_offset] : $int<7>
    $intermediate $W[array_obj_ref_39_root_address] : $int<7>
    $W[array_obj_ref_39_word_address_0] : $pointer<memory_space_0>
    $W[array_obj_ref_39_data_0] : $int<16>
    // 	mem[mem_addr] := mem_data
    //  file processorSuper.aa, line 33
    // mem[mem_addr]
    := [array_obj_ref_39_index_0_resize] (mem_addr) (simple_obj_ref_38_resized)
    &/ [array_obj_ref_39_index_0_rename] (simple_obj_ref_38_resized) (simple_obj_ref_38_scaled) 
    := [array_obj_ref_39_offset_inst] (simple_obj_ref_38_scaled) (array_obj_ref_39_final_offset)
    &/ [array_obj_ref_39_root_address_inst] (array_obj_ref_39_final_offset) (array_obj_ref_39_root_address) 
    &/ [array_obj_ref_39_addr_0] (array_obj_ref_39_root_address) (array_obj_ref_39_word_address_0) 
    $store [array_obj_ref_39_store_0] $to memory_space_0 (array_obj_ref_39_word_address_0 array_obj_ref_39_data_0)
    &/ [array_obj_ref_39_gather_scatter] (mem_data) (array_obj_ref_39_data_0) 
  }
  // end data-path
  // 	mem[mem_addr] := mem_data
  //  file processorSuper.aa, line 33
  array_obj_ref_39_index_0_resize <=> (assign_stmt_41/array_obj_ref_39_index_resize_0/index_resize_req) (assign_stmt_41/array_obj_ref_39_index_resize_0/index_resize_ack)
  array_obj_ref_39_index_0_rename <=> (assign_stmt_41/array_obj_ref_39_index_scale_0/scale_rename_req) (assign_stmt_41/array_obj_ref_39_index_scale_0/scale_rename_ack)
  array_obj_ref_39_offset_inst <=> (assign_stmt_41/array_obj_ref_39_add_indices/final_index_req) (assign_stmt_41/array_obj_ref_39_add_indices/final_index_ack)
  array_obj_ref_39_root_address_inst <=> (assign_stmt_41/array_obj_ref_39_base_plus_offset/sum_rename_req) (assign_stmt_41/array_obj_ref_39_base_plus_offset/sum_rename_ack)
  array_obj_ref_39_addr_0 <=> (assign_stmt_41/array_obj_ref_39_word_addrgen/root_rename_req) (assign_stmt_41/array_obj_ref_39_word_addrgen/root_rename_ack)
  array_obj_ref_39_gather_scatter <=> (assign_stmt_41/array_obj_ref_39_request/split_req) (assign_stmt_41/array_obj_ref_39_request/split_ack)
  array_obj_ref_39_store_0 <=> (assign_stmt_41/array_obj_ref_39_request/word_access/word_access_0/rr assign_stmt_41/array_obj_ref_39_complete/word_access/word_access_0/cr) (assign_stmt_41/array_obj_ref_39_request/word_access/word_access_0/ra assign_stmt_41/array_obj_ref_39_complete/word_access/word_access_0/ca)
}
