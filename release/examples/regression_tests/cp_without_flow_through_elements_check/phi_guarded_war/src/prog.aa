$pipe in_data  : $uint<8> $depth 2
$pipe out_data : $uint<8> $depth 2

$module [volatile_check_daemon] $in() $out () $is
{
	$branchblock[lOoP] {
		$dopipeline $depth 16 $buffering 2 
		$fullrate
		$merge $entry $loopback 
			$phi X := _b0 $on $entry $guard (get_data) in_data $on $loopback
			$phi get_data_d := ($bitcast ($uint<1>) _b0) $on $entry get_data $on $loopback
		$endmerge

		// WAR dependency from this to PHI... gets optimized away
		// since PHI already includes update <-> sample ring.
		$volatile get_data := (~ get_data_d)

		$guard (get_data_d) out_data := X
		$while 1
	}
}
