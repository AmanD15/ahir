$pipe in_data  : $uint<32> $depth 2
$pipe out_data : $uint<32> $depth 2

$volatile $module [replicate] $in (a: $uint<32>) $out (b: $uint<32>) $is
{
	b := a
}

$module [volatile_check_daemon] $in() $out () $is
{
	$branchblock[lOoP] {
		$dopipeline $depth 16 $buffering 2 
		$fullrate
		$merge $entry $loopback $endmerge

		X := in_data

		U := X
		
		$volatile $call replicate (U) (UU)

	        $volatile 
			X_H := ($slice UU 31 16)
		$volatile 
			X_L := ($slice UU 15 0)

		$volatile Y := ($concat X_L X_H)
		$volatile Z := (X | (Y & (~Y)))

		out_data := Z
		$while 1
	}
}
