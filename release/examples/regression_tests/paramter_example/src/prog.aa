$parameter PDEPTH 2
$parameter PWIDTH 32
$parameter LPDEPTH (~(~(PDEPTH + 2)))
$parameter PZERO 0
$parameter INCREMENT 1


$pipe out_data : $uint<PWIDTH> $depth PDEPTH

$module [phi_check_daemon] $in() $out () $is
{
	$branchblock[lOoP] {
		$dopipeline $depth (PWIDTH/2)  $buffering LPDEPTH $fullrate
		$merge $entry $loopback 
			$phi COUNT := ($bitcast ($uint<32>) PZERO) $on $entry NCOUNT $on $loopback
		$endmerge
		$volatile NCOUNT := (COUNT + INCREMENT)
		out_data := COUNT
		$while 1
	}
}
