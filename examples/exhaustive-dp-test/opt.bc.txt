; ModuleID = 'opt.bc'
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:32:32"
target triple = "i386-linux-gnu"

@int_x = common global [6 x i32] zeroinitializer  ; <[6 x i32]*> [#uses=13]
@int_y = common global [6 x i32] zeroinitializer  ; <[6 x i32]*> [#uses=13]
@int_arith = common global [3 x i32] zeroinitializer ; <[3 x i32]*> [#uses=6]
@int_cmp = common global [6 x i32] zeroinitializer ; <[6 x i32]*> [#uses=12]
@int_shift = common global [2 x i32] zeroinitializer ; <[2 x i32]*> [#uses=4]
@short_x = common global [6 x i16] zeroinitializer ; <[6 x i16]*> [#uses=13]
@short_y = common global [6 x i16] zeroinitializer ; <[6 x i16]*> [#uses=13]
@short_arith = common global [3 x i16] zeroinitializer ; <[3 x i16]*> [#uses=6]
@short_cmp = common global [6 x i16] zeroinitializer ; <[6 x i16]*> [#uses=12]
@short_shift = common global [2 x i16] zeroinitializer ; <[2 x i16]*> [#uses=4]
@float_x = common global [6 x float] zeroinitializer ; <[6 x float]*> [#uses=18]
@float_y = common global [6 x float] zeroinitializer ; <[6 x float]*> [#uses=18]
@float_arith = common global [3 x float] zeroinitializer ; <[3 x float]*> [#uses=6]
@float_cmp = common global [6 x i32] zeroinitializer ; <[6 x i32]*> [#uses=12]

define i32 @test_ints() nounwind {
entry:
  %.base.cast = ptrtoint [6 x i32]* @int_x to i32 ; <i32> [#uses=1]
  %.idx.0 = mul i32 24, 0                         ; <i32> [#uses=1]
  %.lvl.0 = add i32 %.base.cast, %.idx.0          ; <i32> [#uses=1]
  %.idx.1 = mul i32 4, 0                          ; <i32> [#uses=1]
  %.lvl.1 = add i32 %.lvl.0, %.idx.1              ; <i32> [#uses=1]
  %.cast = inttoptr i32 %.lvl.1 to i32*           ; <i32*> [#uses=1]
  %0 = load i32* %.cast, align 4                  ; <i32> [#uses=3]
  %.base.cast1 = ptrtoint [6 x i32]* @int_y to i32 ; <i32> [#uses=1]
  %.idx.02 = mul i32 24, 0                        ; <i32> [#uses=1]
  %.lvl.03 = add i32 %.base.cast1, %.idx.02       ; <i32> [#uses=1]
  %.idx.14 = mul i32 4, 0                         ; <i32> [#uses=1]
  %.lvl.15 = add i32 %.lvl.03, %.idx.14           ; <i32> [#uses=1]
  %.cast6 = inttoptr i32 %.lvl.15 to i32*         ; <i32*> [#uses=1]
  %1 = load i32* %.cast6, align 4                 ; <i32> [#uses=3]
  %2 = add nsw i32 %1, %0                         ; <i32> [#uses=2]
  %.base.cast7 = ptrtoint [3 x i32]* @int_arith to i32 ; <i32> [#uses=1]
  %.idx.08 = mul i32 12, 0                        ; <i32> [#uses=1]
  %.lvl.09 = add i32 %.base.cast7, %.idx.08       ; <i32> [#uses=1]
  %.idx.110 = mul i32 4, 0                        ; <i32> [#uses=1]
  %.lvl.111 = add i32 %.lvl.09, %.idx.110         ; <i32> [#uses=1]
  %.cast12 = inttoptr i32 %.lvl.111 to i32*       ; <i32*> [#uses=1]
  store i32 %2, i32* %.cast12, align 4
  %.base.cast13 = ptrtoint [6 x i32]* @int_x to i32 ; <i32> [#uses=1]
  %.idx.014 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.015 = add i32 %.base.cast13, %.idx.014    ; <i32> [#uses=1]
  %.idx.116 = mul i32 4, 1                        ; <i32> [#uses=1]
  %.lvl.117 = add i32 %.lvl.015, %.idx.116        ; <i32> [#uses=1]
  %.cast18 = inttoptr i32 %.lvl.117 to i32*       ; <i32*> [#uses=1]
  %3 = load i32* %.cast18, align 4                ; <i32> [#uses=2]
  %.base.cast19 = ptrtoint [6 x i32]* @int_y to i32 ; <i32> [#uses=1]
  %.idx.020 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.021 = add i32 %.base.cast19, %.idx.020    ; <i32> [#uses=1]
  %.idx.122 = mul i32 4, 1                        ; <i32> [#uses=1]
  %.lvl.123 = add i32 %.lvl.021, %.idx.122        ; <i32> [#uses=1]
  %.cast24 = inttoptr i32 %.lvl.123 to i32*       ; <i32*> [#uses=1]
  %4 = load i32* %.cast24, align 4                ; <i32> [#uses=2]
  %5 = sub i32 %3, %4                             ; <i32> [#uses=2]
  %.base.cast25 = ptrtoint [3 x i32]* @int_arith to i32 ; <i32> [#uses=1]
  %.idx.026 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.027 = add i32 %.base.cast25, %.idx.026    ; <i32> [#uses=1]
  %.idx.128 = mul i32 4, 1                        ; <i32> [#uses=1]
  %.lvl.129 = add i32 %.lvl.027, %.idx.128        ; <i32> [#uses=1]
  %.cast30 = inttoptr i32 %.lvl.129 to i32*       ; <i32*> [#uses=1]
  store i32 %5, i32* %.cast30, align 4
  %.base.cast31 = ptrtoint [6 x i32]* @int_x to i32 ; <i32> [#uses=1]
  %.idx.032 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.033 = add i32 %.base.cast31, %.idx.032    ; <i32> [#uses=1]
  %.idx.134 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.135 = add i32 %.lvl.033, %.idx.134        ; <i32> [#uses=1]
  %.cast36 = inttoptr i32 %.lvl.135 to i32*       ; <i32*> [#uses=1]
  %6 = load i32* %.cast36, align 4                ; <i32> [#uses=2]
  %.base.cast37 = ptrtoint [6 x i32]* @int_y to i32 ; <i32> [#uses=1]
  %.idx.038 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.039 = add i32 %.base.cast37, %.idx.038    ; <i32> [#uses=1]
  %.idx.140 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.141 = add i32 %.lvl.039, %.idx.140        ; <i32> [#uses=1]
  %.cast42 = inttoptr i32 %.lvl.141 to i32*       ; <i32*> [#uses=1]
  %7 = load i32* %.cast42, align 4                ; <i32> [#uses=2]
  %8 = mul i32 %7, %6                             ; <i32> [#uses=2]
  %.base.cast43 = ptrtoint [3 x i32]* @int_arith to i32 ; <i32> [#uses=1]
  %.idx.044 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.045 = add i32 %.base.cast43, %.idx.044    ; <i32> [#uses=1]
  %.idx.146 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.147 = add i32 %.lvl.045, %.idx.146        ; <i32> [#uses=1]
  %.cast48 = inttoptr i32 %.lvl.147 to i32*       ; <i32*> [#uses=1]
  store i32 %8, i32* %.cast48, align 4
  %9 = icmp sgt i32 %0, %1                        ; <i1> [#uses=1]
  %10 = zext i1 %9 to i32                         ; <i32> [#uses=1]
  %.base.cast49 = ptrtoint [6 x i32]* @int_cmp to i32 ; <i32> [#uses=1]
  %.idx.050 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.051 = add i32 %.base.cast49, %.idx.050    ; <i32> [#uses=1]
  %.idx.152 = mul i32 4, 0                        ; <i32> [#uses=1]
  %.lvl.153 = add i32 %.lvl.051, %.idx.152        ; <i32> [#uses=1]
  %.cast54 = inttoptr i32 %.lvl.153 to i32*       ; <i32*> [#uses=1]
  store i32 %10, i32* %.cast54, align 4
  %11 = icmp sge i32 %3, %4                       ; <i1> [#uses=1]
  %12 = zext i1 %11 to i32                        ; <i32> [#uses=1]
  %.base.cast55 = ptrtoint [6 x i32]* @int_cmp to i32 ; <i32> [#uses=1]
  %.idx.056 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.057 = add i32 %.base.cast55, %.idx.056    ; <i32> [#uses=1]
  %.idx.158 = mul i32 4, 1                        ; <i32> [#uses=1]
  %.lvl.159 = add i32 %.lvl.057, %.idx.158        ; <i32> [#uses=1]
  %.cast60 = inttoptr i32 %.lvl.159 to i32*       ; <i32*> [#uses=1]
  store i32 %12, i32* %.cast60, align 4
  %13 = icmp slt i32 %6, %7                       ; <i1> [#uses=1]
  %14 = zext i1 %13 to i32                        ; <i32> [#uses=1]
  %.base.cast61 = ptrtoint [6 x i32]* @int_cmp to i32 ; <i32> [#uses=1]
  %.idx.062 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.063 = add i32 %.base.cast61, %.idx.062    ; <i32> [#uses=1]
  %.idx.164 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.165 = add i32 %.lvl.063, %.idx.164        ; <i32> [#uses=1]
  %.cast66 = inttoptr i32 %.lvl.165 to i32*       ; <i32*> [#uses=1]
  store i32 %14, i32* %.cast66, align 4
  %.base.cast67 = ptrtoint [6 x i32]* @int_x to i32 ; <i32> [#uses=1]
  %.idx.068 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.069 = add i32 %.base.cast67, %.idx.068    ; <i32> [#uses=1]
  %.idx.170 = mul i32 4, 3                        ; <i32> [#uses=1]
  %.lvl.171 = add i32 %.lvl.069, %.idx.170        ; <i32> [#uses=1]
  %.cast72 = inttoptr i32 %.lvl.171 to i32*       ; <i32*> [#uses=1]
  %15 = load i32* %.cast72, align 4               ; <i32> [#uses=1]
  %.base.cast73 = ptrtoint [6 x i32]* @int_y to i32 ; <i32> [#uses=1]
  %.idx.074 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.075 = add i32 %.base.cast73, %.idx.074    ; <i32> [#uses=1]
  %.idx.176 = mul i32 4, 3                        ; <i32> [#uses=1]
  %.lvl.177 = add i32 %.lvl.075, %.idx.176        ; <i32> [#uses=1]
  %.cast78 = inttoptr i32 %.lvl.177 to i32*       ; <i32*> [#uses=1]
  %16 = load i32* %.cast78, align 4               ; <i32> [#uses=1]
  %17 = icmp sle i32 %15, %16                     ; <i1> [#uses=1]
  %18 = zext i1 %17 to i32                        ; <i32> [#uses=1]
  %.base.cast79 = ptrtoint [6 x i32]* @int_cmp to i32 ; <i32> [#uses=1]
  %.idx.080 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.081 = add i32 %.base.cast79, %.idx.080    ; <i32> [#uses=1]
  %.idx.182 = mul i32 4, 3                        ; <i32> [#uses=1]
  %.lvl.183 = add i32 %.lvl.081, %.idx.182        ; <i32> [#uses=1]
  %.cast84 = inttoptr i32 %.lvl.183 to i32*       ; <i32*> [#uses=1]
  store i32 %18, i32* %.cast84, align 4
  %.base.cast85 = ptrtoint [6 x i32]* @int_x to i32 ; <i32> [#uses=1]
  %.idx.086 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.087 = add i32 %.base.cast85, %.idx.086    ; <i32> [#uses=1]
  %.idx.188 = mul i32 4, 4                        ; <i32> [#uses=1]
  %.lvl.189 = add i32 %.lvl.087, %.idx.188        ; <i32> [#uses=1]
  %.cast90 = inttoptr i32 %.lvl.189 to i32*       ; <i32*> [#uses=1]
  %19 = load i32* %.cast90, align 4               ; <i32> [#uses=1]
  %.base.cast91 = ptrtoint [6 x i32]* @int_y to i32 ; <i32> [#uses=1]
  %.idx.092 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.093 = add i32 %.base.cast91, %.idx.092    ; <i32> [#uses=1]
  %.idx.194 = mul i32 4, 4                        ; <i32> [#uses=1]
  %.lvl.195 = add i32 %.lvl.093, %.idx.194        ; <i32> [#uses=1]
  %.cast96 = inttoptr i32 %.lvl.195 to i32*       ; <i32*> [#uses=1]
  %20 = load i32* %.cast96, align 4               ; <i32> [#uses=1]
  %21 = icmp eq i32 %19, %20                      ; <i1> [#uses=1]
  %22 = zext i1 %21 to i32                        ; <i32> [#uses=1]
  %.base.cast97 = ptrtoint [6 x i32]* @int_cmp to i32 ; <i32> [#uses=1]
  %.idx.098 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.099 = add i32 %.base.cast97, %.idx.098    ; <i32> [#uses=1]
  %.idx.1100 = mul i32 4, 4                       ; <i32> [#uses=1]
  %.lvl.1101 = add i32 %.lvl.099, %.idx.1100      ; <i32> [#uses=1]
  %.cast102 = inttoptr i32 %.lvl.1101 to i32*     ; <i32*> [#uses=1]
  store i32 %22, i32* %.cast102, align 4
  %.base.cast103 = ptrtoint [6 x i32]* @int_x to i32 ; <i32> [#uses=1]
  %.idx.0104 = mul i32 24, 0                      ; <i32> [#uses=1]
  %.lvl.0105 = add i32 %.base.cast103, %.idx.0104 ; <i32> [#uses=1]
  %.idx.1106 = mul i32 4, 5                       ; <i32> [#uses=1]
  %.lvl.1107 = add i32 %.lvl.0105, %.idx.1106     ; <i32> [#uses=1]
  %.cast108 = inttoptr i32 %.lvl.1107 to i32*     ; <i32*> [#uses=1]
  %23 = load i32* %.cast108, align 4              ; <i32> [#uses=1]
  %.base.cast109 = ptrtoint [6 x i32]* @int_y to i32 ; <i32> [#uses=1]
  %.idx.0110 = mul i32 24, 0                      ; <i32> [#uses=1]
  %.lvl.0111 = add i32 %.base.cast109, %.idx.0110 ; <i32> [#uses=1]
  %.idx.1112 = mul i32 4, 5                       ; <i32> [#uses=1]
  %.lvl.1113 = add i32 %.lvl.0111, %.idx.1112     ; <i32> [#uses=1]
  %.cast114 = inttoptr i32 %.lvl.1113 to i32*     ; <i32*> [#uses=1]
  %24 = load i32* %.cast114, align 4              ; <i32> [#uses=1]
  %25 = icmp ne i32 %23, %24                      ; <i1> [#uses=1]
  %26 = zext i1 %25 to i32                        ; <i32> [#uses=1]
  %.base.cast115 = ptrtoint [6 x i32]* @int_cmp to i32 ; <i32> [#uses=1]
  %.idx.0116 = mul i32 24, 0                      ; <i32> [#uses=1]
  %.lvl.0117 = add i32 %.base.cast115, %.idx.0116 ; <i32> [#uses=1]
  %.idx.1118 = mul i32 4, 5                       ; <i32> [#uses=1]
  %.lvl.1119 = add i32 %.lvl.0117, %.idx.1118     ; <i32> [#uses=1]
  %.cast120 = inttoptr i32 %.lvl.1119 to i32*     ; <i32*> [#uses=1]
  store i32 %26, i32* %.cast120, align 4
  %27 = ashr i32 %0, 4                            ; <i32> [#uses=2]
  %.base.cast121 = ptrtoint [2 x i32]* @int_shift to i32 ; <i32> [#uses=1]
  %.idx.0122 = mul i32 8, 0                       ; <i32> [#uses=1]
  %.lvl.0123 = add i32 %.base.cast121, %.idx.0122 ; <i32> [#uses=1]
  %.idx.1124 = mul i32 4, 0                       ; <i32> [#uses=1]
  %.lvl.1125 = add i32 %.lvl.0123, %.idx.1124     ; <i32> [#uses=1]
  %.cast126 = inttoptr i32 %.lvl.1125 to i32*     ; <i32*> [#uses=1]
  store i32 %27, i32* %.cast126, align 4
  %28 = shl i32 %1, 4                             ; <i32> [#uses=2]
  %.base.cast127 = ptrtoint [2 x i32]* @int_shift to i32 ; <i32> [#uses=1]
  %.idx.0128 = mul i32 8, 0                       ; <i32> [#uses=1]
  %.lvl.0129 = add i32 %.base.cast127, %.idx.0128 ; <i32> [#uses=1]
  %.idx.1130 = mul i32 4, 1                       ; <i32> [#uses=1]
  %.lvl.1131 = add i32 %.lvl.0129, %.idx.1130     ; <i32> [#uses=1]
  %.cast132 = inttoptr i32 %.lvl.1131 to i32*     ; <i32*> [#uses=1]
  store i32 %28, i32* %.cast132, align 4
  %29 = and i32 %5, %2                            ; <i32> [#uses=1]
  %30 = or i32 %8, %29                            ; <i32> [#uses=1]
  %31 = xor i32 %27, %30                          ; <i32> [#uses=1]
  %32 = xor i32 %31, %28                          ; <i32> [#uses=1]
  ret i32 %32
}

define signext i16 @test_shorts() nounwind {
entry:
  %.base.cast = ptrtoint [6 x i16]* @short_x to i32 ; <i32> [#uses=1]
  %.idx.0 = mul i32 12, 0                         ; <i32> [#uses=1]
  %.lvl.0 = add i32 %.base.cast, %.idx.0          ; <i32> [#uses=1]
  %.idx.1 = mul i32 2, 0                          ; <i32> [#uses=1]
  %.lvl.1 = add i32 %.lvl.0, %.idx.1              ; <i32> [#uses=1]
  %.cast = inttoptr i32 %.lvl.1 to i16*           ; <i16*> [#uses=1]
  %0 = load i16* %.cast, align 2                  ; <i16> [#uses=3]
  %.base.cast1 = ptrtoint [6 x i16]* @short_y to i32 ; <i32> [#uses=1]
  %.idx.02 = mul i32 12, 0                        ; <i32> [#uses=1]
  %.lvl.03 = add i32 %.base.cast1, %.idx.02       ; <i32> [#uses=1]
  %.idx.14 = mul i32 2, 0                         ; <i32> [#uses=1]
  %.lvl.15 = add i32 %.lvl.03, %.idx.14           ; <i32> [#uses=1]
  %.cast6 = inttoptr i32 %.lvl.15 to i16*         ; <i16*> [#uses=1]
  %1 = load i16* %.cast6, align 2                 ; <i16> [#uses=3]
  %2 = add i16 %1, %0                             ; <i16> [#uses=2]
  %.base.cast7 = ptrtoint [3 x i16]* @short_arith to i32 ; <i32> [#uses=1]
  %.idx.08 = mul i32 6, 0                         ; <i32> [#uses=1]
  %.lvl.09 = add i32 %.base.cast7, %.idx.08       ; <i32> [#uses=1]
  %.idx.110 = mul i32 2, 0                        ; <i32> [#uses=1]
  %.lvl.111 = add i32 %.lvl.09, %.idx.110         ; <i32> [#uses=1]
  %.cast12 = inttoptr i32 %.lvl.111 to i16*       ; <i16*> [#uses=1]
  store i16 %2, i16* %.cast12, align 2
  %.base.cast13 = ptrtoint [6 x i16]* @short_x to i32 ; <i32> [#uses=1]
  %.idx.014 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.015 = add i32 %.base.cast13, %.idx.014    ; <i32> [#uses=1]
  %.idx.116 = mul i32 2, 1                        ; <i32> [#uses=1]
  %.lvl.117 = add i32 %.lvl.015, %.idx.116        ; <i32> [#uses=1]
  %.cast18 = inttoptr i32 %.lvl.117 to i16*       ; <i16*> [#uses=1]
  %3 = load i16* %.cast18, align 2                ; <i16> [#uses=2]
  %.base.cast19 = ptrtoint [6 x i16]* @short_y to i32 ; <i32> [#uses=1]
  %.idx.020 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.021 = add i32 %.base.cast19, %.idx.020    ; <i32> [#uses=1]
  %.idx.122 = mul i32 2, 1                        ; <i32> [#uses=1]
  %.lvl.123 = add i32 %.lvl.021, %.idx.122        ; <i32> [#uses=1]
  %.cast24 = inttoptr i32 %.lvl.123 to i16*       ; <i16*> [#uses=1]
  %4 = load i16* %.cast24, align 2                ; <i16> [#uses=2]
  %5 = sub i16 %3, %4                             ; <i16> [#uses=2]
  %.base.cast25 = ptrtoint [3 x i16]* @short_arith to i32 ; <i32> [#uses=1]
  %.idx.026 = mul i32 6, 0                        ; <i32> [#uses=1]
  %.lvl.027 = add i32 %.base.cast25, %.idx.026    ; <i32> [#uses=1]
  %.idx.128 = mul i32 2, 1                        ; <i32> [#uses=1]
  %.lvl.129 = add i32 %.lvl.027, %.idx.128        ; <i32> [#uses=1]
  %.cast30 = inttoptr i32 %.lvl.129 to i16*       ; <i16*> [#uses=1]
  store i16 %5, i16* %.cast30, align 2
  %.base.cast31 = ptrtoint [6 x i16]* @short_x to i32 ; <i32> [#uses=1]
  %.idx.032 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.033 = add i32 %.base.cast31, %.idx.032    ; <i32> [#uses=1]
  %.idx.134 = mul i32 2, 2                        ; <i32> [#uses=1]
  %.lvl.135 = add i32 %.lvl.033, %.idx.134        ; <i32> [#uses=1]
  %.cast36 = inttoptr i32 %.lvl.135 to i16*       ; <i16*> [#uses=1]
  %6 = load i16* %.cast36, align 2                ; <i16> [#uses=2]
  %.base.cast37 = ptrtoint [6 x i16]* @short_y to i32 ; <i32> [#uses=1]
  %.idx.038 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.039 = add i32 %.base.cast37, %.idx.038    ; <i32> [#uses=1]
  %.idx.140 = mul i32 2, 2                        ; <i32> [#uses=1]
  %.lvl.141 = add i32 %.lvl.039, %.idx.140        ; <i32> [#uses=1]
  %.cast42 = inttoptr i32 %.lvl.141 to i16*       ; <i16*> [#uses=1]
  %7 = load i16* %.cast42, align 2                ; <i16> [#uses=2]
  %8 = mul i16 %7, %6                             ; <i16> [#uses=2]
  %.base.cast43 = ptrtoint [3 x i16]* @short_arith to i32 ; <i32> [#uses=1]
  %.idx.044 = mul i32 6, 0                        ; <i32> [#uses=1]
  %.lvl.045 = add i32 %.base.cast43, %.idx.044    ; <i32> [#uses=1]
  %.idx.146 = mul i32 2, 2                        ; <i32> [#uses=1]
  %.lvl.147 = add i32 %.lvl.045, %.idx.146        ; <i32> [#uses=1]
  %.cast48 = inttoptr i32 %.lvl.147 to i16*       ; <i16*> [#uses=1]
  store i16 %8, i16* %.cast48, align 2
  %9 = icmp ugt i16 %0, %1                        ; <i1> [#uses=1]
  %10 = zext i1 %9 to i16                         ; <i16> [#uses=1]
  %.base.cast49 = ptrtoint [6 x i16]* @short_cmp to i32 ; <i32> [#uses=1]
  %.idx.050 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.051 = add i32 %.base.cast49, %.idx.050    ; <i32> [#uses=1]
  %.idx.152 = mul i32 2, 0                        ; <i32> [#uses=1]
  %.lvl.153 = add i32 %.lvl.051, %.idx.152        ; <i32> [#uses=1]
  %.cast54 = inttoptr i32 %.lvl.153 to i16*       ; <i16*> [#uses=1]
  store i16 %10, i16* %.cast54, align 2
  %11 = icmp uge i16 %3, %4                       ; <i1> [#uses=1]
  %12 = zext i1 %11 to i16                        ; <i16> [#uses=1]
  %.base.cast55 = ptrtoint [6 x i16]* @short_cmp to i32 ; <i32> [#uses=1]
  %.idx.056 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.057 = add i32 %.base.cast55, %.idx.056    ; <i32> [#uses=1]
  %.idx.158 = mul i32 2, 1                        ; <i32> [#uses=1]
  %.lvl.159 = add i32 %.lvl.057, %.idx.158        ; <i32> [#uses=1]
  %.cast60 = inttoptr i32 %.lvl.159 to i16*       ; <i16*> [#uses=1]
  store i16 %12, i16* %.cast60, align 2
  %13 = icmp ult i16 %6, %7                       ; <i1> [#uses=1]
  %14 = zext i1 %13 to i16                        ; <i16> [#uses=1]
  %.base.cast61 = ptrtoint [6 x i16]* @short_cmp to i32 ; <i32> [#uses=1]
  %.idx.062 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.063 = add i32 %.base.cast61, %.idx.062    ; <i32> [#uses=1]
  %.idx.164 = mul i32 2, 2                        ; <i32> [#uses=1]
  %.lvl.165 = add i32 %.lvl.063, %.idx.164        ; <i32> [#uses=1]
  %.cast66 = inttoptr i32 %.lvl.165 to i16*       ; <i16*> [#uses=1]
  store i16 %14, i16* %.cast66, align 2
  %.base.cast67 = ptrtoint [6 x i16]* @short_x to i32 ; <i32> [#uses=1]
  %.idx.068 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.069 = add i32 %.base.cast67, %.idx.068    ; <i32> [#uses=1]
  %.idx.170 = mul i32 2, 3                        ; <i32> [#uses=1]
  %.lvl.171 = add i32 %.lvl.069, %.idx.170        ; <i32> [#uses=1]
  %.cast72 = inttoptr i32 %.lvl.171 to i16*       ; <i16*> [#uses=1]
  %15 = load i16* %.cast72, align 2               ; <i16> [#uses=1]
  %.base.cast73 = ptrtoint [6 x i16]* @short_y to i32 ; <i32> [#uses=1]
  %.idx.074 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.075 = add i32 %.base.cast73, %.idx.074    ; <i32> [#uses=1]
  %.idx.176 = mul i32 2, 3                        ; <i32> [#uses=1]
  %.lvl.177 = add i32 %.lvl.075, %.idx.176        ; <i32> [#uses=1]
  %.cast78 = inttoptr i32 %.lvl.177 to i16*       ; <i16*> [#uses=1]
  %16 = load i16* %.cast78, align 2               ; <i16> [#uses=1]
  %17 = icmp ule i16 %15, %16                     ; <i1> [#uses=1]
  %18 = zext i1 %17 to i16                        ; <i16> [#uses=1]
  %.base.cast79 = ptrtoint [6 x i16]* @short_cmp to i32 ; <i32> [#uses=1]
  %.idx.080 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.081 = add i32 %.base.cast79, %.idx.080    ; <i32> [#uses=1]
  %.idx.182 = mul i32 2, 3                        ; <i32> [#uses=1]
  %.lvl.183 = add i32 %.lvl.081, %.idx.182        ; <i32> [#uses=1]
  %.cast84 = inttoptr i32 %.lvl.183 to i16*       ; <i16*> [#uses=1]
  store i16 %18, i16* %.cast84, align 2
  %.base.cast85 = ptrtoint [6 x i16]* @short_x to i32 ; <i32> [#uses=1]
  %.idx.086 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.087 = add i32 %.base.cast85, %.idx.086    ; <i32> [#uses=1]
  %.idx.188 = mul i32 2, 4                        ; <i32> [#uses=1]
  %.lvl.189 = add i32 %.lvl.087, %.idx.188        ; <i32> [#uses=1]
  %.cast90 = inttoptr i32 %.lvl.189 to i16*       ; <i16*> [#uses=1]
  %19 = load i16* %.cast90, align 2               ; <i16> [#uses=1]
  %.base.cast91 = ptrtoint [6 x i16]* @short_y to i32 ; <i32> [#uses=1]
  %.idx.092 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.093 = add i32 %.base.cast91, %.idx.092    ; <i32> [#uses=1]
  %.idx.194 = mul i32 2, 4                        ; <i32> [#uses=1]
  %.lvl.195 = add i32 %.lvl.093, %.idx.194        ; <i32> [#uses=1]
  %.cast96 = inttoptr i32 %.lvl.195 to i16*       ; <i16*> [#uses=1]
  %20 = load i16* %.cast96, align 2               ; <i16> [#uses=1]
  %21 = icmp eq i16 %19, %20                      ; <i1> [#uses=1]
  %22 = zext i1 %21 to i16                        ; <i16> [#uses=1]
  %.base.cast97 = ptrtoint [6 x i16]* @short_cmp to i32 ; <i32> [#uses=1]
  %.idx.098 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.099 = add i32 %.base.cast97, %.idx.098    ; <i32> [#uses=1]
  %.idx.1100 = mul i32 2, 4                       ; <i32> [#uses=1]
  %.lvl.1101 = add i32 %.lvl.099, %.idx.1100      ; <i32> [#uses=1]
  %.cast102 = inttoptr i32 %.lvl.1101 to i16*     ; <i16*> [#uses=1]
  store i16 %22, i16* %.cast102, align 2
  %.base.cast103 = ptrtoint [6 x i16]* @short_x to i32 ; <i32> [#uses=1]
  %.idx.0104 = mul i32 12, 0                      ; <i32> [#uses=1]
  %.lvl.0105 = add i32 %.base.cast103, %.idx.0104 ; <i32> [#uses=1]
  %.idx.1106 = mul i32 2, 5                       ; <i32> [#uses=1]
  %.lvl.1107 = add i32 %.lvl.0105, %.idx.1106     ; <i32> [#uses=1]
  %.cast108 = inttoptr i32 %.lvl.1107 to i16*     ; <i16*> [#uses=1]
  %23 = load i16* %.cast108, align 2              ; <i16> [#uses=1]
  %.base.cast109 = ptrtoint [6 x i16]* @short_y to i32 ; <i32> [#uses=1]
  %.idx.0110 = mul i32 12, 0                      ; <i32> [#uses=1]
  %.lvl.0111 = add i32 %.base.cast109, %.idx.0110 ; <i32> [#uses=1]
  %.idx.1112 = mul i32 2, 5                       ; <i32> [#uses=1]
  %.lvl.1113 = add i32 %.lvl.0111, %.idx.1112     ; <i32> [#uses=1]
  %.cast114 = inttoptr i32 %.lvl.1113 to i16*     ; <i16*> [#uses=1]
  %24 = load i16* %.cast114, align 2              ; <i16> [#uses=1]
  %25 = icmp ne i16 %23, %24                      ; <i1> [#uses=1]
  %26 = zext i1 %25 to i16                        ; <i16> [#uses=1]
  %.base.cast115 = ptrtoint [6 x i16]* @short_cmp to i32 ; <i32> [#uses=1]
  %.idx.0116 = mul i32 12, 0                      ; <i32> [#uses=1]
  %.lvl.0117 = add i32 %.base.cast115, %.idx.0116 ; <i32> [#uses=1]
  %.idx.1118 = mul i32 2, 5                       ; <i32> [#uses=1]
  %.lvl.1119 = add i32 %.lvl.0117, %.idx.1118     ; <i32> [#uses=1]
  %.cast120 = inttoptr i32 %.lvl.1119 to i16*     ; <i16*> [#uses=1]
  store i16 %26, i16* %.cast120, align 2
  %27 = lshr i16 %0, 4                            ; <i16> [#uses=2]
  %.base.cast121 = ptrtoint [2 x i16]* @short_shift to i32 ; <i32> [#uses=1]
  %.idx.0122 = mul i32 4, 0                       ; <i32> [#uses=1]
  %.lvl.0123 = add i32 %.base.cast121, %.idx.0122 ; <i32> [#uses=1]
  %.idx.1124 = mul i32 2, 0                       ; <i32> [#uses=1]
  %.lvl.1125 = add i32 %.lvl.0123, %.idx.1124     ; <i32> [#uses=1]
  %.cast126 = inttoptr i32 %.lvl.1125 to i16*     ; <i16*> [#uses=1]
  store i16 %27, i16* %.cast126, align 2
  %28 = shl i16 %1, 4                             ; <i16> [#uses=2]
  %.base.cast127 = ptrtoint [2 x i16]* @short_shift to i32 ; <i32> [#uses=1]
  %.idx.0128 = mul i32 4, 0                       ; <i32> [#uses=1]
  %.lvl.0129 = add i32 %.base.cast127, %.idx.0128 ; <i32> [#uses=1]
  %.idx.1130 = mul i32 2, 1                       ; <i32> [#uses=1]
  %.lvl.1131 = add i32 %.lvl.0129, %.idx.1130     ; <i32> [#uses=1]
  %.cast132 = inttoptr i32 %.lvl.1131 to i16*     ; <i16*> [#uses=1]
  store i16 %28, i16* %.cast132, align 2
  %29 = and i16 %5, %2                            ; <i16> [#uses=1]
  %30 = or i16 %8, %29                            ; <i16> [#uses=1]
  %31 = xor i16 %27, %30                          ; <i16> [#uses=1]
  %32 = xor i16 %31, %28                          ; <i16> [#uses=1]
  ret i16 %32
}

define float @test_floats() nounwind {
entry:
  %.base.cast = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.0 = mul i32 24, 0                         ; <i32> [#uses=1]
  %.lvl.0 = add i32 %.base.cast, %.idx.0          ; <i32> [#uses=1]
  %.idx.1 = mul i32 4, 0                          ; <i32> [#uses=1]
  %.lvl.1 = add i32 %.lvl.0, %.idx.1              ; <i32> [#uses=1]
  %.cast = inttoptr i32 %.lvl.1 to float*         ; <float*> [#uses=1]
  %0 = load float* %.cast, align 4                ; <float> [#uses=2]
  %.base.cast1 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.02 = mul i32 24, 0                        ; <i32> [#uses=1]
  %.lvl.03 = add i32 %.base.cast1, %.idx.02       ; <i32> [#uses=1]
  %.idx.14 = mul i32 4, 0                         ; <i32> [#uses=1]
  %.lvl.15 = add i32 %.lvl.03, %.idx.14           ; <i32> [#uses=1]
  %.cast6 = inttoptr i32 %.lvl.15 to float*       ; <float*> [#uses=1]
  %1 = load float* %.cast6, align 4               ; <float> [#uses=2]
  %2 = fadd float %0, %1                          ; <float> [#uses=2]
  %.base.cast7 = ptrtoint [3 x float]* @float_arith to i32 ; <i32> [#uses=1]
  %.idx.08 = mul i32 12, 0                        ; <i32> [#uses=1]
  %.lvl.09 = add i32 %.base.cast7, %.idx.08       ; <i32> [#uses=1]
  %.idx.110 = mul i32 4, 0                        ; <i32> [#uses=1]
  %.lvl.111 = add i32 %.lvl.09, %.idx.110         ; <i32> [#uses=1]
  %.cast12 = inttoptr i32 %.lvl.111 to float*     ; <float*> [#uses=1]
  store float %2, float* %.cast12, align 4
  %.base.cast13 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.014 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.015 = add i32 %.base.cast13, %.idx.014    ; <i32> [#uses=1]
  %.idx.116 = mul i32 4, 1                        ; <i32> [#uses=1]
  %.lvl.117 = add i32 %.lvl.015, %.idx.116        ; <i32> [#uses=1]
  %.cast18 = inttoptr i32 %.lvl.117 to float*     ; <float*> [#uses=1]
  %3 = load float* %.cast18, align 4              ; <float> [#uses=2]
  %.base.cast19 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.020 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.021 = add i32 %.base.cast19, %.idx.020    ; <i32> [#uses=1]
  %.idx.122 = mul i32 4, 1                        ; <i32> [#uses=1]
  %.lvl.123 = add i32 %.lvl.021, %.idx.122        ; <i32> [#uses=1]
  %.cast24 = inttoptr i32 %.lvl.123 to float*     ; <float*> [#uses=1]
  %4 = load float* %.cast24, align 4              ; <float> [#uses=2]
  %5 = fsub float %3, %4                          ; <float> [#uses=2]
  %.base.cast25 = ptrtoint [3 x float]* @float_arith to i32 ; <i32> [#uses=1]
  %.idx.026 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.027 = add i32 %.base.cast25, %.idx.026    ; <i32> [#uses=1]
  %.idx.128 = mul i32 4, 1                        ; <i32> [#uses=1]
  %.lvl.129 = add i32 %.lvl.027, %.idx.128        ; <i32> [#uses=1]
  %.cast30 = inttoptr i32 %.lvl.129 to float*     ; <float*> [#uses=1]
  store float %5, float* %.cast30, align 4
  %.base.cast31 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.032 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.033 = add i32 %.base.cast31, %.idx.032    ; <i32> [#uses=1]
  %.idx.134 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.135 = add i32 %.lvl.033, %.idx.134        ; <i32> [#uses=1]
  %.cast36 = inttoptr i32 %.lvl.135 to float*     ; <float*> [#uses=1]
  %6 = load float* %.cast36, align 4              ; <float> [#uses=2]
  %.base.cast37 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.038 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.039 = add i32 %.base.cast37, %.idx.038    ; <i32> [#uses=1]
  %.idx.140 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.141 = add i32 %.lvl.039, %.idx.140        ; <i32> [#uses=1]
  %.cast42 = inttoptr i32 %.lvl.141 to float*     ; <float*> [#uses=1]
  %7 = load float* %.cast42, align 4              ; <float> [#uses=2]
  %8 = fmul float %6, %7                          ; <float> [#uses=2]
  %.base.cast43 = ptrtoint [3 x float]* @float_arith to i32 ; <i32> [#uses=1]
  %.idx.044 = mul i32 12, 0                       ; <i32> [#uses=1]
  %.lvl.045 = add i32 %.base.cast43, %.idx.044    ; <i32> [#uses=1]
  %.idx.146 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.147 = add i32 %.lvl.045, %.idx.146        ; <i32> [#uses=1]
  %.cast48 = inttoptr i32 %.lvl.147 to float*     ; <float*> [#uses=1]
  store float %8, float* %.cast48, align 4
  %9 = fcmp ogt float %0, %1                      ; <i1> [#uses=1]
  %10 = zext i1 %9 to i32                         ; <i32> [#uses=1]
  %.base.cast49 = ptrtoint [6 x i32]* @float_cmp to i32 ; <i32> [#uses=1]
  %.idx.050 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.051 = add i32 %.base.cast49, %.idx.050    ; <i32> [#uses=1]
  %.idx.152 = mul i32 4, 0                        ; <i32> [#uses=1]
  %.lvl.153 = add i32 %.lvl.051, %.idx.152        ; <i32> [#uses=1]
  %.cast54 = inttoptr i32 %.lvl.153 to i32*       ; <i32*> [#uses=1]
  store i32 %10, i32* %.cast54, align 4
  %11 = fcmp oge float %3, %4                     ; <i1> [#uses=1]
  %12 = zext i1 %11 to i32                        ; <i32> [#uses=1]
  %.base.cast55 = ptrtoint [6 x i32]* @float_cmp to i32 ; <i32> [#uses=1]
  %.idx.056 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.057 = add i32 %.base.cast55, %.idx.056    ; <i32> [#uses=1]
  %.idx.158 = mul i32 4, 1                        ; <i32> [#uses=1]
  %.lvl.159 = add i32 %.lvl.057, %.idx.158        ; <i32> [#uses=1]
  %.cast60 = inttoptr i32 %.lvl.159 to i32*       ; <i32*> [#uses=1]
  store i32 %12, i32* %.cast60, align 4
  %13 = fcmp olt float %6, %7                     ; <i1> [#uses=1]
  %14 = zext i1 %13 to i32                        ; <i32> [#uses=1]
  %.base.cast61 = ptrtoint [6 x i32]* @float_cmp to i32 ; <i32> [#uses=1]
  %.idx.062 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.063 = add i32 %.base.cast61, %.idx.062    ; <i32> [#uses=1]
  %.idx.164 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.165 = add i32 %.lvl.063, %.idx.164        ; <i32> [#uses=1]
  %.cast66 = inttoptr i32 %.lvl.165 to i32*       ; <i32*> [#uses=1]
  store i32 %14, i32* %.cast66, align 4
  %.base.cast67 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.068 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.069 = add i32 %.base.cast67, %.idx.068    ; <i32> [#uses=1]
  %.idx.170 = mul i32 4, 3                        ; <i32> [#uses=1]
  %.lvl.171 = add i32 %.lvl.069, %.idx.170        ; <i32> [#uses=1]
  %.cast72 = inttoptr i32 %.lvl.171 to float*     ; <float*> [#uses=1]
  %15 = load float* %.cast72, align 4             ; <float> [#uses=1]
  %.base.cast73 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.074 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.075 = add i32 %.base.cast73, %.idx.074    ; <i32> [#uses=1]
  %.idx.176 = mul i32 4, 3                        ; <i32> [#uses=1]
  %.lvl.177 = add i32 %.lvl.075, %.idx.176        ; <i32> [#uses=1]
  %.cast78 = inttoptr i32 %.lvl.177 to float*     ; <float*> [#uses=1]
  %16 = load float* %.cast78, align 4             ; <float> [#uses=1]
  %17 = fcmp ole float %15, %16                   ; <i1> [#uses=1]
  %18 = zext i1 %17 to i32                        ; <i32> [#uses=1]
  %.base.cast79 = ptrtoint [6 x i32]* @float_cmp to i32 ; <i32> [#uses=1]
  %.idx.080 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.081 = add i32 %.base.cast79, %.idx.080    ; <i32> [#uses=1]
  %.idx.182 = mul i32 4, 3                        ; <i32> [#uses=1]
  %.lvl.183 = add i32 %.lvl.081, %.idx.182        ; <i32> [#uses=1]
  %.cast84 = inttoptr i32 %.lvl.183 to i32*       ; <i32*> [#uses=1]
  store i32 %18, i32* %.cast84, align 4
  %.base.cast85 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.086 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.087 = add i32 %.base.cast85, %.idx.086    ; <i32> [#uses=1]
  %.idx.188 = mul i32 4, 4                        ; <i32> [#uses=1]
  %.lvl.189 = add i32 %.lvl.087, %.idx.188        ; <i32> [#uses=1]
  %.cast90 = inttoptr i32 %.lvl.189 to float*     ; <float*> [#uses=1]
  %19 = load float* %.cast90, align 4             ; <float> [#uses=1]
  %.base.cast91 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.092 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.093 = add i32 %.base.cast91, %.idx.092    ; <i32> [#uses=1]
  %.idx.194 = mul i32 4, 4                        ; <i32> [#uses=1]
  %.lvl.195 = add i32 %.lvl.093, %.idx.194        ; <i32> [#uses=1]
  %.cast96 = inttoptr i32 %.lvl.195 to float*     ; <float*> [#uses=1]
  %20 = load float* %.cast96, align 4             ; <float> [#uses=1]
  %21 = fcmp oeq float %19, %20                   ; <i1> [#uses=1]
  %22 = zext i1 %21 to i32                        ; <i32> [#uses=1]
  %.base.cast97 = ptrtoint [6 x i32]* @float_cmp to i32 ; <i32> [#uses=1]
  %.idx.098 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.099 = add i32 %.base.cast97, %.idx.098    ; <i32> [#uses=1]
  %.idx.1100 = mul i32 4, 4                       ; <i32> [#uses=1]
  %.lvl.1101 = add i32 %.lvl.099, %.idx.1100      ; <i32> [#uses=1]
  %.cast102 = inttoptr i32 %.lvl.1101 to i32*     ; <i32*> [#uses=1]
  store i32 %22, i32* %.cast102, align 4
  %.base.cast103 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.0104 = mul i32 24, 0                      ; <i32> [#uses=1]
  %.lvl.0105 = add i32 %.base.cast103, %.idx.0104 ; <i32> [#uses=1]
  %.idx.1106 = mul i32 4, 5                       ; <i32> [#uses=1]
  %.lvl.1107 = add i32 %.lvl.0105, %.idx.1106     ; <i32> [#uses=1]
  %.cast108 = inttoptr i32 %.lvl.1107 to float*   ; <float*> [#uses=1]
  %23 = load float* %.cast108, align 4            ; <float> [#uses=1]
  %.base.cast109 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.0110 = mul i32 24, 0                      ; <i32> [#uses=1]
  %.lvl.0111 = add i32 %.base.cast109, %.idx.0110 ; <i32> [#uses=1]
  %.idx.1112 = mul i32 4, 5                       ; <i32> [#uses=1]
  %.lvl.1113 = add i32 %.lvl.0111, %.idx.1112     ; <i32> [#uses=1]
  %.cast114 = inttoptr i32 %.lvl.1113 to float*   ; <float*> [#uses=1]
  %24 = load float* %.cast114, align 4            ; <float> [#uses=1]
  %25 = fcmp une float %23, %24                   ; <i1> [#uses=1]
  %26 = zext i1 %25 to i32                        ; <i32> [#uses=1]
  %.base.cast115 = ptrtoint [6 x i32]* @float_cmp to i32 ; <i32> [#uses=1]
  %.idx.0116 = mul i32 24, 0                      ; <i32> [#uses=1]
  %.lvl.0117 = add i32 %.base.cast115, %.idx.0116 ; <i32> [#uses=1]
  %.idx.1118 = mul i32 4, 5                       ; <i32> [#uses=1]
  %.lvl.1119 = add i32 %.lvl.0117, %.idx.1118     ; <i32> [#uses=1]
  %.cast120 = inttoptr i32 %.lvl.1119 to i32*     ; <i32*> [#uses=1]
  store i32 %26, i32* %.cast120, align 4
  %27 = fadd float %5, %2                         ; <float> [#uses=1]
  %28 = fsub float %27, %8                        ; <float> [#uses=1]
  %29 = fadd float %28, 0.000000e+00              ; <float> [#uses=1]
  ret float %29
}

define i32 @start() nounwind {
entry:
  br label %bb

bb:                                               ; preds = %bb, %entry
  %i.04 = phi i32 [ 0, %entry ], [ %12, %bb ]     ; <i32> [#uses=3]
  %reg.03 = phi i32 [ 1532671764, %entry ], [ %11, %bb ] ; <i32> [#uses=5]
  %scevgep10.base.cast = ptrtoint [6 x i32]* @int_x to i32 ; <i32> [#uses=1]
  %scevgep10.idx.0 = mul i32 24, 0                ; <i32> [#uses=1]
  %scevgep10.lvl.0 = add i32 %scevgep10.base.cast, %scevgep10.idx.0 ; <i32> [#uses=1]
  %scevgep10.idx.1 = mul i32 4, %i.04             ; <i32> [#uses=1]
  %scevgep10.lvl.1 = add i32 %scevgep10.lvl.0, %scevgep10.idx.1 ; <i32> [#uses=1]
  %scevgep10.cast = inttoptr i32 %scevgep10.lvl.1 to i32* ; <i32*> [#uses=1]
  %scevgep11.base.cast = ptrtoint [6 x i32]* @int_y to i32 ; <i32> [#uses=1]
  %scevgep11.idx.0 = mul i32 24, 0                ; <i32> [#uses=1]
  %scevgep11.lvl.0 = add i32 %scevgep11.base.cast, %scevgep11.idx.0 ; <i32> [#uses=1]
  %scevgep11.idx.1 = mul i32 4, %i.04             ; <i32> [#uses=1]
  %scevgep11.lvl.1 = add i32 %scevgep11.lvl.0, %scevgep11.idx.1 ; <i32> [#uses=1]
  %scevgep11.cast = inttoptr i32 %scevgep11.lvl.1 to i32* ; <i32*> [#uses=1]
  %0 = lshr i32 %reg.03, 20                       ; <i32> [#uses=1]
  %1 = lshr i32 %reg.03, 8                        ; <i32> [#uses=1]
  %2 = xor i32 %0, %1                             ; <i32> [#uses=1]
  %3 = and i32 %2, 1                              ; <i32> [#uses=1]
  %4 = shl i32 %reg.03, 1                         ; <i32> [#uses=1]
  %5 = or i32 %3, %4                              ; <i32> [#uses=2]
  store i32 %5, i32* %scevgep10.cast, align 4
  %6 = lshr i32 %reg.03, 19                       ; <i32> [#uses=1]
  %7 = lshr i32 %reg.03, 7                        ; <i32> [#uses=1]
  %8 = xor i32 %6, %7                             ; <i32> [#uses=1]
  %9 = and i32 %8, 1                              ; <i32> [#uses=1]
  %10 = shl i32 %5, 1                             ; <i32> [#uses=1]
  %11 = or i32 %10, %9                            ; <i32> [#uses=2]
  store i32 %11, i32* %scevgep11.cast, align 4
  %12 = add nsw i32 %i.04, 1                      ; <i32> [#uses=2]
  %exitcond9 = icmp eq i32 %12, 6                 ; <i1> [#uses=1]
  br i1 %exitcond9, label %bb3, label %bb

bb3:                                              ; preds = %bb3, %bb
  %i.12 = phi i32 [ %27, %bb3 ], [ 0, %bb ]       ; <i32> [#uses=3]
  %reg.11 = phi i32 [ %25, %bb3 ], [ -1418639879, %bb ] ; <i32> [#uses=5]
  %scevgep.base.cast = ptrtoint [6 x i16]* @short_x to i32 ; <i32> [#uses=1]
  %scevgep.idx.0 = mul i32 12, 0                  ; <i32> [#uses=1]
  %scevgep.lvl.0 = add i32 %scevgep.base.cast, %scevgep.idx.0 ; <i32> [#uses=1]
  %scevgep.idx.1 = mul i32 2, %i.12               ; <i32> [#uses=1]
  %scevgep.lvl.1 = add i32 %scevgep.lvl.0, %scevgep.idx.1 ; <i32> [#uses=1]
  %scevgep.cast = inttoptr i32 %scevgep.lvl.1 to i16* ; <i16*> [#uses=1]
  %scevgep8.base.cast = ptrtoint [6 x i16]* @short_y to i32 ; <i32> [#uses=1]
  %scevgep8.idx.0 = mul i32 12, 0                 ; <i32> [#uses=1]
  %scevgep8.lvl.0 = add i32 %scevgep8.base.cast, %scevgep8.idx.0 ; <i32> [#uses=1]
  %scevgep8.idx.1 = mul i32 2, %i.12              ; <i32> [#uses=1]
  %scevgep8.lvl.1 = add i32 %scevgep8.lvl.0, %scevgep8.idx.1 ; <i32> [#uses=1]
  %scevgep8.cast = inttoptr i32 %scevgep8.lvl.1 to i16* ; <i16*> [#uses=1]
  %13 = lshr i32 %reg.11, 20                      ; <i32> [#uses=1]
  %14 = lshr i32 %reg.11, 8                       ; <i32> [#uses=1]
  %15 = xor i32 %13, %14                          ; <i32> [#uses=1]
  %16 = and i32 %15, 1                            ; <i32> [#uses=1]
  %17 = shl i32 %reg.11, 1                        ; <i32> [#uses=1]
  %18 = or i32 %16, %17                           ; <i32> [#uses=2]
  %19 = trunc i32 %18 to i16                      ; <i16> [#uses=1]
  store i16 %19, i16* %scevgep.cast, align 2
  %20 = lshr i32 %reg.11, 19                      ; <i32> [#uses=1]
  %21 = lshr i32 %reg.11, 7                       ; <i32> [#uses=1]
  %22 = xor i32 %20, %21                          ; <i32> [#uses=1]
  %23 = and i32 %22, 1                            ; <i32> [#uses=1]
  %24 = shl i32 %18, 1                            ; <i32> [#uses=1]
  %25 = or i32 %24, %23                           ; <i32> [#uses=2]
  %26 = trunc i32 %25 to i16                      ; <i16> [#uses=1]
  store i16 %26, i16* %scevgep8.cast, align 2
  %27 = add nsw i32 %i.12, 1                      ; <i32> [#uses=2]
  %exitcond = icmp eq i32 %27, 6                  ; <i1> [#uses=1]
  br i1 %exitcond, label %bb5, label %bb3

bb5:                                              ; preds = %bb3
  %.base.cast = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.0 = mul i32 24, 0                         ; <i32> [#uses=1]
  %.lvl.0 = add i32 %.base.cast, %.idx.0          ; <i32> [#uses=1]
  %.idx.1 = mul i32 4, 0                          ; <i32> [#uses=1]
  %.lvl.1 = add i32 %.lvl.0, %.idx.1              ; <i32> [#uses=1]
  %.cast = inttoptr i32 %.lvl.1 to float*         ; <float*> [#uses=1]
  store float 0x3FAC480620000000, float* %.cast, align 4
  %.base.cast1 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.02 = mul i32 24, 0                        ; <i32> [#uses=1]
  %.lvl.03 = add i32 %.base.cast1, %.idx.02       ; <i32> [#uses=1]
  %.idx.14 = mul i32 4, 1                         ; <i32> [#uses=1]
  %.lvl.15 = add i32 %.lvl.03, %.idx.14           ; <i32> [#uses=1]
  %.cast6 = inttoptr i32 %.lvl.15 to float*       ; <float*> [#uses=1]
  store float 0x3FE3AE7F60000000, float* %.cast6, align 4
  %.base.cast7 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.08 = mul i32 24, 0                        ; <i32> [#uses=1]
  %.lvl.09 = add i32 %.base.cast7, %.idx.08       ; <i32> [#uses=1]
  %.idx.110 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.111 = add i32 %.lvl.09, %.idx.110         ; <i32> [#uses=1]
  %.cast12 = inttoptr i32 %.lvl.111 to float*     ; <float*> [#uses=1]
  store float 0xBFFF6FC040000000, float* %.cast12, align 4
  %.base.cast13 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.014 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.015 = add i32 %.base.cast13, %.idx.014    ; <i32> [#uses=1]
  %.idx.116 = mul i32 4, 3                        ; <i32> [#uses=1]
  %.lvl.117 = add i32 %.lvl.015, %.idx.116        ; <i32> [#uses=1]
  %.cast18 = inttoptr i32 %.lvl.117 to float*     ; <float*> [#uses=1]
  store float 0x3FABA7FC40000000, float* %.cast18, align 4
  %.base.cast19 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.020 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.021 = add i32 %.base.cast19, %.idx.020    ; <i32> [#uses=1]
  %.idx.122 = mul i32 4, 4                        ; <i32> [#uses=1]
  %.lvl.123 = add i32 %.lvl.021, %.idx.122        ; <i32> [#uses=1]
  %.cast24 = inttoptr i32 %.lvl.123 to float*     ; <float*> [#uses=1]
  store float 0x3FE99C8000000000, float* %.cast24, align 4
  %.base.cast25 = ptrtoint [6 x float]* @float_x to i32 ; <i32> [#uses=1]
  %.idx.026 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.027 = add i32 %.base.cast25, %.idx.026    ; <i32> [#uses=1]
  %.idx.128 = mul i32 4, 5                        ; <i32> [#uses=1]
  %.lvl.129 = add i32 %.lvl.027, %.idx.128        ; <i32> [#uses=1]
  %.cast30 = inttoptr i32 %.lvl.129 to float*     ; <float*> [#uses=1]
  store float 0x3FF1B33FC0000000, float* %.cast30, align 4
  %.base.cast31 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.032 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.033 = add i32 %.base.cast31, %.idx.032    ; <i32> [#uses=1]
  %.idx.134 = mul i32 4, 0                        ; <i32> [#uses=1]
  %.lvl.135 = add i32 %.lvl.033, %.idx.134        ; <i32> [#uses=1]
  %.cast36 = inttoptr i32 %.lvl.135 to float*     ; <float*> [#uses=1]
  store float 0xBFD4C300A0000000, float* %.cast36, align 4
  %.base.cast37 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.038 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.039 = add i32 %.base.cast37, %.idx.038    ; <i32> [#uses=1]
  %.idx.140 = mul i32 4, 1                        ; <i32> [#uses=1]
  %.lvl.141 = add i32 %.lvl.039, %.idx.140        ; <i32> [#uses=1]
  %.cast42 = inttoptr i32 %.lvl.141 to float*     ; <float*> [#uses=1]
  store float 0xBFFC17BFA0000000, float* %.cast42, align 4
  %.base.cast43 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.044 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.045 = add i32 %.base.cast43, %.idx.044    ; <i32> [#uses=1]
  %.idx.146 = mul i32 4, 2                        ; <i32> [#uses=1]
  %.lvl.147 = add i32 %.lvl.045, %.idx.146        ; <i32> [#uses=1]
  %.cast48 = inttoptr i32 %.lvl.147 to float*     ; <float*> [#uses=1]
  store float 0x3FF2154000000000, float* %.cast48, align 4
  %.base.cast49 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.050 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.051 = add i32 %.base.cast49, %.idx.050    ; <i32> [#uses=1]
  %.idx.152 = mul i32 4, 3                        ; <i32> [#uses=1]
  %.lvl.153 = add i32 %.lvl.051, %.idx.152        ; <i32> [#uses=1]
  %.cast54 = inttoptr i32 %.lvl.153 to float*     ; <float*> [#uses=1]
  store float 0xBFC4CE0320000000, float* %.cast54, align 4
  %.base.cast55 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.056 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.057 = add i32 %.base.cast55, %.idx.056    ; <i32> [#uses=1]
  %.idx.158 = mul i32 4, 4                        ; <i32> [#uses=1]
  %.lvl.159 = add i32 %.lvl.057, %.idx.158        ; <i32> [#uses=1]
  %.cast60 = inttoptr i32 %.lvl.159 to float*     ; <float*> [#uses=1]
  store float 0x3FB2B3FEA0000000, float* %.cast60, align 4
  %.base.cast61 = ptrtoint [6 x float]* @float_y to i32 ; <i32> [#uses=1]
  %.idx.062 = mul i32 24, 0                       ; <i32> [#uses=1]
  %.lvl.063 = add i32 %.base.cast61, %.idx.062    ; <i32> [#uses=1]
  %.idx.164 = mul i32 4, 5                        ; <i32> [#uses=1]
  %.lvl.165 = add i32 %.lvl.063, %.idx.164        ; <i32> [#uses=1]
  %.cast66 = inttoptr i32 %.lvl.165 to float*     ; <float*> [#uses=1]
  store float 0x3FD3D0FE80000000, float* %.cast66, align 4
  %28 = tail call i32 @test_ints() nounwind       ; <i32> [#uses=1]
  %29 = tail call float @test_floats() nounwind   ; <float> [#uses=1]
  %30 = fptosi float %29 to i32                   ; <i32> [#uses=1]
  %31 = tail call signext i16 @test_shorts() nounwind ; <i16> [#uses=1]
  %32 = sext i16 %31 to i32                       ; <i32> [#uses=1]
  %33 = xor i32 %30, %28                          ; <i32> [#uses=1]
  %34 = xor i32 %33, %32                          ; <i32> [#uses=1]
  ret i32 %34
}
